Content-Length: 3122
{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":46632,"clientInfo":{"name":"vscode","version":"1.64.1"},"rootPath":"d:\\TOTVS 12\\Microsiga\\Protheus\\ProjetoVSCode","rootUri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{"launchArgs":["--log-file=totvsls.log","--record=totvsls"]},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode","name":"ProjetoVSCode"}]}}
Content-Length: 52
{"jsonrpc":"2.0","method":"initialized","params":{}}
Content-Length: 7594
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode/04_CONTABIL/MCT1CLI.prw","languageId":"advpl","version":1,"text":"#Include \"rwmake.ch\"\r\n#Include \"Colors.ch\"\r\n#Include \"Protheus.ch\"  \r\n#Include \"Topconn.ch\"\r\n    \r\n/*\r\nPrograma ...: MCT1CLI.Prw\r\nUso ........: Contabilidade Siga CTB/FATURAMENTO\r\nData .......: 24/11/2021\r\nFeito por ..: Bruno Lage Ferreira\r\nCopyright @1998-2001,2021\r\nAtualizado..: \r\n\r\nNome do Arquivo:\r\n*/     \r\nUser Function M030Inc()  \r\n/*****************************\r\n*   Ponto de entrada apos gravacao dos dados do SA1\r\n*   // INCLUSAO\r\n*/                \r\n  \r\n/*\r\nChamada para o item contabil\r\n*/\r\nIf PARAMIXB # 3\r\n\tU_MCT1CLI()\r\nEndIf\r\n\r\nReturn(.T.)\r\n\r\nUser Function MCT1CLI()\r\n************************************************************************************************\r\n* // Vinculo ao ponto de entrada M030INC()\r\n* // \r\n***  \r\n\t//+----------------------------------------------------------+\r\n\t//| Declaração de Variáveis                                  |\r\n\t//+----------------------------------------------------------+\r\n\tLocal aAreaOld\t:= GetArea()\r\n\tLocal cBaseCTA\t:= \"11201\"\r\n\tLocal cUltCTA\t:= \"\"\r\n\tLocal cUltRed\t:= \"\"\r\n\tLocal cQuery\t:= \"\"\r\n\tLocal cQueryA1\t:= \"\"\r\n\t\r\n\tLocal cCtaRef\t:= PadR(\"1.01.02.02.01\",TamSx3(\"CVD_CTAREF\")[1])\r\n\tLocal cCtaSup\t:= PadR(\"1.01.02.02\"   ,TamSx3(\"CVD_CTAREF\")[1])\r\n\r\n\tLocal cMsgStop\t:= \"\"\r\n\tLocal lGravou\t:= .T.\r\n\r\n\t//+----------------------------------------------------------+\r\n\t//| Fecha areas de trabalho abertas                          |\r\n\t//+----------------------------------------------------------+\t\r\n\tIf Select(\"MAXCTA\") > 0\r\n\t\tdbSelectArea(\"MAXCTA\")\r\n\t\tdbCloseArea()\r\n\tEndIf\r\n\r\n\tIf Select(\"CTACLI\") > 0\r\n\t\tdbSelectArea(\"CTACLI\")\r\n\t\tdbCloseArea()\r\n\tEndIf\r\n\r\n\t//+----------------------------------------------------------+\r\n\t//| Verifica se ja tem cliente com esta base de CNPJ         |\r\n\t//| para pegar a conta contabil dele                         |\r\n\t//+----------------------------------------------------------+\t\r\n\tcQueryA1 := \"SELECT A1_CONTA \" + CRLF\r\n\tcQueryA1 += \"FROM \" + RetSqlName(\"SA1\") + \" SA1 \" + CRLF\r\n\tcQueryA1 += \"WHERE D_E_L_E_T_ <> '*' \"  + CRLF\r\n\tcQueryA1 += \" AND ((A1_TIPO = 'J' AND SUBSTR(A1_CGC,1,8) = '\"+Substr(SA1->A1_CGC,1,8)+\"') OR (A1_TIPO <> 'J' AND A1_CGC = '\"+SA1->A1_CGC+\"')) \"\r\n\r\n\t//+---------------------------------------------------+\r\n\t//| Grava a query no log                              |\r\n\t//+---------------------------------------------------+\r\n\t//MemoWrite(CLOGPATH+'RCTBM001_MCT1CLI.sql',cQueryA1)\r\n\r\n\r\n\t//TcQuery cQueryA1 New Alias \"CTACLI\"\r\n\t\r\n\t//dbSelectArea(\"CTACLI\")\r\n\t//dbGoTop()\r\n\r\n\t/*\r\n\tIf CTACLI->(!Eof()) .AND. !Empty(CTACLI->A1_CONTA)\r\n\r\n\t\tcUltCTA := CTACLI->A1_CONTA\r\n\r\n\tElse \r\n\t*/\r\n\tcQuery := \" SELECT TOP 1 * FROM (\r\n\tcQuery += \" SELECT ROW_NUMBER() OVER(ORDER BY REPLACE(CT1_CONTA,'11201','') ) AS ROW1,\r\n\tcQuery += \" \t\tCT1_CONTA ULCTA, \r\n\tcQuery += \" \t\tCAST(REPLACE(CT1_CONTA,'11201','') AS INTEGER) COD_INTEIRO,\r\n\tcQuery += \" \t\tREPLACE(CT1_CONTA,'11201','') CODIGO,\r\n\tcQuery += \" \t\t(SELECT MAX(CT1_RES) FROM CT1010 (nolock) WHERE D_E_L_E_T_ = '' ) ULTRES  \r\n\tcQuery += \"   FROM CT1010 (nolock) CT1 \r\n\tcQuery += \"  WHERE D_E_L_E_T_ <> '*' \r\n\tcQuery += \"    AND SUBSTRING(CT1_CONTA,1,5) = '11201'\r\n\tcQuery += \"    AND REPLACE(CT1_CONTA,'11201','') <> ''\r\n\tcQuery += \"    AND Len(REPLACE(CT1_CONTA,'11201',''))=4\r\n\tcQuery += \"  )TAB\r\n \tcQuery += \" WHERE ROW1<>COD_INTEIRO\r\n\r\n\t//MemoWrite(CLOGPATH+'RCTBM001_MCT1CLI1.sql',cQuery)\r\n\r\n\tTcQuery cQuery New Alias MAXCTA\r\n\r\n\tdbSelectArea(\"MAXCTA\")\r\n\tdbGoTop()\r\n\t\r\n\t//+----------------------------------------------------------+\r\n\t//| Se trouxer resultados, coleta e grava na CT1             |\r\n\t//+----------------------------------------------------------+\r\n\tIf MAXCTA->(!Eof())\r\n\t\t\r\n\t\tcUltCTA\t:= STRZERO(MAXCTA->ROW1 , 4)\r\n\t\tcUltRED\t:= SOMA1(Alltrim(MAXCTA->ULTRES))\r\n\r\n\t\t//+---------------------+\r\n\t\t//| Grava os Dados      |\r\n\t\t//+---------------------+\r\n\t\tdbSelectArea(\"CT1\")\r\n\r\n\t\tIf  Reclock(\"CT1\",.T.)\r\n\t\t\r\n\t\t\tCT1_FILIAL\t:= xFilial(\"CT1\")\r\n\t\t\tCT1_CONTA\t:= cBaseCTA+cUltCTA\r\n\t\t\tCT1_CTASUP  := cBaseCTA\r\n\t\t\tCT1_DESC01\t:= SA1->A1_NOME\r\n\t\t\tCT1_RES\t\t:= cUltRED\r\n\t\t\tCT1_CLASSE\t:= '2'\r\n\t\t\tCT1_DTEXIS\t:= CTOD(\"01/01/1980\")\r\n\t\t\tCT1_BLOQ\t:= '2'\r\n\t\t\tCT1_NORMAL\t:= '1'\r\n\t\t\tCT1_NTSPED\t:= '01'\r\n\t\t\tCT1_NATCTA\t:= '01'\r\n\t\t\tMsUnlock(\"CT1\")\r\n\t\t\t\r\n\t\t\t//+----------------------------------------------------------+\r\n\t\t\t//| Dados da Amarracao Conta x Referencial                   |\r\n\t\t\t//+----------------------------------------------------------+\t\r\n\t\t\tIf Reclock(\"CVD\",.T.)\r\n\t\t\t\tCVD->CVD_FILIAL := xFilial('CVD')\r\n\t\t\t\tCVD->CVD_CONTA \t:= cUltCTA     \r\n\t\t\t\tCVD->CVD_ENTREF := PadR('10',TamSx3('CVD_ENTREF')[1])         \r\n\t\t\t\tCVD->CVD_CTAREF\t:= cCtaRef \r\n\t\t\t\tCVD->CVD_TPUTIL := 'A' \t\r\n\t\t\t\tCVD->CVD_CODPLA := PadR('001',TamSx3('CVD_CODPLA')[1])       \r\n\t\t\t\tCVD->CVD_CLASSE := '2'\r\n\t\t\t\tCVD->CVD_NATCTA := '02'\r\n\t\t\t\tCVD->CVD_CTASUP := cCtaSup\r\n\t\t\t\tCVD->CVD_CUSTO\t:= '' \r\n\r\n\t\t\t\tMsUnlock(\"CVD\")\r\n\t\t\tElse\r\n\t\t\t\tcMsgStop := \"Não conseguiu gravar amarracao plano de contas x referencial\" \r\n\t\t\t\tConOut(cMsgStop)\r\n\t\t\t\tMsgStop(cMsgStop)\r\n\t\t\tEndIf\r\n\t\t\t\r\n\r\n\t\tElse\r\n\r\n\t\t\tlGravou := .F.\r\n\t\t\tcMsgStop := \"Nao conseguiu gravar conta contabil e amarracao plano de contas x Referencial\"\r\n\t\t\tConOut(cMsgStop)\r\n\t\t\tMsgStop(cMsgStop)\r\n\t\tEndIf\t\r\n\t\r\n\tEndIf\r\n\t/*\r\n\tEndIf\r\n\t*/\r\n\t//+----------------------------------------------------+\r\n\t//| Grava a conta contabil no fornecedor               |\r\n\t//+----------------------------------------------------+\r\n\tIf lGravou\r\n\r\n\t\tIf Reclock(\"SA1\",.F.)\r\n\t\t\r\n\t\t\tSA1->A1_CONTA\t:= cBaseCTA+cUltCTA\r\n\t\t\t\r\n\t\t\tSA1->(MsUnlock())\r\n\r\n\t\tElse\r\n\r\n\t\t\tcMsgStop := \"Nao foi possivel gravar a conta contabil no cadastro do fornecedor (A1_CONTA)\"\r\n\t\t\tConOut(cMsgStop)\r\n\t\t\tMsgStop(cMsgStop)\r\n\t\t\r\n\t\tEndIf\r\n\r\n\tEndIf\t\r\n\t\r\n   \t//+----------------------------------------------------------+\r\n\t//| Fecha areas de trabalho abertas                          |\r\n\t//+----------------------------------------------------------+\t\r\n\tIf Select(\"MAXCTA\") > 0\r\n\t\tdbSelectArea(\"MAXCTA\")\r\n\t\tdbCloseArea()\r\n\tEndIf\r\n\r\n\tIf Select(\"CTACLI\") > 0\r\n\t\tdbSelectArea(\"CTACLI\")\r\n\t\tdbCloseArea()\r\n\tEndIf\t\t\r\n\r\n\t//+----------------------------------------------------------+\r\n\t//| Restaura a posição de memoria e ponteiro de arquivos     |\r\n\t//+----------------------------------------------------------+\t\r\n\tRestArea(aAreaOld) \r\n\t\r\n\t//+----------------------------------------------------------+\r\n\t//| Limpa Variaveis e memoria                                |\r\n\t//+----------------------------------------------------------+\r\n\taAreaOld := aSize(aAreaOld,0)\r\n\taAreaOld := Nil\t\t\r\n\r\nReturn\r\n"}}}
Content-Length: 705
{"jsonrpc":"2.0","id":1,"method":"$totvsserver/reconnect","params":{"reconnectInfo":{"connectionToken":"djM6djF5aTBwNzQ4bm1ranViaXNrbGl4aW93NXFneDQ6MToxOTIuMTY4LjEuMTAxOjEyMzY6MDo3LjAwLjE5MTIwNVA6Mw==:djE6Y29tcGlsYV9xOkFkbWluOi9WZmpIeDlnVmxGN1FTcU01L3BiYmVhbWU3cTI0VUVVL2hlOTdhcXlsOTQ9|djI6MTY0NDM1MDQ3NDowOjE6MQ==.IuTqgC1MCFf2COP8/C5azue2a0sKTxGFbmxkL4CVeDPtDsFA1TfZFcZhqRaUhoW0pcMCCKmyfJvg8K2e/oqoTRvnNCSOEsyd/r/eIUdRm6yku4yoblae/ic5ZJcv6iZ1iMGbhnqOdQavEpo7ItgZ9m1g0OJihWdsVp5qTMVwuUuFBqHL0LcVvsspyQeZzs0n9y3CG4VaioZ/xZcwAwlZewjKMU7o8a0edgsdbFnr1ZTCIIdURv9yU25VLD8TerAzKVDQArqq8otUhkRs+nOgJfsQgaRXhtUbdwiWrFlh45dujY60Bug2hG10ilaCwvfbHswnunsFmq7NQRF51Atenw==","serverName":"SRV_DEVELOPER","connType":3}}}
Content-Length: 679
{"jsonrpc":"2.0","id":2,"method":"$totvsserver/serverPermissions","params":{"serverPermissionsInfo":{"connectionToken":"djM6djF5aTBwNzQ4bm1ranViaXNrbGl4aW93NXFneDQ6MToxOTIuMTY4LjEuMTAxOjEyMzY6MDo3LjAwLjE5MTIwNVA6Mw==:djE6Y29tcGlsYV9xOkFkbWluOi9WZmpIeDlnVmxGN1FTcU01L3BiYmVhbWU3cTI0VUVVL2hlOTdhcXlsOTQ9|djI6MTY0NDQwNDQzMTowOjE6MQ==.cVxMhEjvI+Htho1irx+SzT3aHIMdUsLKGQRUog0R318jtKa80icJ+9jZqZF0kvJWPMg6/+q2uJI/JsqFgMgDS1buSr5jTQmoLFmzj0u51insCAYzHtgZwV3f+dobf6yz/U4voX2mmXSu4Eg4H9cmFl65yQ8wFG1jQ+fH56bw19ENBTIuiL3K9mjYj8hyJWDaEcAO5ofQHjxuythr/MOZW2yfFA05CDiPwgiBVSVjqxn+KYhFzAaCjD4H0F414Zy6D4x7VKXmltHAzhlfaOBssa1Kg1GRvYsYR32hpofPEvJMc3qySfyRuIHgLtonzEWxP+ThrMKacVgrUInwzJ4wFA=="}}}
Content-Length: 183
{"jsonrpc":"2.0","id":3,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"includes","value":"D:\\TOTVS 12\\Microsiga\\Protheus\\include;"}}}
Content-Length: 148
{"jsonrpc":"2.0","id":4,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"fsencoding","value":"cp1252"}}}
Content-Length: 146
{"jsonrpc":"2.0","id":5,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"autocomplete","value":"LS"}}}
Content-Length: 153
{"jsonrpc":"2.0","id":6,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"notificationlevel","value":"none"}}}
Content-Length: 145
{"jsonrpc":"2.0","id":7,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"linter","value":"enabled"}}}
Content-Length: 148
{"jsonrpc":"2.0","id":8,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"fsencoding","value":"cp1252"}}}
Content-Length: 146
{"jsonrpc":"2.0","id":9,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"autocomplete","value":"LS"}}}
Content-Length: 154
{"jsonrpc":"2.0","id":10,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"notificationlevel","value":"none"}}}
Content-Length: 146
{"jsonrpc":"2.0","id":11,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"linter","value":"enabled"}}}
Content-Length: 76
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Content-Length: 110159
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode/06_FATURAMENTO_NOVO_COMERCIAL/MT410TOK.prw","languageId":"advpl","version":1,"text":"#INCLUDE \"rwmake.ch\"\r\n#INCLUDE \"protheus.ch\"\r\n#INCLUDE \"topconn.ch\"\r\n\r\n/*\r\nPrograma ...: MT410TOK.Prw\r\nUso ........: Validação do pedido de vendas\r\nData .......: 26/04/2019\r\nFeito por ..: Bruno Lage Ferreira \r\n\r\nMV_NDESCTP - DESCONTO NO PREÇO DE LISTA E UNITARIO\r\nNOVO\r\n*/\r\n\r\nUser Function MT410TOK()\r\n****************************************************************************************************************\r\n*   /* Programa para validar o pedido de venda tabela de preço de chapas - Qualitá */\r\n*\r\n****\r\nLocal   lRet      := .T.\r\nLocal   oProcess\r\nLocal   nOpc      := PARAMIXB[1]\r\nLocal   cQuery    := \"\"\r\nDefault lEnd      := .F.\r\n\r\n\r\nIf SubString(CNUMEMP,1,2) == \"01\" .And. (INCLUI == .T. .Or. nOpc == 1 .OR. ALTERA == .T.) .AND. (FUNNAME() <> \"GROA001\")\r\n\r\n\ta410Recalc()\r\n\r\n\toProcess := MsNewProcess():New({|lEnd| lRet := MValidPedV(@oProcess, @lEnd,@lRet) },\"Validando dados..\",\"Lendo Registros do Pedido de Vendas\",.T.) \r\n\tIf !IsBlind()     \r\n\t\tIf nOpc == 1 \r\n\t\t\tIf !Empty(M->C5_XIDMOB)\r\n\t\t\t\t\r\n\t\t\t\tcQuery := \"SELECT MAX(ZSA_IDMOB) ID FROM ZSA010 WHERE D_E_L_E_T_ =\t'' AND  ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\"'\"\r\n\t\t\t\ttcQuery cQuery alias TRB_EMOB new\r\n\t\t\t\tdbSelectArea(\"TRB_EMOB\")\r\n\t\t\t\tdbgotop()\r\n\r\n\t\t\t\tIf !EMPTY(TRB_EMOB->ID)\r\n\t\t\t\t\tAlert(\"Este P.Venda deve ser excluído pelo MogGran!\")\r\n\t\t\t\t\tdbSelectArea(\"TRB_EMOB\") \r\n\t\t\t\t\tdbCloseArea()\r\n\t\t\t\t\tReturn(.f.)\r\n\t\t\t\tEndIf\r\n\r\n\t\t\t\tdbSelectArea(\"TRB_EMOB\") \r\n\t\t\t\tdbCloseArea()\r\n\r\n\t\t\tEndIF\r\n\t\tEndIf\r\n\t\toProcess:Activate()\r\n\telse\r\n\t\tlRet := MValidPedV(nil, @lEnd,@lRet)\r\n\tEndIf\r\nEndIf\r\n\r\nReturn(lRet)\r\n\r\nUser Function M410LIOK()\r\n****************************************************************************************************************\r\n*    Libera ou bloquea linha do pedido de venda \r\n*\r\n****\r\nLocal lRet   := .T.\r\nLocal cQuery := \"\"\r\n\r\n/*\r\nLinhaOk\r\n*/\r\nIf SubString(CNUMEMP,1,2) == \"01\" \r\n\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",n))) ,1,2) $ 'BL' .AND. u_MTSOEST(GdFieldGet(\"C6_TES\",n)) \r\n\t\tIf Empty(GdFieldGet(\"C6_LOTECTL\",n))\r\n\t\t\tAlert(\"ERRO! BLOCO SEM LOTE!\")\r\n\t\t\tlRet := .F.\r\n\t\tEndIf\r\n\tEndIf\r\n\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",n))) ,1,2) $ 'CH' .AND. (Empty(GdFieldGet(\"C6_LOTECTL\",n)) .OR. Empty(GdFieldGet(\"C6_NUMLOTE\",n)))  \r\n\t\tAlert(\"ERRO! CHAPA COM LOTE OU SUB-LOTE EM BRANCO!\")\r\n\t\tlRet := .F.\r\n\tEndIf\r\nEndIf\r\n\r\n\r\n/*\r\nValida mobGran\r\n*/\r\ncQuery  := \" SELECT ZSA_PRCDES FROM ZSA010\r\ncQuery  += \"  WHERE D_E_L_E_T_ = ''\r\ncQuery  += \"  AND ZSA_PRCDES <> 0\r\n//cQuery  += \"  AND ZSA_STATUS = 'ATIVA'\r\ncQuery  += \"  AND ZSA_IDMOBP = '\"+ AllTrim(M->C5_XIDMOB)                    +\"'\r\ncQuery  += \"  AND ZSA_NUMCAV = '\"+ AllTrim(GdFieldGet(\"C6_YCAVALE\",n))      +\"'\r\ncQuery  += \"  AND ZSA_PROD   = '\"+ AllTrim(GdFieldGet(\"C6_PRODUTO\",n))      +\"'\r\ncQuery  += \"  AND ZSA_CLASSI = '\"+ AllTrim(GdFieldGet(\"C6_YCLASSI\",n))      +\"'\r\ncQuery  += \"  AND ZSA_LOTE   = '\"+ AllTrim(GdFieldGet(\"C6_LOTECTL\",n))      +\"'\r\n\r\ntcQuery cQuery alias TRB new\r\ndbSelectArea(\"TRB\")\r\ndbgotop()\r\n\r\nIf !EMPTY(TRB->ZSA_PRCDES)\r\n\tGdFieldPut(\"C6_XOFERTA\",'S')\r\nEndIf\r\n\r\ndbSelectArea(\"TRB\") \r\ndbCloseArea()\r\n\r\n\r\nReturn(lRet)\r\n\r\nUser Function MTSOEST(cCodTes)\r\n****************************************************************************************************************\r\n*    Libera ou bloquea linha do pedido de venda \r\n*\r\n****\r\nLocal lRet := .F.\r\n\r\ndbSelectArea(\"SF4\")\r\ndbSetOrder(1)\r\ndbSeek(xFilial(\"SF4\") + cCodTes)\r\n\r\nIf SF4->F4_ESTOQUE == \"S\"\r\n\tlRet := .T.\r\n\tConOut(\"MTSOEST\" +\"|\"+ cCodTes +\"|\"+ \".T.\" )\r\nElse\r\n\tConOut(\"MTSOEST\" +\"|\"+ cCodTes +\"|\"+ \".F.\" )\r\n\tlRet := .F.\r\nEndIf\r\n\r\nReturn(lRet)\r\n\r\nUser Function GM410FIM()\r\n****************************************************************************************************************\r\n*    Libera ou bloquea pedido de venda M410STTS \r\n*\r\n****\r\nLocal lLibBlq  := .F.\r\nLocal lCalcPeso:= .F.\r\nLocal cQuery   := \"\"\r\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\r\nlOCAL nX       := 0\r\n\r\nIf SubString(CNUMEMP,1,2) == \"01\"  .AND. (FUNNAME() <> \"GROA001\")\r\n\tFor nX := 1 To Len(aCols)\r\n\t\tIf !Empty(GdFieldGet(\"C6_XMOTBLQ\",nX)) .OR. !Empty(M->C5_XMOTBLQ)\r\n\t\t\tlLibBlq   := .T.\r\n\t\tEndIf\r\n\t\t\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\t\t\r\n\t\t\tlCalcPeso := .T.\r\n\t\tEndIf\r\n\tNext nX\r\n\t\r\n\tIf lLibBlq   \r\n\t\tRecLock(\"SC5\",.F.)\r\n\t\t\tSC5->C5_BLQ  := '1'\r\n\t\tMsUnlock()\t\r\n\tEndif\r\n\r\n\tIf  M->C5_TIPO $ \"D/B\"\r\n\t\tRecLock(\"SC5\",.F.)\r\n\t\t\tSC5->C5_BLQ  := ''\r\n\t\tMsUnlock()\t\r\n\tEndIf \r\n\r\n\tIf lCalcPeso\r\n\t\r\n\t\t//Soma dos pesos brutos e liquido\r\n\t\tcQuery   := \" SELECT\tROUND(SUM(B8_YPESOLQ) + SUM(PESO_AMOSTRAS),3) PLQ, \r\n\t\tcQuery   += \" \t\t    ROUND(SUM(B8_YPESOBR) + SUM(PESO_AMOSTRAS),3) PBR \r\n\t\tcQuery   += \" FROM (\r\n\t\tcQuery   += \" SELECT\t\tISNULL(ZGO.ZGO_INVOIC,'') AS ZGO_INVOIC, \r\n\t\tcQuery   += \" \t\t\tTAB_PROFORMA.* FROM (\r\n\t\tcQuery   += \" \t\t\t SELECT\tRTRIM(LTRIM(C5_NUM)) AS C5_NUM,\r\n\t\tcQuery   += \" \t\t\t\t\tYEAR(CAST(C5_EMISSAO AS DATE) )ANO,\r\n\t\tcQuery   += \" \t\t\t\t\tCAST(C5_EMISSAO AS DATE) AS C5_EMISSAO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_NOME)) AS A1_NOME,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_END)) AS A1_END,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_BAIRRO)) AS A1_BAIRRO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDI)) AS A1_DDI,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDD)) AS A1_DDD,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_TEL)) AS A1_TEL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_CONTATO)) AS A1_CONTATO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A3_NOME)) AS A3_NOME,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(YA_PAIS_I)) AS YA_PAIS_I,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XSEAL)) AS C5_XSEAL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XBOOKIN)) AS C5_XBOOKIN,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVESSEL)) AS C5_XVESSEL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XCONTAI)) AS C5_XCONTAI,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTARE)) AS C5_XTARE,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPO)) AS C5_XPO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_LOTECTL)) AS C6_LOTECTL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_NUMLOTE)) AS C6_NUMLOTE,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_CF,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_XPESO AS PESO_AMOSTRAS,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YESPLIQ * 100 AS C6_YESPLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(B5_YCEMEIN)) AS C6_DESCRI, \r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_DESCRI))  AS C6_DESCRI_P, \r\n\t\tcQuery   += \" \t\t\t\t\tIIF(RTRIM(LTRIM(C6_YCAVALE))='','-',RTRIM(LTRIM(C6_YCAVALE)))  AS C6_YCAVALE,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_PRCVEN,\r\n\t\tcQuery   += \" \t\t\t\t\tROUND(C6_PRCVEN / 10.764,2) AS PRCVEN_SQFT,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XVLRFIN AS VALOR_FINANCEIRO,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_QTDVEN,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_NUMLOTE<>'',1,0) AS QTD_CHAPAS,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',0,C6_QTDVEN) AS QTD_TOTAL_FATURAR,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='M2',C6_QTDVEN,0) AS QTD_TOTAL_M2,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='PC',C6_QTDVEN,0) AS QTD_TOTAL_PC,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_UM,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_UNSVEN,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_VALOR,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',C6_VALOR,0) AS SAMPLE_DESC,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_VALDESC,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YCOMLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YALTLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YTOTLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOLQ FROM SB8010 WHERE D_E_L_E_T_ = '' AND C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO AND B8_LOCAL = C6_LOCAL) ,0) AS  B8_YPESOLQ,\r\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOBR FROM SB8010 WHERE D_E_L_E_T_ = '' AND C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO AND B8_LOCAL = C6_LOCAL) ,0) AS  B8_YPESOBR,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XTESALE,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVALEXT)) AS C5_XVALEXT,\r\n\t\tcQuery   += \" \t\t\t\t\tUPPER(ISNULL(CONVERT(VARCHAR(MAX), CONVERT(VARBINARY(MAX), C5_YOBSEXT)),'')) AS C5_YOBSEXT,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESING))  AS E4_DESING,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESCRI))  AS E4_DESPOR,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPORTLO)) AS C5_XPORTLO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTPCONT)) AS C5_XTPCONT,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XINSURA)) AS C5_XINSURA,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFIMDES)) AS C5_XFIMDES,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFRFORW)) AS C5_XFRFORW,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XWLIMIT,\r\n\t\tcQuery   += \" \t\t\t\t\tCASE \r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'S' THEN 'STANDARD'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'C' THEN 'COMMERCIAL'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'P' THEN 'PREMIUM'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = '' AND C6_CF='7949' THEN 'SAMPLE'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = ''  THEN '' \r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'A' THEN 'SAMPLE'\r\n\t\tcQuery   += \" \t\t\t\t\tEND C6_YCLASSI,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XTOTAL,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XDESCON,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XPDESTI,\r\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT B8_LOTEFOR FROM SB8010 WHERE D_E_L_E_T_ = '' AND B8_LOTECTL = C6_LOTECTL AND B8_NUMLOTE = '' AND SUBSTRING(B8_PRODUTO,1,2) ='BL' ),'') AS LOTE_FORNECEDOR\r\n\t\tcQuery   += \" \t\t\t FROM SC6010 SC6 INNER JOIN SC5010 SC5\r\n\t\tcQuery   += \" \t\t\t\t   ON (C6_FILIAL = C5_FILIAL AND C6_NUM = C5_NUM )\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA1010 SA1\r\n\t\tcQuery   += \" \t\t\t\t   ON (A1_COD = C5_CLIENTE AND A1_LOJA = C5_LOJACLI )\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SYA010 SYA\r\n\t\tcQuery   += \" \t\t\t\t   ON (A1_PAIS = YA_CODGI)\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA3010\r\n\t\tcQuery   += \" \t\t\t\t   ON (A1_VEND=A3_COD)\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SB5010 SB5\r\n\t\tcQuery   += \" \t\t\t\t   ON (C6_PRODUTO = B5_COD)\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SE4010 SE4\r\n\t\tcQuery   += \" \t\t\t\t   ON (E4_CODIGO = C5_CONDPAG)\r\n\t\tcQuery   += \" \t\t\t WHERE SC6.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SC5.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SA1.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SYA.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SB5.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SE4.D_E_L_E_T_ = ''\r\n\t\t//cQuery   += \" \t\t\t   AND SC5.C5_BLQ <> '1'\r\n\t\tcQuery   += \" \t\t\t   AND C5_NUM = '\"+SC5->C5_NUM+\"'\r\n\t\tcQuery   += \" )TAB_PROFORMA\r\n\t\tcQuery   += \" \t FULL OUTER JOIN ZGO010 ZGO\r\n\t\tcQuery   += \" \t   ON (C5_NUM = ZGO_PEDIDO)\r\n\t\tcQuery   += \" WHERE C5_NUM <> ''\r\n\t\tcQuery   += \"   AND ISNULL(ZGO_INVOIC,'') LIKE '%%'\r\n\t\tcQuery   += \" )TB_PESO\r\n\t\t                                                          \r\n\t\ttcQuery cQuery alias TRB new\r\n\t\tdbSelectArea(\"TRB\")\r\n\t\tdbgotop()\r\n\t\t\r\n\t\tIF !M->C5_TIPO $ \"D/B\" .And. LEFT(AllTrim(GdFieldGet(\"C6_PRODUTO\",1)),2) <> 'BL'\r\n\t\t\tIF !EOF()\r\n\t\t\t\tdbSelectArea(\"SC5\")\t\t\r\n\t\t\t\tIf RecLock(\"SC5\",.f.)\r\n\t\t\t\t\tReplace SC5->C5_PESOL  With TRB->PLQ\r\n\t\t\t\t\tReplace SC5->C5_PBRUTO With TRB->PBR\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tIF TRB->PLQ > SC5->C5_PBRUTO \r\n\t\t\t\t\t\tAlert(\"Peso bruto esta menor que peso líquido. Favor corrigir!\")\r\n\t\t\t\t\t\tReplace SC5->C5_PBRUTO With 0\r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tMsUnLock()\r\n\t\t\t\tEndIf\t\r\n\t\t\tEndIf\r\n\t\tEndIf\t\t\t\t\r\n\t\tdbSelectArea(\"TRB\") \r\n\t\tdbCloseArea()\r\n\t\t\r\n\t\t//Soma da quantidade de bandos\r\n\t\tcQuery   := \" SELECT COUNT(*) QTD FROM (\r\n\t\tcQuery   += \" SELECT DISTINCT C6_YCAVALE FROM (\r\n\t\tcQuery   += \" SELECT\t\tISNULL(ZGO.ZGO_INVOIC,'') AS ZGO_INVOIC, \r\n\t\tcQuery   += \" \t\t\tTAB_PROFORMA.* FROM (\r\n\t\tcQuery   += \" \t\t\t SELECT\tRTRIM(LTRIM(C5_NUM)) AS C5_NUM,\r\n\t\tcQuery   += \" \t\t\t\t\tYEAR(CAST(C5_EMISSAO AS DATE) )ANO,\r\n\t\tcQuery   += \" \t\t\t\t\tCAST(C5_EMISSAO AS DATE) AS C5_EMISSAO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_NOME)) AS A1_NOME,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_END)) AS A1_END,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_BAIRRO)) AS A1_BAIRRO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDI)) AS A1_DDI,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDD)) AS A1_DDD,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_TEL)) AS A1_TEL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_CONTATO)) AS A1_CONTATO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A3_NOME)) AS A3_NOME,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(YA_PAIS_I)) AS YA_PAIS_I,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XSEAL)) AS C5_XSEAL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XBOOKIN)) AS C5_XBOOKIN,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVESSEL)) AS C5_XVESSEL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XCONTAI)) AS C5_XCONTAI,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTARE)) AS C5_XTARE,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPO)) AS C5_XPO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_LOTECTL)) AS C6_LOTECTL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_NUMLOTE)) AS C6_NUMLOTE,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_CF,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_XPESO AS PESO_AMOSTRAS,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YESPLIQ * 100 AS C6_YESPLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(B5_YCEMEIN)) AS C6_DESCRI, \r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_DESCRI))  AS C6_DESCRI_P, \r\n\t\tcQuery   += \" \t\t\t\t\tIIF(RTRIM(LTRIM(C6_YCAVALE))='','-',RTRIM(LTRIM(C6_YCAVALE)))  AS C6_YCAVALE,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_PRCVEN,\r\n\t\tcQuery   += \" \t\t\t\t\tROUND(C6_PRCVEN / 10.764,2) AS PRCVEN_SQFT,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XVLRFIN AS VALOR_FINANCEIRO,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_QTDVEN,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_NUMLOTE<>'',1,0) AS QTD_CHAPAS,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',0,C6_QTDVEN) AS QTD_TOTAL_FATURAR,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='M2',C6_QTDVEN,0) AS QTD_TOTAL_M2,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='PC',C6_QTDVEN,0) AS QTD_TOTAL_PC,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_UM,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_UNSVEN,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_VALOR,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',C6_VALOR,0) AS SAMPLE_DESC,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_VALDESC,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YCOMLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YALTLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YTOTLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOLQ FROM SB8010 WHERE D_E_L_E_T_ = '' AND  C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO) ,0) AS  B8_YPESOLQ,\r\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOBR FROM SB8010 WHERE D_E_L_E_T_ = '' AND C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO) ,0) AS  B8_YPESOBR,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XTESALE,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVALEXT)) AS C5_XVALEXT,\r\n\t\tcQuery   += \" \t\t\t\t\tUPPER(ISNULL(CONVERT(VARCHAR(MAX), CONVERT(VARBINARY(MAX), C5_YOBSEXT)),'')) AS C5_YOBSEXT,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESING))  AS E4_DESING,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESCRI))  AS E4_DESPOR,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPORTLO)) AS C5_XPORTLO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTPCONT)) AS C5_XTPCONT,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XINSURA)) AS C5_XINSURA,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFIMDES)) AS C5_XFIMDES,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFRFORW)) AS C5_XFRFORW,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XWLIMIT,\r\n\t\tcQuery   += \" \t\t\t\t\tCASE \r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'S' THEN 'STANDARD'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'C' THEN 'COMMERCIAL'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'P' THEN 'PREMIUM'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = '' AND C6_CF='7949' THEN 'SAMPLE'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = ''  THEN '' \r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'A' THEN 'SAMPLE'\r\n\t\tcQuery   += \" \t\t\t\t\tEND C6_YCLASSI,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XTOTAL,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XDESCON,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XPDESTI,\r\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT B8_LOTEFOR FROM SB8010 WHERE D_E_L_E_T_ = '' AND B8_LOTECTL = C6_LOTECTL AND B8_NUMLOTE = '' AND SUBSTRING(B8_PRODUTO,1,2) ='BL' ),'') AS LOTE_FORNECEDOR\r\n\t\tcQuery   += \" \t\t\t FROM SC6010 SC6 INNER JOIN SC5010 SC5\r\n\t\tcQuery   += \" \t\t\t\t   ON (C6_FILIAL = C5_FILIAL AND C6_NUM = C5_NUM )\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA1010 SA1\r\n\t\tcQuery   += \" \t\t\t\t   ON (A1_COD = C5_CLIENTE AND A1_LOJA = C5_LOJACLI )\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SYA010 SYA\r\n\t\tcQuery   += \" \t\t\t\t   ON (A1_PAIS = YA_CODGI)\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA3010\r\n\t\tcQuery   += \" \t\t\t\t   ON (A1_VEND=A3_COD)\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SB5010 SB5\r\n\t\tcQuery   += \" \t\t\t\t   ON (C6_PRODUTO = B5_COD)\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SE4010 SE4\r\n\t\tcQuery   += \" \t\t\t\t   ON (E4_CODIGO = C5_CONDPAG)\r\n\t\tcQuery   += \" \t\t\t WHERE SC6.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SC5.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SA1.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SYA.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SB5.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SE4.D_E_L_E_T_ = ''\r\n\t  //cQuery   += \"              --AND SC5.C5_BLQ <> '1'\r\n\t\tcQuery   += \" \t\t\t   AND C5_NUM = '\"+SC5->C5_NUM+\"'\r\n\t\tcQuery   += \" \r\n\t\tcQuery   += \" )TAB_PROFORMA\r\n\t\tcQuery   += \" \t FULL OUTER JOIN ZGO010 ZGO\r\n\t\tcQuery   += \" \t   ON (C5_NUM = ZGO_PEDIDO)\r\n\t\tcQuery   += \" WHERE C5_NUM <> ''\r\n\t   //cQuery  += \"   --AND ISNULL(ZGO_INVOIC,'') LIKE '%'+@INVOICE+'%'\r\n\t\tcQuery   += \" )TB_TOTAL_CAV\r\n\t\tcQuery   += \" WHERE C6_YCAVALE <> '-'\r\n\t\tcQuery   += \" )TB_QTD_CAV\r\n\t\t\r\n\t\t\r\n\t\ttcQuery cQuery alias TRB new\r\n\t\tdbSelectArea(\"TRB\")\r\n\t\tdbgotop()\r\n\t\t\r\n\t\tIF !EOF()\r\n\t\t\tdbSelectArea(\"SC5\")\t\t\r\n\t\t\tIf RecLock(\"SC5\",.f.)\r\n\t\t\t\tReplace SC5->C5_VOLUME1  With TRB->QTD  \r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf\t\r\n\t\tEndIf\r\n\t\t\t\t\t\t\r\n\t\tdbSelectArea(\"TRB\") \r\n\t\tdbCloseArea()\r\n\t\t\r\n\t\tIf RecLock(\"SC5\",.f.)\r\n\t\t\tIF SC5->C5_VOLUME1 == 0\r\n\t\t\t\tSC5->C5_VOLUME1 := 1\r\n\t\t\tEndIf\r\n\t\t\tMsUnLock()\r\n\t\tEndIf\t\r\n\t\t\r\n\tEndIf\r\n\r\nEndIf\r\n\r\nReturn()\r\n\r\n/*\r\nUser Function MDesTot()\r\n****************************************************************************************************************\r\n*    Programa dar o desconto  \r\n*\r\n****\r\nLocal nValorTemp := 0\r\n\r\nFor nX := 1 To Len(aCols)\r\n\t\tGdFieldPut(\"C6_DESCONT\",M->C5_DESC1,nX) \r\nNext nX\r\n\r\nReturn(.T.) \r\n*/\r\n\r\nStatic Function MValidPedV(oProcess, lEnd,lRet)\r\n****************************************************************************************************************\r\n*   /* Programa para validar o pedido de venda tabela de preço de chapas - Qualitá */\r\n*\r\n****\r\nLocal cQuery := \"\"\r\n\r\nLocal nPosCava := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_YCAVALE\"}) //Cavalete\r\nLocal nPosLOTE := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_LOTECTL\"}) //SubLote\r\nLocal nPosSUBL := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_NUMLOTE\"}) //Lote\r\nLocal nPosLOCA := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_LOCAL\"  }) //Lote\r\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\r\n\r\nLocal fTPBLQ   := .F.\r\n\r\nLocal aMsgPrc  := {}\r\nLoca  nX       := 0\r\n\r\nIf !IsBlind()     \r\n\toProcess:SetRegua1(8)\r\nEndIf\r\n\r\n/*\r\nSomente para Qualitá\r\n*/\r\nConOut(FUNNAME())\r\nIf SubString(CNUMEMP,1,2) == \"01\" .And. (INCLUI == .T. .Or. ALTERA == .T.) .AND. (FUNNAME() <> \"GROA001\")\r\n\r\n\r\n\tM->C5_XMOTBLQ := \"\"\r\n\r\n\t/*\r\n\tSomente para Mercado Externo\r\n\tValidação mercado interno campos FollowUp\r\n\t*/\r\n\tIf M->C5_YTIPO $ \"ME/MI\"\r\n\t\tIF M->C5_XSHOWFO == \"S\"\r\n\t\t\tIf Empty(M->C5_XFOLLST) .Or. Empty(M->C5_XPENDEN) .Or. Empty(M->C5_XDTLIBF)\r\n\t\t\t\tAlert(\"FollowUp='SIM'! O P.Venda não pode ser salvo sem as informações de Pendência/Situação/Data de Liberação. \")\t\r\n\t\t\t\tReturn(.F.)\r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\tEndIf\r\n\r\n\tcDesMoed := \"\"\r\n\toFont := TFont():New('Arial Black',,-18,.T.)\r\n\t\r\n\tIf     M->C5_MOEDA == 1\r\n\t\tcDesMoed := \"1 - (R$)   R E A L\"\r\n\tElseIf M->C5_MOEDA == 2\r\n\t\tcDesMoed := \"2 - ($)    D O L A R\"\r\n\tElseIf M->C5_MOEDA == 3\r\n\t\tcDesMoed := \"3 - (€)    E U R O\"\r\n\tEndIf\r\n\t\r\n\tIf !IsBlind()     \r\n\t\tDEFINE MSDIALOG _oDlgMoeda TITLE \"Moeda\" FROM u_MGETTELA(178),u_MGETTELA(181) TO u_MGETTELA(342),u_MGETTELA(577) PIXEL\r\n\t\t\t// Cria as Groups do Sistema\r\n\t\t\t@ u_MGETTELA(001),u_MGETTELA(003) TO u_MGETTELA(062),u_MGETTELA(195) LABEL \"\" PIXEL OF _oDlgMoeda\r\n\t\t\r\n\t\t\t// Cria Componentes Padroes do Sistema\r\n\t\t\t@ u_MGETTELA(009),u_MGETTELA(010) Say \"Pedido sendo salvo na moeda:\" Size u_MGETTELA(075),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgMoeda\r\n\t\t\t@ u_MGETTELA(033),u_MGETTELA(078) Say cDesMoed \t\t\t\t\t\t Size u_MGETTELA(090),u_MGETTELA(080) COLOR CLR_HMAGENTA FONT oFont PIXEL OF _oDlgMoeda\r\n\t\t\t@ u_MGETTELA(064),u_MGETTELA(156) Button \"OK\" ACTION(Close(_oDlgMoeda)) Size u_MGETTELA(037),u_MGETTELA(012) PIXEL OF _oDlgMoeda\r\n\t\tACTIVATE MSDIALOG _oDlgMoeda CENTERED \r\n\tEndIf\r\n\r\n\tConOut(\"******************************************\" )\r\n\tConOut(\"Inicio P.E = MT410TOK Qualitá\" )\r\n\tConOut(\"******************************************\" )\t\r\n\t/*\r\n\t****************************************************************\r\n\tConferencia da tabela de preço com o desconto cadastrado por classificação comercial\r\n\t****************************************************************\r\n\t*/\r\n\tdbSelectArea(\"SA1\")\r\n\tdbSetOrder(1)\r\n\tdbSeek(xFilial(\"SA1\") + M->C5_CLIENTE + M->C5_LOJACLI )\r\n\t\r\n\tIf !Empty(SA1->A1_INFDESC)\r\n\t\tAlert(\"Aviso! Este cliente possui um desconto padrão! Verifique sempre pela tela [F5].\")\r\n\tEndIf\r\n\t\r\n\tIF M->C5_TIPO $ \"D\"\r\n\t\tReturn(.T.)\r\n\tEndIf\r\n\t\r\n\tIf !IsBlind()     \r\n\t\toProcess:IncRegua1(\"[1-8] - Conferência da tabela de preço com o desconto cadastrado!\")  \r\n\tEndIf\r\n\r\n\tFor nX := 1 To Len(aCols)\r\n\t\t/*\r\n\t\tRegra geral de tabela de preços \r\n\t\t*/\r\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\t\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\t\t\t\r\n\t\t\tIf Empty(SA1->A1_TABELA)\r\n\r\n\t\t\t\tIf Empty(GdFieldGet(\"C6_YCLASSI\",nX))\r\n\t\t\t\t\tcClassif := \"P\"\r\n\t\t\t\tElse\r\n\t\t\t\t\tcClassif := AllTrim(GdFieldGet(\"C6_YCLASSI\",nX))\r\n\t\t\t\tEndIf\r\n\r\n\t\t\t\tIf GdFieldGet(\"C6_XOFERTA\",nX) == 'N'\r\n\r\n\t\t\t\t\tcQuery  := \" SELECT DA1_CODTAB,DA0_DESCRI,DA0_DESGER ,DA1_PRCVEN , CASE WHEN DA1_PERDES=0  THEN 1 WHEN DA1_PERDES<>0 THEN DA1_PERDES END  DA1_PERDES \r\n\t\t\t\t\tcQuery  += \"   FROM DA0010 DA0 \r\n\t\t\t\t\tcQuery  += \"        INNER JOIN DA1010 DA1 \r\n\t\t\t\t\tcQuery  += \" ON (DA0_CODTAB = DA1_CODTAB)\r\n\t\t\t\t\t\r\n\t\t\t\t\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) <> 'AM'\r\n\t\t\t\t\t\tcQuery  += \"  WHERE DA0_YCLASS IN ('\"+ cClassif +\"')\r\n\t\t\t\t\t\tcQuery  += \"    AND DA1_CODPRO = '\" + AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\"\t\t\r\n\t\t\t\t\tElse\r\n\t\t\t\t\t\tcQuery  += \"  WHERE DA1_CODPRO = '\" + AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\"\t\r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\tIF !EMPTY(SA1->A1_MULTTAB)\r\n\t\t\t\t\t\tcQuery  += \"    AND DA0_CODTAB IN (\"+AllTrim(SA1->A1_MULTTAB)+\")\"\r\n\t\t\t\t\tELSE\r\n\t\t\t\t\t\tcQuery  += \"    AND DA0_CODTAB IN ('000','001','002','003')\r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\tcQuery  += \"    AND DA0.D_E_L_E_T_ = ''\r\n\t\t\t\t\tcQuery  += \"    AND DA1.D_E_L_E_T_ = ''\r\n\t\t\t\t\t\r\n\t\t\t\t\ttcQuery cQuery alias TRB new\r\n\t\t\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\t\t\tdbgotop()\r\n\t\t\t\t\t\r\n\t\t\t\t\tIf Empty(TRB->DA1_PRCVEN) .and. !GDDeleted(nX) \r\n\t\t\t\t\t\tAlert(\"[C6_PRCVEN] - Tabela de preço não encontrada! Linha:(\" + Alltrim(str(nX)) +\") Confira a classif. do produto ou Mult.Tabelas preços no Cad. Cliente.\" )\r\n\t\t\t\t\t\tlRet := .F. \r\n\t\t\t\t\t\t//sleep(300)\t\r\n\t\t\t\t\t\tM->C5_BLQ  := '1'\r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t\r\n\t\t\t\t\t//If GdFieldGet(\"C6_PRCVEN\",nX) <  IIF(cClassif==\"P\",((TRB->DA1_PRCVEN - TRB->DA0_DESGER)),((TRB->DA1_PRCVEN * TRB->DA0_DESGER))) .and. !GDDeleted(nX)\r\n\t\t\t\t\tIf GdFieldGet(\"C6_PRCVEN\",nX) <  IIF(cClassif==\"P\",((TRB->DA1_PRCVEN - TRB->DA0_DESGER)),((TRB->DA1_PRCVEN))) .and. !GDDeleted(nX)\r\n\t\t\t\t\t\t//aAdd(aMsgPrc,\"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + Alltrim(str(nX))+\" Tabela de Preço:\" + AllTrim(TRB->DA1_CODTAB) + \"-\"+ AllTrim(TRB->DA0_DESCRI))  \r\n\t\t\t\t\t\taAdd(aMsgPrc,\"Cavalete:\"+GdFieldGet(\"C6_YCAVALE\",nX)+\" Tabela de Preço:\" + AllTrim(TRB->DA1_CODTAB) + \"-\"+ AllTrim(TRB->DA0_DESCRI) )\r\n\t\t\t\t\t\t//lRet := .F.\r\n\t\t\t\t\t\tConOut(\"******************************************\")\r\n\t\t\t\t\t\tConOut(\"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + Alltrim(str(nX)))\r\n\t\t\t\t\t\tConOut(\"******************************************\")\r\n\t\t\t\t\t\t//sleep(300)\r\n\t\t\t\t\t\tM->C5_BLQ  := '1'\t\r\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"PREÇO MENOR QUE A TABELA DE PREÇO:\"+ AllTrim(TRB->DA1_CODTAB),nX)\t\r\n\t\t\t\t\tELSE\r\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\r\n\t\t\t\t\tEndIf\r\n\r\n\t\t\t\t\tGdFieldPut(\"C6_PRCREF\",TRB->DA1_PRCVEN,nX)\r\n\t\t\t\t\t\r\n\t\t\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\t\t\tdbCloseArea()\r\n\t\t\t\telse\r\n\t\t\t\t\tM->C5_BLQ  := ''\r\n\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\r\n\t\t\t\tEndIf\r\n\r\n\t\t\t\tIF lRet == .F. .And. !IsBlind()  \r\n\t\t\t\t\tReturn(lRet) \r\n\t\t\t\tEndIf\r\n\t\t\tElse\r\n\t\t\t\t/*\r\n\t\t\t\tUsado para definir uma tabela de preço especifica para o cliente\r\n\t\t\t\t*/\r\n\t\t\t\tIf GdFieldGet(\"C6_XOFERTA\",nX) == 'N'\r\n\t\t\t\t\r\n\t\t\t\t\tcQuery  := \" SELECT DA1_CODTAB,DA0_DESCRI,DA0_DESGER,DA1_PRCVEN , CASE WHEN DA1_PERDES=0  THEN 1 WHEN DA1_PERDES<>0 THEN DA1_PERDES END  DA1_PERDES\r\n\t\t\t\t\tcQuery  += \"   FROM DA0010 DA0 \r\n\t\t\t\t\tcQuery  += \"        INNER JOIN DA1010 DA1 \r\n\t\t\t\t\tcQuery  += \" ON (DA0_CODTAB = DA1_CODTAB)\r\n\t\t\t\t\t\r\n\t\t\t\t\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) <> 'AM'\r\n\t\t\t\t\t\tcQuery  += \"  WHERE DA1_CODTAB IN ('\"+ M->C5_TABELA +\"')\r\n\t\t\t\t\t\tcQuery  += \"    AND DA1_CODPRO = '\"+AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\r\n\t\t\t\t\tElse\r\n\t\t\t\t\t\t//TABELA PADRÃO DE AMOSTRAS\r\n\t\t\t\t\t\tcQuery  += \"  WHERE DA1_CODPRO = '\"+AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\r\n\t\t\t\t\t\tcQuery  += \"    AND DA0_CODTAB IN ('000')\r\n\t\t\t\t\tEndIf-\r\n\t\t\t\r\n\t\t\t\t\tcQuery  += \"    AND DA0.D_E_L_E_T_ = ''\r\n\t\t\t\t\tcQuery  += \"    AND DA1.D_E_L_E_T_ = ''\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\ttcQuery cQuery alias TRB new\r\n\t\t\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\t\t\tdbgotop()\r\n\t\t\t\t\t\r\n\t\t\t\t\tIf Empty(TRB->DA1_PRCVEN) .and. !GDDeleted(nX)\r\n\t\t\t\t\t\tAlert(\"[C6_PRCVEN] - Tabela de preço não encontrada! Linha:(\" + Alltrim(str(nX)) +\") Confira a classif. do produto ou Mult.Tabelas preços no Cad. Cliente.\" )\r\n\t\t\t\t\t\tlRet := .F.\r\n\t\t\t\t\t\t//sleep(300)\r\n\t\t\t\t\t\tM->C5_BLQ  := '1'\r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t\r\n\t\t\t\t\tIf GdFieldGet(\"C6_PRCVEN\",nX) <  TRB->DA1_PRCVEN .and. !GDDeleted(nX)\r\n\t\t\t\t\t\taAdd(aMsgPrc,\"Cavalete:\"+GdFieldGet(\"C6_YCAVALE\",nX)+\" Tabela de Preço:\" + AllTrim(TRB->DA1_CODTAB) + \"-\"+ AllTrim(TRB->DA0_DESCRI) ) \r\n\t\t\t\t\t\t//lRet := .F.\r\n\t\t\t\t\t\tConOut(\"******************************************\" )\r\n\t\t\t\t\t\tConOut(\"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + Alltrim(str(nX)))\r\n\t\t\t\t\t\tConOut(\"******************************************\" )\r\n\t\t\t\t\t\t//sleep(300)\t\r\n\t\t\t\t\t\tM->C5_BLQ  := '1'\r\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"Preço menor que a tabela:\"+ AllTrim(TRB->DA1_CODTAB),nX)\t\r\n\t\t\t\t\tELSE\r\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\r\n\t\t\t\t\tEndIf\r\n\r\n\t\t\t\t\tGdFieldPut(\"C6_PRCREF\",TRB->DA1_PRCVEN,nX)\r\n\t\t\t\t\t\r\n\t\t\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\t\t\tdbCloseArea()\r\n\t\t\t\tElse\r\n\t\t\t\t\tM->C5_BLQ  := ''\r\n\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\r\n\t\t\t\tEndIf\r\n\r\n\t\t\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\t\t\tReturn(lRet) \r\n\t\t\t\tEndIf\r\n\t\t\t\r\n\t\t\tEndIf\r\n\t\t\t\t\r\n\t\tEndIf\r\n\tNext nX\r\n\t\r\n\tcMSG := \"\"\r\n\t\r\n\tFor nX:=1 to Len(aMsgPrc)\r\n\t\t\tIf Empty(cMSG)\r\n\t\t\t\tcMSG := \"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + chr(13)+chr(10) \r\n\t\t\tEndIf\r\n\t\t\tcMSG += aMsgPrc[nX] + chr(13)+chr(10)   \r\n\tNext nX\r\n\t\r\n\t\r\n\tIf !Empty(cMSG)\r\n\t\tAlert(cMSG)  \r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\tEndIf\r\n\t\r\n\t\r\n\t/*\r\n\t***************************************************************************************\r\n\tVerifica o erro do saldo no cavalete e no pedido \r\n\t***************************************************************************************\r\n\t\r\n\tnQtdPedVend := 0\r\n\t\r\n\tFor nX := 1 To Len(aCols)\r\n\t\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\r\n\t\tnQtdPedVend := GdFieldGet(\"C6_QTDVEN\",nX))\r\n\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec \r\n\t\t\tIf !GDDeleted(nX)\r\n\t\t\t\t\r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\t\t\r\n\tNext nX\r\n\t*/\r\n\t\r\n\tConOut(\"******************************************\" )\r\n\tConOut(\"P.E = MT410TOK Qualitá Validação de cavaletes\" )\r\n\tConOut(\"******************************************\" )\r\n\r\n\t/*\r\n\t****************************************************************\r\n\tConferencia do cavaletes duplicados no proprio pedido \r\n\t****************************************************************\r\n\t*/\r\n\taNumCav \t:= {}\t\t\r\n\taTodCav \t:= {}\r\n    aGriCav \t:= {}\r\n    aGriCavDup \t:= {}\r\n    aGriLSPv    := {}\r\n    aLSPvLoca   := {}\t\r\n    aCavZero    := {}\r\n    aNumCavPro  := {}\r\n\taCavBenef   := {}\r\n    \r\n\tFor nX := 1 To Len(aCols)\r\n\t\r\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\t\r\n\t\t//ALERT(SB1->B1_COD +\"||\"+ SB1->B1_GRUPO)\r\n\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec \r\n\t\r\n\t\t\tIf !Empty(GdFieldGet(\"C6_YCAVALE\",nX)) .and. !GDDeleted(nX) \r\n\t\t\t\tIf Empty( aScan(aNumCav,GdFieldGet(\"C6_YCAVALE\",nX)) )\r\n\t\t\t\t \taAdd(aNumCav   ,GdFieldGet(\"C6_YCAVALE\",nX))\r\n\t\t\t\t \taAdd(aNumCavPro,{GdFieldGet(\"C6_YCAVALE\",nX),GdFieldGet(\"C6_PRODUTO\",nX)})\r\n\t\t\t\tEndIf\r\n\t\t\tEndIf\r\n\t\t\tIf !GDDeleted(nX)\r\n\t\t\t\tIf Empty(aScan(aGriCav,AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) + GdFieldGet(\"C6_YCAVALE\",nX) + GdFieldGet(\"C6_LOTECTL\",nX) + GdFieldGet(\"C6_NUMLOTE\",nX)) )\r\n\t\t\t\t\taAdd(aGriCav , AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) + GdFieldGet(\"C6_YCAVALE\",nX) + GdFieldGet(\"C6_LOTECTL\",nX) + GdFieldGet(\"C6_NUMLOTE\",nX)  )\r\n\t\t\t\t\taAdd(aGriLSPv, {GdFieldGet(\"C6_LOTECTL\",nX) , GdFieldGet(\"C6_NUMLOTE\",nX) , AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))} )\r\n\t\t\t\tElse\r\n\t\t\t\t\tIF LEFT(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)),2)<>'AM'\r\n\t\t\t\t\t\taAdd(aGriCavDup, AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+GdFieldGet(\"C6_YCAVALE\",nX) + GdFieldGet(\"C6_LOTECTL\",nX) + GdFieldGet(\"C6_NUMLOTE\",nX)  )\r\n\t\t\t\t\tEndIf\r\n\t\t\t\tEndIf\r\n\t\t\tEndIf\r\n\t\t\t\r\n\t\tEndIf\r\n\t\t\r\n\tNext nX\r\n\t\r\n\tcMSG := \"\"\r\n\tFor nX:=1 to Len(aGriCavDup)\r\n\t\t\tIf Empty(cMSG)\r\n\t\t\t\tcMSG := \"Duplicados no pedido atual:\" + chr(13)+chr(10) \r\n\t\t\tEndIf\r\n\t\t\tcMSG += \"O item: \" + aGriCavDup[nX] + chr(13)+chr(10)   \r\n\tNext nX\r\n\t\r\n\tIf !Empty(cMSG)\r\n\t\tAlert(cMSG)\r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\tlRet := .F.\r\n\t\t\r\n\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\tReturn(lRet) \r\n\t\tEndIf\r\n\tEndIf\r\n\t\r\n\t/*\r\n\t****************************************************************\r\n\tConferencia se todos os itens do cavales estao completos (Se estiverem em cavaletes)\r\n\tCavalete apagado por completo\r\n\tA mesma rotina confere se existe produtos sem saldo.\r\n\t****************************************************************\r\n\t*/\r\n\tIf !IsBlind()     \r\n\t\toProcess:IncRegua1(\"[2-8] - Teste de cavales completos,apagados e sem saldo!\")\r\n\tEndIf\r\n\r\n\t/*\r\n\tSOMENTE SE O PEDIDO NAO ESTIVER FATURADO \r\n\t*/\r\n\tIF LEN(AllTrim(M->C5_NOTA)) <> 9\r\n\t\r\n\t\t/*\r\n\t\tVALIDAÇÃO DO CAMPO DA ULTIMA ATUALIZAÇÃO DO FOLLOWUP\r\n\t\t*/\r\n\t\tM->C5_XULDTAU := DDATABASE\r\n\r\n\t\tFor nX := 1 To Len(aNumCavPro)\r\n\t\t\r\n\t\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\t\tdbSelectArea(\"SB1\")\r\n\t\t\tdbSetOrder(1)\r\n\t\t\tdbSeek(xFilial(\"SB1\")+ aNumCavPro[nX][2] )\r\n\t\t\t\r\n\t\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\r\n\t\t\r\n\t\t\t \tcQuery  := \"  SELECT B8_PRODUTO,B1_DESC,B8_YCAVALE,B8_LOTECTL,B8_NUMLOTE,B8_YCAVALE+B8_LOTECTL+B8_NUMLOTE+B8_LOCAL CHAVE,B8_LOCAL,B8_SALDO \r\n\t\t\t \tcQuery  += \"    FROM SB8010 SB8 INNER JOIN SB1010 SB1 ON (B8_PRODUTO = B1_COD)\r\n\t\t\t \tcQuery  += \"   WHERE SB8.D_E_L_E_T_ = ''\r\n\t\t\t \tcQuery  += \"     AND SB1.D_E_L_E_T_ = ''\r\n\t\t\t \tcQuery  += \"     AND B8_YCAVALE = '\"+aNumCavPro[nX][1]+\"'\r\n\t\t\t \tcQuery  += \"     AND B8_PRODUTO = '\"+aNumCavPro[nX][2]+\"'\r\n\t\t\t \tcQuery  += \"     AND B8_ORIGLAN = 'BD'\r\n\t\t\t \tcQuery  += \"     AND B8_SALDO   <> 0\r\n\t\t\t \t\r\n\t\t\t \ttcQuery cQuery alias TRB new\r\n\t\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\t\tdbgotop()\r\n\t\t\t\tDo While !EOF()\r\n\t\t\t\t\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tcavaletes incompletos\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tIF !aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE })  \r\n\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE , TRB->B8_LOCAL} )\r\n\t\t\t\t\tElse\r\n\t\t\t\t\t\tif GDDeleted(aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE }))\r\n\t\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE,TRB->B8_LOCAL} )\r\n\t\t\t\t\t\tEndIf \r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tSem Saldo\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tIf TRB->B8_SALDO == 0  \r\n\t\t\t\t\t\taAdd(aCavZero,{ TRB->CHAVE ,AllTrim(TRB->B8_PRODUTO)+\"-\"+ AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE, TRB->B8_LOCAL} )\r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t\r\n\t\t\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\t\t\tdbSkip()\r\n\t\t\t\tEndDo\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t/*\r\n\t\t\t\tCavalete apagado\r\n\t\t\t\t*/\r\n\t\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\t\tdbgotop()\r\n\t\t\t\tIf EOF() .And.  !Empty(aNumCav[nX])\r\n\t\t\t\t\r\n\t\t\t\t\tIF !aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE })  \r\n\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE, TRB->B8_LOCAL} )\r\n\t\t\t\t\tElse\r\n\t\t\t\t\t\tif GDDeleted(aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE }))\r\n\t\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE , TRB->B8_LOCAL} )\r\n\t\t\t\t\t\tEndIf \r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t\r\n\t\t\t\tEndIf\r\n\r\n\t\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\t\tdbCloseArea()\r\n\t\t\tEndIf\r\n\r\n\r\n\t\t\t/*\r\n\t\t\tCavalete em beneficiamento não pode \r\n\t\t\tProibe\r\n\t\t\t*/\r\n\t\t\tIf aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] }) <> 0 .AND. M->C5_TIPO = 'B'\r\n\t\t\t\taAdd(aCavBenef,{ aNumCavPro[nX][1] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][3] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][5] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][10] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][36] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][24]} )\r\n\t\t\tEndIf\r\n\t\t\t\r\n\t\tNext nX\r\n\r\n\r\n\t\tcMSG := \"\"\r\n\r\n\t\t/*\r\n\t\tBeneficiamento\r\n\t\t*/\t\t\r\n\t\tFor nX:=1 to Len(aCavBenef)\r\n\t\t\tIf Empty(cMSG)\r\n\t\t\t\tcMSG := \"Pedido de Beneficiamento com cavaletes:\" + chr(13)+chr(10) \r\n\t\t\tEndIf\t\t\t\r\n\t\t\tcMSG +=     \"  ->\" + AllTrim(aCavBenef[nX][2]) + \" Cav.[\" + Alltrim(aCavBenef[nX][3]) + \"] Lote[\" + Alltrim(aCavBenef[nX][4]) + \"] SubLote[\" + Alltrim(aCavBenef[nX][5]) + \"] Local [\"+ Alltrim(aCavBenef[nX][6]) +\"].\"+ chr(13)+chr(10)   \r\n\t\tNext nX\r\n\r\n\t\t/*\r\n\t\tIncompletos/Apagado\r\n\t\t\r\n\t\tFor nX:=1 to Len(aTodCav)\r\n\t\t\tIf Empty(cMSG)\r\n\t\t\t\tcMSG := \"Cavaletes incompletos/Apagado:\" + chr(13)+chr(10) \r\n\t\t\tEndIf\t\t\t\r\n\t\t\tcMSG +=     \"  ->\" + AllTrim(aTodCav[nX][2]) + \" Cav.[\" + Alltrim(aTodCav[nX][3]) + \"] Lote[\" + Alltrim(aTodCav[nX][4]) + \"] SubLote[\" + Alltrim(aTodCav[nX][5]) + \"] Local [\"+ Alltrim(aTodCav[nX][6]) +\"].\"+ chr(13)+chr(10)   \r\n\t\tNext nX\r\n\t\t*/\r\n\t\tIf !Empty(cMSG)\r\n\t\t\tAlert(cMSG)\r\n\t\t\t//AVISO(\"Cavaletes incompletos:\", cMSG , { \"Fechar\" }, 3)\r\n\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\t\tlRet := .F.\r\n\r\n\t\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\t\tReturn(lRet)\r\n\t\t\tEndIf \r\n\t\tEndIf\r\n\t\r\n\t\t/*\r\n\t\tSem Saldo\r\n\t\t*/\r\n\t\tcMSG := \"\"\r\n\t\tFor nX:=1 to Len(aCavZero)\r\n\t\t\tIf Empty(cMSG)\r\n\t\t\t\tcMSG := \"Produtos sem saldo:\" + chr(13)+chr(10) \r\n\t\t\tEndIf\t\t\t\r\n\t\t\tcMSG +=     \"  ->\" + AllTrim(aCavZero[nX][2]) + \" Cav.[\" + Alltrim(aCavZero[nX][3]) + \"] Lote[\" + Alltrim(aCavZero[nX][4]) + \"] SubLote.[\" + Alltrim(aCavZero[nX][5]) + \"]\"+ chr(13)+chr(10)   \r\n\t\tNext nX\r\n\t\t\r\n\t\tIf !Empty(cMSG)\r\n\t\t\tIF (!Empty(C5_NOTA).Or.C5_LIBEROK=='E' .And. Empty(C5_BLQ))\r\n\t\t\t\tAlert(cMSG)\r\n\t\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\t\tELse \r\n\t\t\t\tAlert(cMSG)\r\n\t\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\t\t\t\r\n\t\t\t\tlRet := .F.\r\n\r\n\t\t\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\t\t\tReturn(lRet)\r\n\t\t\t\tEndIf \r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\t\t\r\n\tEndIf\r\n\t\r\n\t/*\r\n\t****************************************************************\r\n\tConferencia se existe estes Lote/SubLotes em um PVenda salvo\r\n\t****************************************************************\r\n\t*/\r\n\tIf !IsBlind()     \r\n\t\toProcess:IncRegua1(\"[3-8] - Conferência se existe  Lote/SubLotes em um P.Venda salvo!\")\r\n\tENDIF\r\n\r\n\tFor nX := 1 To Len(aGriLSPv)\r\n\t\t \t\r\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(aGriLSPv[nX][3]) )\r\n\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec .AND. !Empty(aGriLSPv[nX][1])\r\n\t\t \tcQuery  := \" SELECT C6_NUM,C6_ITEM,C6_LOTECTL,C6_NUMLOTE ,C6_DESCRI \r\n\t\t \tcQuery  += \"   FROM SC6010 SC6 INNER JOIN SC5010 SC5 ON (C5_FILIAL = C6_FILIAL AND C5_NUM = C6_NUM)\r\n\t\t \tcQuery  += \"  WHERE SC6.D_E_L_E_T_ = ''\r\n\t\t \tcQuery  += \"    AND SC5.D_E_L_E_T_ = ''\r\n\t\t \tcQuery  += \"    AND C5_TIPO = 'N'\r\n\t\t \tcQuery  += \"    AND C6_NOTA = ''\r\n\t\t \tcQuery  += \" \tAND C6_LOTECTL = '\"+aGriLSPv[nX][1]+\"'\r\n\t\t \tcQuery  += \" \tAND C6_NUMLOTE = '\"+aGriLSPv[nX][2]+\"'\r\n\t\t \tcQuery  += \"    AND C6_NUM <> '\"+AllTrim(M->C5_NUM)+\"'\r\n\t\t \t\r\n\t\t \ttcQuery cQuery alias TRB new\r\n\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\tdbgotop()\r\n\t\t\tDo While !EOF()\r\n\t\t\t\r\n\t\t\t\tIf !aScan(aLSPvLoca,{|x|alltrim(x[1]) == AllTrim(TRB->C6_NUM) })\r\n\t\t\t\t\taAdd(aLSPvLoca,{ AllTrim(TRB->C6_NUM) , TRB->C6_ITEM,TRB->C6_LOTECTL , TRB->C6_NUMLOTE , AllTrim(TRB->C6_DESCRI) } )\r\n\t\t\t\tElse\r\n\t\t\t\t\taLSPvLoca[aScan(aLSPvLoca,{|x|alltrim(x[1]) == AllTrim(TRB->C6_NUM) })][2] := aLSPvLoca[aScan(aLSPvLoca,{|x|alltrim(x[1]) == AllTrim(TRB->C6_NUM) })][2] + \",\" + TRB->C6_ITEM\r\n\t\t\t\tEndIf\r\n\t\t\t\t\r\n\t\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\t\tdbSkip()\r\n\t\t\tEndDo\r\n\t\t\t\r\n\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\tdbCloseArea()\r\n\t\t\r\n\t\tEndIf\r\n\t\t\r\n\tNext nX\r\n\t\r\n\tcMSG := \"\"\r\n\tFor nX:=1 to Len(aLSPvLoca)\r\n\t\t\tIf Empty(cMSG)\r\n\t\t\t\tcMSG := \"Itens encontrados em outro P.Venda:\" + chr(13)+chr(10) \r\n\t\t\tEndIf\r\n\t\t\tcMSG += \"  -> P.Venda:\" + aLSPvLoca[nX][1] +\" Item:\"+ aLSPvLoca[nX][2] +\" Prod.:\" + aLSPvLoca[nX][5] + chr(13)+chr(10)   \r\n\tNext nX\r\n\t\r\n\tIf !Empty(cMSG)\r\n\t\tAlert(cMSG)\r\n\t\t//AVISO(\"Itens encontrados em outro P.Venda:\", cMSG , { \"Fechar\" }, 3)\r\n\t\t//sleep(300)\t\r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\t\r\n\t\tlRet := .F.\r\n\r\n\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\tReturn(lRet)\r\n\t\tEndIf \r\n\tEndIf\r\n\t\r\n\t/*\r\n\t*******************************************\r\n\tValidação Valores fiscais e descontos e totais\r\n\t*******************************************\r\n\t*/\r\n\tIf !IsBlind()     \r\n\t\toProcess:IncRegua1(\"[4-8] - Conferência fiscal, descontos e valores!\")\r\n\tENDIF\r\n\r\n\taDadosGrv := FCalImp(@oProcess)\r\n\t\r\n\tIf LEN(aDadosGrv)>0\r\n\t\tM->C5_XVALEXT := AllTrim(Extenso((aDadosGrv[4] + aDadosGrv[3]) ,.f.,M->C5_MOEDA,,\"3\",.t.,.f.))\r\n\t\tM->C5_XTOTAL  := (aDadosGrv[4] + aDadosGrv[3]) -  M->C5_DESCONT \r\n\t\tM->C5_XDESCON := aDadosGrv[2]  + M->C5_DESCONT \r\n\t\tM->C5_XVLRFIN := (aDadosGrv[4] + aDadosGrv[3]) -  M->C5_DESCONT \r\n\t\tM->C5_XDESPES := aDadosGrv[4]\r\n\t\t//M->C5_XSEGURO := aDadosGrv[5]\r\n\tEndIf \r\n\t\r\n\t\t\r\n\t/*\r\n\t*******************************************\r\n\tValidação do peso para Amostras \r\n\t*******************************************\r\n\t*/\r\n\tIf !IsBlind()  \r\n\t\toProcess:IncRegua1(\"[5-8] - Validação do peso para Amostras!\")\r\n\tEndIf\r\n\r\n\tcMSG := \"\"\r\n\t\r\n\tFor nX := 1 To Len(aCols)\r\n\t\r\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\r\n\t\r\n\t\t\tIf Empty(GdFieldGet(\"C6_XPESO\",nX)) .and. !GDDeleted(nX) .and. SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) == 'AM'\r\n\t\t\t\r\n\t\t\t\tIf Empty(cMSG)\r\n\t\t\t\t\tcMSG := \"Amostras sem Peso:\" + chr(13)+chr(10) \r\n\t\t\t\tEndIf\r\n\t\t\t\tcMSG += \"  -> Item do PV:\" + GdFieldGet(\"C6_ITEM\",nX) + \" Prod.:\" + AllTrim(GdFieldGet(\"C6_DESCRI\",nX)) + chr(13)+chr(10)  \r\n\t\t\t\t\t\t\t\t\r\n\t\t\tEndIf\r\n\t\t\t\r\n\t\t\tIf !GDDeleted(nX) .and. (SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) == 'AM' .Or. AllTrim(GdFieldGet(\"C6_YCLASSI\",nX)) == \"A\")\r\n\t\t\t\tM->C5_BLQ  := '1'\r\n\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"Produto Amostra! Requer aprovação.\" ,nX)\r\n\t\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(\"Produto Amostra! Requer aprovação.\") + chr(13)+chr(10)\r\n\t\t\t\tcMSG := AllTrim(cMSG) + AllTrim(\"Produto Amostra! Requer aprovação.\") + chr(13)+chr(10)\r\n\t\t\tEndIf\r\n\t\t\t\r\n\t\tEndIf\r\n\tNext nX\r\n\t\r\n\tIf M->C5_DESCONT  <> 0\r\n\t\tM->C5_BLQ  := '1'\r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(\"O Campo de desconto de indenização foi preenchido. Ped. Venda requer aprovação.\" + chr(13)+chr(10))\r\n\t\tcMSG := AllTrim(cMSG) + \"O Campo de desconto de indenização foi preenchido. Ped. Venda requer aprovação.\" + chr(13)+chr(10)\r\n\tEndIf\r\n\t\r\n\tIF !EMPTY(cMSG)\r\n\r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\t\r\n\t\tIf !IsBlind()  \r\n\t\t\tIf MsgYesNo(cMSG + chr(13)+chr(10)+ \"Deseja continuar?\" )\r\n\t\t\t\tlRet := .t.\r\n\t\t\tElse\r\n\t\t\t\tlRet := .F.\r\n\t\t\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\t\t\tReturn(lRet)\r\n\t\t\t\tEndIf \r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\r\n\tEndIf\r\n\t\r\n\t/*\r\n\t*******************************************\r\n\tValidação para não permitir salvar o pedido com chapas sem cavaletes \r\n\t*******************************************\r\n\t*/\r\n\tIf !IsBlind()\r\n\t\toProcess:IncRegua1(\"[6-8] - Chapas sem cavaletes!\")\r\n\tEndIf\r\n\r\n\tcMSG := \"\"\r\n\t\r\n\t/*\r\n\tNão validar para filial de SP \r\n\tnão validar para Pedidos de Transferencia\r\n\t*/\r\n\tIF M->C5_YTIPO <> \"TF\" .AND. SubString(CNUMEMP,1,8) == \"01010101\" .and. M->C5_TIPO <> 'B'\r\n\r\n\t\tFor nX := 1 To Len(aCols)\r\n\t\t\r\n\t\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\t\tdbSelectArea(\"SB1\")\r\n\t\t\tdbSetOrder(1)\r\n\t\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )  \r\n\t\t\t\r\n\t\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\r\n\t\t\r\n\t\t\t\tIf Empty(GdFieldGet(\"C6_YCAVALE\",nX)) .and. !GDDeleted(nX) .and. SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) == 'CH'\r\n\t\t\t\t\r\n\t\t\t\t\tIf Empty(cMSG)\r\n\t\t\t\t\t\tcMSG := \"Chapas sem cavaletes:\" + chr(13)+chr(10) \r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\tcMSG += \"  -> Item do PV:\" + GdFieldGet(\"C6_ITEM\",nX) + \" Prod.:\" + AllTrim(GdFieldGet(\"C6_DESCRI\",nX)) + chr(13)+chr(10)  \r\n\t\t\t\t\t\r\n\t\t\t\tEndIf\r\n\t\t\tEndIf\r\n\t\tNext nX\r\n\t\t\r\n\t\tIf !Empty(cMSG)\r\n\t\t\tAlert(cMSG)\r\n\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)  \r\n\t\t\t\r\n\t\t\tlRet := .F.\r\n\r\n\t\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\t\tReturn(lRet)\r\n\t\t\tEndIf \r\n\t\tEndIf\r\n\r\n\tEndIf\r\n\r\n\t/*\r\n\t*******************************************\r\n\tValidação para não permitir salvar o pedido fora dos almoxarificados ou locais determinados \r\n\t*******************************************\r\n\t*/\r\n\tIf !IsBlind()\r\n\t\toProcess:IncRegua1(\"[7-8] - Almoxarifado não permitido !\")\r\n\tENDIF\r\n\r\n\tcMSG := \"\"\r\n\r\n\tFor nX := 1 To Len(aCols)\r\n\t\r\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\r\n\t\r\n\t\t\tIf !GdFieldGet(\"C6_LOCAL\",nX) $ \"03/05\"  .and. !GDDeleted(nX) .and. SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) $ 'CH/AM'\r\n\t\t\t\r\n\t\t\t\tIf Empty(cMSG)\r\n\t\t\t\t\tcMSG := \"Almoxarifado não permitido ! \" + chr(13)+chr(10) \r\n\t\t\t\tEndIf\r\n\t\t\t\tcMSG += \"  -> Item do PV:\" + GdFieldGet(\"C6_ITEM\",nX) + \" Prod.:\" + AllTrim(GdFieldGet(\"C6_DESCRI\",nX)) + chr(13)+chr(10)  \r\n\t\t\t\t\r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\tNext nX\r\n\t\r\n\tIf !Empty(cMSG)\r\n\t\tAlert(cMSG)\r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\t\r\n\t\tlRet := .F.\r\n\r\n\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\tReturn(lRet)\r\n\t\tEndIf \r\n\tEndIf\r\n\r\n\r\n    /*\r\n\t*******************************************\r\n\tValidação dos dados de condição de pagamento\r\n\t*******************************************\r\n\t*/\r\n\tIf !IsBlind()\r\n\t\toProcess:IncRegua1(\"[8-8] - Validação dos dados de condição de pagamento!\")\r\n\tEndIf\r\n\r\n\tM->C5_CONDPAG := u_ClintToMob(\"PG\")\r\n\r\n\tIf ! M->C5_TIPO $ \"D/B\"\r\n\t\tdbSelectArea(\"SA1\")\r\n\t\tdbSetOrder(1)\r\n\t\tIf dbSeek(xFilial(\"SA1\")+M->C5_CLIENTE+M->C5_LOJACLI)\r\n\t\t\tIf ! AllTrim(M->C5_CONDPAG) $ AllTrim(SA1->A1_XCONDPG)\r\n\r\n\t\t\t\tIf Empty(cMSG)\r\n\t\t\t\t\tcMSG := \"Pedido bloqueado! Condição de pagamento não permitida. Cond. Pag:[\"+ M->C5_CONDPAG +\"].\" + chr(13)+chr(10) \r\n\t\t\t\tEndIf\r\n\r\n\t\t\tEndIf\r\n\t\tEndIf \r\n\r\n\tEndIf\r\n\r\n\tIf !Empty(cMSG)\r\n\t\tAlert(cMSG)\r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\tM->C5_BLQ     := \"1\"\r\n\tEndIf\r\n\t\r\n\t/*\r\n\tVALIDAÇÃO DO MOBGRAN\r\n\t*/\r\n\tIf  FunName() $ \"GROA014\" .And. INCLUI == .T.\r\n\t\t\r\n\t\tIf !Empty(M->C5_XIDMOB)\r\n\r\n\t\t\t/*\r\n\t\t\tVerifica se existe a chave no mobgran.\r\n\t\t\t*/\r\n\t\t\tcQuery  := \" SELECT * FROM ZSA010 WHERE D_E_L_E_T_ = '' AND ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\"' AND ZSA_STATUS ='ATIVA'\r\n\t\t\t\r\n\t\t\ttcQuery cQuery alias TRB new\r\n\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\tdbgotop()\r\n\t\t\t\r\n\t\t\tIf EOF() \r\n\t\t\t\tlRet := .F.\r\n\t\t\tEndIf\r\n\r\n\t\t\tIf TRB->ZSA_STATUS <> 'ATIVA'\r\n\t\t\t\tlRet := .F.\r\n\t\t\tEndIf\r\n\t\t\t\r\n\t\t\tIf lRet == .F.\r\n\t\t\t\tAlert(\"Chave não encontrada ou Status:(>>\"+ TRB->ZSA_STATUS +\"<<) no MobGran!\")\r\n\t\t\t\tReturn(lRet)\t\r\n\t\t\tEndIf\r\n\r\n\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\tdbCloseArea()\t\r\n\r\n\t\tElse\r\n\t\t\t\r\n\t\t\tlRet := .F.\r\n\t\t\tAlert(\"Chave do MobGran em branco! Favor informar um código.\")\r\n\t\t\tReturn(lRet)\r\n\r\n\t\tEndIf\r\n\r\n\tElseIf FunName() $ \"GROA013\" \r\n\t\tIf AllTrim(M->C5_XIDMOB) == '-'\r\n\t\t\tlRet := .T.\r\n\t\telse\r\n\t\t\tcQuery  := \" SELECT * FROM ZSA010 WHERE D_E_L_E_T_ = '' AND ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\"' AND ZSA_STATUS ='ATIVA'\r\n\t\t\t\r\n\t\t\ttcQuery cQuery alias TRB new\r\n\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\tdbgotop()\r\n\t\t\t\r\n\t\t\tIf EOF() \r\n\t\t\t\tlRet := .F.\r\n\t\t\tEndIf\r\n\r\n\t\t\tIf TRB->ZSA_STATUS <> 'ATIVA'\r\n\t\t\t\tlRet := .F.\r\n\t\t\tEndIf\r\n\r\n\t\t\tIf lRet == .F.\r\n\t\t\t\tAlert(\"Chave não encontrada ou Status:(>>\"+ TRB->ZSA_STATUS +\"<<) no MobGran!\")\r\n\t\t\t\tReturn(lRet)\t\r\n\t\t\tEndIf\t\t\t\r\n\t\t\t\r\n\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\tdbCloseArea()\t\r\n\t\tEndIf\r\n\tEndIf\r\n\r\n\t/*\r\n\tEnvio de aviso de alteração de pedidos \r\n\t*/\r\n\tIF        AllTrim(C5_XSHOWFO) = 'S';\r\n\t\t.AND. AllTrim(C5_XPENDEN) $ 'COM/LOG';\r\n\t\t.AND. AllTrim(C5_XFOLLST) = 'BOOKING SOLICITADO'\r\n\r\n\t\t/*\r\n\t\tEMAIL\r\n\t\t*/\r\n\t\tIf SC5->C5_YTIPO == \"ME\"\r\n\t\t\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\r\n\t\tElse\r\n\t\t\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003_P&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\r\n\t\tEndIf\r\n\t\t\r\n\t\tConOut(\"Gerando relatório! Ped. Venda:\" + AllTrim(SC5->C5_NUM) )\r\n\t\tsleep(300)\r\n\t\tConOut(\"Gerando e-mail! Ped. Venda:\" + AllTrim(SC5->C5_NUM) )\r\n\t\t\r\n\t\tTCSPExec(\"SP_SENDMAIL\",'ITINGA',\"backoffice.es@qualitagroup.com;bruno.lage@grupoqualita.com.br;arlindo.pelissari@grupoqualita.com.br\",'Pedido BOOKING SOLICITADO ! Código:' + SC5->C5_NUM ,'PEDIDO BOOKING SOLICITADO!'+ \"<br>\" +'CÓDIGO:' + SC5->C5_NUM + \"<br>\" ,'D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF')\r\n\t\t//TCSPExec(\"SP_SENDMAIL\",'ITINGA',\"bruno.lage@grupoqualita.com.br\",'Pedido BOOKING SOLICITADO ! Código:' + SC5->C5_NUM ,'PEDIDO BOOKING SOLICITADO!'+ \"<br>\" +'CÓDIGO:' + SC5->C5_NUM + \"<br>\" ,'D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF')\r\n\r\n\t\t//sleep(500)\r\n\r\n\t\t/*\r\n\t\tWHATSAPP\r\n\t\t*/\r\n\t\t/*\r\n\t\tU_SWENARWAP(\"5527981188913\", \"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM),\"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM)   ,\"RQ0003a\"           ,\"PDF\",\"\\RELINWEB\\RQ0003a.PDF\")\r\n\t\tsleep(500)\r\n\t\tU_SWENARWAP(\"5533984022125\", \"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM),\"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM)   ,\"RQ0003a\"           ,\"PDF\",\"\\RELINWEB\\RQ0003a.PDF\")\r\n\t\t*/\r\n\tEnd\r\n\r\n\t/*\r\n\tIntegração liberação Pedido de venda Com o Mobgran por tabela\r\n\tTABELA - ZSC\r\n\t*/\r\n\tIf Empty(M->C5_XMOTBLQ) \r\n\t\t//M->C5_XMOTBLQ := \"06 = Aguardando liberação do vendedor!\" + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\tM->C5_BLQ     := \"\"\r\n\t\tfTPBLQ        := .T.\r\n\tEndIf\r\n\r\n\tif (Empty(M->C5_NOTA) .OR. M->C5_NOTA == 'XXXXXXXXX' )\r\n\t\tIF (!Empty(M->C5_XIDMOB) .Or. M->C5_XIDMOB <> '-') \r\n\t\t\tu_MIntMGLib(M->C5_NUM , M->C5_XIDMOB , \"SC5\" , M->C5_XMOTBLQ , M->C5_FILIAL , M->C5_XTOTAL , fTPBLQ )\r\n\t\tEndIf\r\n\tEndIf\r\n\r\n\tConOut(\"******************************************\" )\r\n\tConOut(\"Final P.E = MT410TOK Qualitá\" )\r\n\tConOut(\"******************************************\" )\r\n\t\r\n\tSetKey(VK_F5,)\r\n\tSetKey(VK_F6,)\r\nEndIf\r\n\r\nIF (lRet == .F. .and. IsBlind()) \r\n\tlRet := .T.\r\nEndIf \r\n\r\nReturn(lRet)\r\n\r\n\r\nUser Function MIntMGLib(cPedido,XIdMobP,_cTabela, xMotBlq, cMobFilial , nXtotal , fTPBLQ)\r\n********************************************************************************************************************\r\n* /* User Integração com MobGran Liberação de pedidos por tabela ZSA ZSC */\r\n* /**/\r\n* //\r\n***\r\n\r\nLocal oJson     := JsonObject():New()\r\nLocal cCliente  := \"\"\r\nLocal cLoja     := \"\"\r\nLocal nValor    := 0\r\nLocal cCondPg   := \"\"\r\nLocal lSemFin   := .F.\r\n\r\n\t\tcQuery := \" SELECT  CAST(ZSC_RJSON AS VARCHAR(8000)) RJSON from \"+ RetSqlName(\"ZSC\")+ \" WHERE ZSC_IDMOBP = '\"+XIdMobP+\"' AND ZSC_TIPO <> 'B' AND ZSC_TIPO = '2' AND ZSC_RJSON IS NOT NULL\"\r\n\t\r\n\t\ttcQuery cQuery alias TRB_JSON new\r\n\t\tdbSelectArea(\"TRB_JSON\")\r\n\t\tdbgotop()\r\n\r\n\t\toJSon:fromJson(TRB_JSON->RJSON)\r\n\t\r\n\t\tcCliente  := iif(empty(oJson:GetJSonObject('cliente')),\"\",oJson:GetJSonObject('cliente'))\r\n\t\tcLoja     := iif(empty(oJson:GetJSonObject('loja'))   ,\"\",oJson:GetJSonObject('loja'))\r\n\r\n\t\tif !Empty(oJson:GetJSonObject('cliente'))\r\n\t\t\tnValor    := round(val(oJson:GetJSonObject('valorTotal')),2) \r\n\t\tElse\r\n\t\t\tnValor    := 0\r\n\t\tEndIf\r\n\r\n\t\tcCondPg   := iif(empty(oJson:GetJSonObject('condicaoPagamento')),\"\",oJson:GetJSonObject('condicaoPagamento'))\r\n\r\n\t\tdbSelectArea(\"TRB_JSON\") \r\n\t\tdbCloseArea()\t\r\n\t\tIf !Empty(oJson:GetJSonObject('cliente'))\r\n\t\t\tIf \tcCliente+cLoja       == m->C5_CLIENTE+m->C5_LOJACLI .And.;\r\n\t\t\t\tAllTrim(Str(nValor)) >= AllTrim(Str(nXTotal))    \t.And.;\r\n\t\t\t\tcCondPg              == m->C5_CONDPAG\r\n\r\n\t\t\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSC\")\r\n\t\t\t\tcQuery += \"    SET ZSC_TIPO = 'B'\r\n\t\t\t\tcQuery += \"  WHERE ZSC_IDMOBP  ='\"+ AllTrim(XIdMobP) +\"'\r\n\t\t\t\tcQuery += \"    AND ZSC_TIPO < '2'\r\n\t\t\t\t\r\n\t\t\t\tlSemFin:= .F.\r\n\t\t\tElse\r\n\t\t\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSC\")\r\n\t\t\t\tcQuery += \"    SET ZSC_TIPO = 'B'\r\n\t\t\t\tcQuery += \"  WHERE ZSC_IDMOBP  ='\"+ AllTrim(XIdMobP) +\"'\r\n\r\n\t\t\t\tlSemFin:= .T.\r\n\t\t\tEndIf \r\n\t\tElse\r\n\t\t\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSC\")\r\n\t\t\t\tcQuery += \"    SET ZSC_TIPO = 'B'\r\n\t\t\t\tcQuery += \"  WHERE ZSC_IDMOBP  ='\"+ AllTrim(XIdMobP) +\"'\r\n\r\n\t\t\t\tlSemFin:= .T.\t\r\n\t\tEndIf\t\r\n\t\t/*\r\n\t\tExecucao background do codigo sql\r\n\t\t*/\r\n\t\tTcSqlExec(cQuery)\r\n\r\n\t\t//regras\r\n\t\tIf fTPBLQ == .F.\r\n\t\t\tIf  RecLock(\"ZSC\",.T.)\r\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\r\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\r\n\t\t\t\t\tReplace ZSC_TIPO   With \"1\"\r\n\t\t\t\t\tReplace ZSC_MSGRET With IIF(fTPBLQ == .F. ,xMotBlq,\"\" )\r\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\r\n\t\t\t\t\tReplace ZSC_SITUAC With IIF(fTPBLQ == .F. ,\"\"    ,\"X\" )\r\n\t\t\t\t\tReplace ZSC_FLUXOM With IIF(fTPBLQ == .F. ,\"S\"    ,\"\" )\r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf \r\n\t\tEndIf\r\n\t\t//financeiro\r\n\t\tIf lSemFin \r\n\t\t\tIf  RecLock(\"ZSC\",.T.)\r\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\r\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\r\n\t\t\t\t\tReplace ZSC_TIPO   With \"2\"\r\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\r\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\r\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf \r\n\t\t\t/*\r\n\t\t\tIf  RecLock(\"ZSC\",.T.)\r\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\r\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\r\n\t\t\t\t\tReplace ZSC_TIPO   With \"3\"\r\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\r\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\r\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf \r\n\r\n\t\t\tIf  RecLock(\"ZSC\",.T.)\r\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\r\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\r\n\t\t\t\t\tReplace ZSC_TIPO   With \"4\"\r\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\r\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\r\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf \r\n\r\n\t\t\tIf  RecLock(\"ZSC\",.T.)\r\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\r\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\r\n\t\t\t\t\tReplace ZSC_TIPO   With \"5\"\r\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\r\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\r\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf \r\n\t\t\t*/\r\n\t\t\t/*\r\n\t\t\tPendencia Vendedor\r\n\t\t\t*/ \r\n\t\t\tIf  RecLock(\"ZSC\",.T.)\r\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\r\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\r\n\t\t\t\t\tReplace ZSC_TIPO   With \"6\"\r\n\t\t\t\t\tReplace ZSC_MSGRET With IIF(fTPBLQ == .t. ,xMotBlq,\"\")\r\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\r\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\r\n\t\t\t\t\tReplace ZSC_FLUXOM With IIF(fTPBLQ == .t. ,\"S\"    ,\"\")\r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf \r\n\t\tEndIf\r\n\r\nReturn()\r\n\r\n\r\nUser Function ClintToMob(cTipo)\r\n****************************************************************************************************************\r\n* /*Gatilho C5_XIDMOB*/    \r\n*\r\n****\r\nLocal aArea     := GetArea() \r\nLocal cQuery    := \" SELECT * FROM ZSA010 WHERE D_E_L_E_T_ = '' AND ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\" ' AND ZSA_STATUS ='ATIVA'\r\nLocal cDadosRet := \"\" \r\n\r\ntcQuery cQuery alias TRBidMob new\r\ndbSelectArea(\"TRBidMob\")\r\ndbgotop()\r\n\r\nConOut(\"****PRINCIPAL**ClintToMob*************\")\r\n\r\nIf !EOF()\r\n\tIf cTipo == \"PG\"\r\n\t\tcDadosRet  := AllTrim(TRBidMob->ZSA_CPAG)\r\n\tElse\r\n\t\tcDadosRet  := AllTrim(TRBidMob->ZSA_CLIENT)\r\n\tEndIf\r\nElse\r\n\tcDadosRet := M->C5_CONDPAG\r\nEndIf\r\n\r\ndbSelectArea(\"TRBidMob\") \r\ndbCloseArea()\t\r\n\r\nRestArea(aArea)\r\n\r\nReturn(cDadosRet)\r\n\r\n                                                                       \r\nStatic Function FCalImp(oProcess) \r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\n************************************** \r\n* Calculo totais e Impostos\r\n************************************** \r\nLocal aArea     := GetArea() \r\nLocal nX        := 0 \r\n//Local nPrcTot   := 0\r\nLocal _aTotalNF := {} \r\nLocal nValDesc  := 0\r\nLocal nItem:= 0                             \r\n\r\n//IF FunName() == Alltrim(\"GROA014\")\r\n\r\n\tConOut(\"************************************\")\r\n\tConOut(\"MaFisIni\")                 \r\n\tConOut(\"************************************\")\r\n\t\r\n\t// Inicia rotina de calculo dos impostos \r\n\tMaFisIni(Iif(Empty(M->C5_CLIENT),M->C5_CLIENTE,M->C5_CLIENT),;\t// 1-Codigo Cliente/Fornecedor \r\n\t     \tM->C5_LOJAENT,;          \t\t\t\t\t\t\t\t// 2-Loja do Cliente/Fornecedor \r\n\t     \tIIf(M->C5_TIPO$\"DB\",\"F\",\"C\"),;                    \t\t// 3-C:Cliente , F:Fornecedor \r\n\t     \tM->C5_TIPO,;                    \t\t\t\t\t\t// 4-Tipo da NF \r\n\t     \tM->C5_TIPOCLI,;          \t\t\t\t\t\t\t\t// 5-Tipo do Cliente/Fornecedor \r\n\t     \tNil,; \r\n\t     \tNil,; \r\n\t     \tNil,; \r\n\t     \tNil,; \r\n\t     \t\"GROA014\") \r\n\t\r\n     If (Inclui .Or. Altera) \r\n               nItem:= 0\r\n\t   \r\n\t\t\t   ConOut(\"************************************\")\r\n\t\t\t   ConOut(\"MaFisAdd\")                                  \r\n\t\t\t   ConOut(\"************************************\") \r\n\t\t\t   \r\n\t\t\t   If !IsBlind()\r\n\t\t\t\t\toProcess:SetRegua2(len(aCols))\r\n\t\t\t   ENDIF\r\n\t\t\t   \r\n               For nX := 1 to len(aCols) \r\n                    If !GDDeleted(nX)\t\t\t\t\t\t\t//Validar se o registro nao esta deletado \r\n                         \r\n                         nItem:= nItem + 1 \t\t\t\t\t\t// Quantidade para recalcular \r\n                         \r\n                         // Adiciona dados dos produtos na rotina de calculo de impostos       \r\n                         MaFisAdd( GdFieldGet(\"C6_PRODUTO\",nX),; \r\n                                   GdFieldGet(\"C6_TES\"    ,nX),; \r\n                                   GdFieldGet(\"C6_QTDVEN\" ,nX),; \r\n                                   GdFieldGet(\"C6_PRCVEN\" ,nX),; \r\n                                   0,; //GdFieldGet(\"C6_VALDESC\",nX)\r\n                                   \"\",; \r\n                                   \"\",; \r\n                                   0,; \r\n                                   0,; \r\n                                   0,; \r\n                                   0,; \r\n                                   0,; \r\n                                   GdFieldGet(\"C6_VALOR\",nX),; \r\n                                   0,; \r\n                                   0,; \r\n                                   0)\r\n                               \r\n                         nValDesc := nValDesc + Round(GdFieldGet(\"C6_VALDESC\",nX),2)\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t If !IsBlind()  \r\n                         \toProcess:IncRegua2(\"Cavalete [\"+GdFieldGet(\"C6_YCAVALE\",nX)+\"] Lote-Chapa: \"+AllTrim(GdFieldGet(\"C6_LOTECTL\",nX))+\"-\"+GdFieldGet(\"C6_NUMLOTE\",nX)  )\r\n                         ENDIF\r\n\r\n                         //ConOut(nValDesc)\r\n                         //ConOut(nItem)\r\n                    EndIf \r\n                \r\n               Next nX                \r\n     EndIf \r\n     \r\n     /*\r\n     _nIcmsRet := 0 \r\n     For nLo:=1 To nItem           \r\n          _nIcmsRet += MaFisRet(nLo,\"LF_ICMSRET\") // Retorna valor da ST  \r\n     Next nLo       \r\n     */\r\n\t   \r\n\t aAdd(_aTotalNF,MaFisRet(,\"NF_TOTAL\"))\r\n\t aAdd(_aTotalNF,nValDesc)\r\n\t aAdd(_aTotalNF,MaFisRet(,\"NF_BASEDUP\"))\r\n \t aAdd(_aTotalNF,M->C5_DESPESA)\r\n\t //aAdd(_aTotalNF,MaFisRet(,\"NF_SEGURO\"))  \r\n\t\r\n\t MaFisEnd() \t// Encerra rotina de calculo de impostos \r\n\r\n//EndIf\r\n\r\nRestArea(aArea) \r\n\r\nReturn(_aTotalNF)\r\n\r\n\r\nUser Function GMA410MNU() \r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal aButtons := {}\r\n\r\nIF FunName() == Alltrim(\"GROA014\")\t\r\n\t//Gerando invoice\r\n\taRotina[16][1] := \"Gerar Invoice\"\r\n\taRotina[16][2] := 'Processa({|| u_MNumInv()},,\"Gravando....\")'\r\n\t\r\n\t//\"Imprime Packing List\"\r\n\t//aRotina[20][2] := \"u_RelInWeb('RQ0002','Imprime Packing List [RQ0002]','u_fParAut(2)')\"\r\n\taRotina[17][2][5][2] := \"u_RelInWeb('RQ0002','Imprime Packing List [RQ0002]','u_fParAut(2)')\"\r\n\t\r\n\t//\"Imprime Commercial Invoice\" \r\n\t//aRotina[19][2] := \"u_RelInWeb('RQ0004','Imprime Invoice (CH/AM)[RQ0004]','u_fParAut(4)')\"\r\n\taRotina[17][2][4][2] := \"u_RelInWeb('RQ0004','Imprime Invoice (CH/AM)[RQ0004]','u_fParAut(4)')\"\r\n\t\r\n\t//\"Imprime Proforma Invoice\"\r\n\t//aRotina[18][2] := \"u_RelInWeb('RQ0003','Imprime Proforma Invoice [RQ0003]','u_fParAut(2)')\"\t \r\n\taRotina[17][2][3][2] := \"u_RelInWeb('RQ0003','Imprime Proforma Invoice [RQ0003]','u_fParAut(2)')\"\r\n\t\r\n\t//aRotina[17][2] := \"U_proformaInvoice()\"//#Brittes Alterada chamada da Funcao\r\n\t//\"Imprime Pedido de Venda\"\r\n\taRotina[17][2][1][1] := \"Pre-Nota\" \r\n\taRotina[17][2][1][2] := \"u_MATR730Q()\"\r\n\t\r\n\t//\"Imprime Romaneio\"\r\n\taRotina[17][2][2][1] := \"Imprime Invoice (BLOCOS)\"\r\n\taRotina[17][2][2][2] := \"u_RelInWeb('RQ0004_BLOCK','Imprime Invoice (BLOCOS) [RQ0004_BLOCK]'    ,'u_fParAut(4)')\"\r\n\t//aadd(aRotina,{'Imprime Invoice (BLOCOS)',\"u_RelInWeb('RQ0004_BLOCK','Imprime Invoice (BLOCOS) [RQ0004_BLOCK]'    ,'u_fParAut(4)')\" , 0 , 3,0,NIL})\r\n\t\r\nElseIf FunName() == Alltrim(\"GROA013\")\r\n\r\n\taadd(aRotina,{'Imp. Packing List',\"u_RelInWeb('RQ0002_P','Imprime Packing List [RQ0002_P]'    ,'u_fParAut(2)')\" , 0 , 3,0,NIL})\r\n\taadd(aRotina,{'Imp. Proforma'    ,\"u_RelInWeb('RQ0003_P','Imprime Proforma Invoice [RQ0003_P]','u_fParAut(2)')\" , 0 , 3,0,NIL})\t\r\n\taadd(aRotina,{'Pre-Nota'    \t ,\"u_MATR730Q()\" \t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t, 0 , 3,0,NIL})\t\r\n\t\r\nEndIf\r\n\r\naadd(aRotina,{'Ajustes Gerais {P.Venda}',\"u_AjuGerais()\" , 0 , 3,0,NIL})\r\n\r\naadd(aRotina,{'Aprovação WhatsApp ',\"u_WAppAprov()\" , 0 , 3,0,NIL})\r\n\r\naadd(aRotina,{'Limpar FollowUp' ,\"u_ClearFol()\"  , 0 , 3,0,NIL})\t\r\n\r\nReturn aButtons\r\n\r\nUser Function ClearFol()\r\n****************************************************************************************************************\r\n*    // LIMPA FOLLOWUP PELO PERIODO SOMENTE OVADOS\r\n*\r\n****\r\nLocal cQuery:=\"\"\r\n\r\nPrivate aPerg := {}\r\nPrivate cPerg := \"MLIMPAFOLL\"\r\n\r\nAadd(aPerg,{cPerg,\"Data Incial  ?\"\t\t,\"D\",08,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\r\nAadd(aPerg,{cPerg,\"Data Final   ?\"\t\t,\"D\",08,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\r\n\r\nU_Testasx1(cPerg,aPerg,.T.)\r\n\r\nIf ! Pergunte(cPerg,.T.)\r\n\tReturn()\r\nEndIf\r\n\r\nIf Empty(mv_par01)\r\n\tAlert(\"Data inicial não pode ficar em branco!\")\r\n\tReturn()\r\nEndIf\r\n\r\nIf Empty(mv_par02)\r\n\tAlert(\"Data final não pode ficar em branco!\")\r\n\tReturn()\r\nEndIf\r\n\r\ncQuery :=  \"  UPDATE SC5010\r\ncQuery +=  \"    SET C5_XSHOWFO =\t'N'\r\ncQuery +=  \"  WHERE R_E_C_N_O_ IN(\r\ncQuery +=  \"  \t\t\t\t\t\tSELECT REC FROM (\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\tSELECT\t  R_E_C_N_O_ REC,\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  C5_FILIAL,\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  C5_NUM ,\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  C5_NOTA+'/'+C5_SERIE AS NF,\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  (SELECT F2_EMISSAO FROM SF2010 WHERE D_E_L_E_T_ = '' AND F2_FILIAL = C5_FILIAL AND F2_DOC = C5_NOTA AND F2_SERIE = C5_SERIE AND F2_CLIENTE = C5_CLIENTE AND F2_LOJA = C5_LOJACLI) DATA\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t  FROM SC5010 \r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t WHERE D_E_L_E_T_ = ''\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND C5_XSHOWFO IN('S')\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND C5_TIPO IN ('N')\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND C5_XVLRFIN <> 0\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND RTRIM(LTRIM(C5_XFOLLST)) IN ('OVADO','CARREGADO','FATURADO')\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t)TB_TEMP\r\ncQuery +=  \"  \t\t\t\t\t\t WHERE DATA BETWEEN '\"+dToS(mv_par01)+\"' AND '\"+dToS(mv_par02)+\"'\r\ncQuery +=  \"  \t\t\t\t\t\t)\r\n\r\nTcSQLExec(cQuery)\r\n\r\nAlert(\"FollowUp removidos com sucesso!\")\r\n\r\nReturn()\r\n\r\nUser Function WAppAprov()\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal cProt   := \"\"\r\n//Local cProt2  := \"\"\r\nLocal cMotiv  := \"\"\r\nLocal cQuery  := \"SELECT DISTINCT UPPER(RTRIM(LTRIM(C6_XMOTBLQ))) C6_XMOTBLQ FROM SC6010 WHERE D_E_L_E_T_ ='' AND C6_FILIAL+C6_NUM = '\" + SC5->C5_FILIAL + SC5->C5_NUM + \"' AND UPPER(RTRIM(LTRIM(C6_XMOTBLQ))) <> ''\r\n\r\n\r\ntcQuery cQuery alias TRBE new\r\ndbSelectArea(\"TRBE\")\r\ndbgotop()\r\n\r\nDo While !EOF()\r\n\t\r\n\tcMotiv := cMotiv + TRBE->C6_XMOTBLQ + chr(13)+chr(10)\r\n\r\n\tdbSelectArea(\"TRBE\") \r\n\tdbSkip()\r\nEndDo\r\n\r\ndbSelectArea(\"TRBE\") \r\ndbCloseArea()\r\n\r\nIF FunName() == Alltrim(\"GROA014\")\r\n\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\r\nElseIf FunName() == Alltrim(\"GROA013\")\r\n\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003_P&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\r\nEndIf\r\n\r\nsleep(4000)\r\n\r\n/*\r\nLimite de Credito\r\n*/\r\n//WaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0057&CLIENTES='+AllTrim(SC5->C5_CLIENTE)+AllTrim(SC5->C5_LOJACLI)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0057.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\r\n\r\n//Grupo de Faturamento Whatsapp\r\n\r\n/*\r\nTeste\r\n*/\r\n//cProt  := U_SWENARWAP(\"5551997331669\",\"Aprovação da Proforma:\" +AllTrim(SC5->C5_NUM) + chr(13)+chr(10) + \" Motivo:\" + cMotiv + chr(13)+chr(10) + \" Usuário:\" + SUBSTR(CUSUARIO,7,15), \"PROFORMA\"+AllTrim(SC5->C5_NUM),\"RQ0003\",\"PDF\",\"\\RELINWEB\\RQ0003.pdf\")\r\n\r\n/*\r\nOficial\r\n*/\r\ncProt  := U_SWENARWAP(\"5527995295180-1587589430@g.us\",\"Aprovação da Proforma:\" +AllTrim(SC5->C5_NUM) + chr(13)+chr(10) + \" Motivo:\" + cMotiv + chr(13)+chr(10) + \" Usuário:\" + SUBSTR(CUSUARIO,7,15), \"PROFORMA\"+AllTrim(SC5->C5_NUM),\"RQ0003\",\"PDF\",\"\\RELINWEB\\RQ0003.pdf\")\r\n\r\nIF cProt = \"\" .or. cProt = nil \r\n\tAlert(\"ERRO!!! O WhatsApp pode estar passando por alguma instabilidade no momento. Aguarde alguns instantes de tente novamente mais tarde!\")\r\n\tReturn()\r\nEndIf\r\n\r\nIf  RecLock(\"WAM\",.T.) \r\n\r\n\tReplace WAM_FILIAL  With \"\" \r\n\tReplace WAM_DATA    With Date()\r\n\tReplace WAM_HORA    With Time()\r\n\tReplace WAM_ID      With cProt\r\n\tReplace WAM_MSG     With \"Aprovação da Proforma:\" +AllTrim(SC5->C5_NUM) + \"Motivo:\" + cMotiv +  \"Usuário:\" + SUBSTR(CUSUARIO,7,15) + \" Cliente: \" + AllTrim(SC5->C5_XFRFORW) \r\n\t//Replace WAM_TELL    With \"5551997331669\"\r\n\t//Replace WAM_TELL    With \"5533984022125\"\r\n\tReplace WAM_INDEX   With SC5->C5_FILIAL + SC5->C5_NUM\r\n\tReplace WAM_PERG    With \"S\"\r\n\t//Replace WAM_DATAR   With \"\"\r\n\t//Replace WAM_HORAR   With \"\"\r\n\t//Replace WAM_RESPOSV With \"\"\r\n\t\r\n\tIF SubString(CNUMEMP,1,2) == \"05\"\r\n\t\tReplace WAM_EXEC    With 'ITINGA-PV'\r\n\tElse\r\n\t\tReplace WAM_EXEC    With 'QUALITA-PV'\r\n\tEndIf\r\n\t\r\n\r\n   MsUnLock()\r\nEndIf\r\n\t\t\r\nAlert(\"WhatsApp enviado com sucesso! \" + cProt)\r\n\r\nReturn()\r\n\r\n\r\nUser Function WAppResp()\r\n****************************************************************************************************************\r\n*NÃO USADO     \r\n*\r\n**** \r\nLocal cQuery  := \"SELECT TOP 1 * FROM WAM010 WHERE D_E_L_E_T_ = '' AND WAM_INDEX = '\"+SC5->C5_FILIAL + SC5->C5_NUM+\"' ORDER BY R_E_C_N_O_ DESC\"\r\n\t\t\t\t  \r\nLocal aRetMsg := \"\"\r\n\r\ntcQuery cQuery alias TRB new\r\ndbSelectArea(\"TRB\")\r\ndbgotop()\r\n\r\nIf !Empty(TRB->WAM_ID)\r\n\taRetMsg :=\tstrTokArr(U_SWREMGWAP(TRB->WAM_ID), ',' )\r\nEndIf\r\n\r\ndbSelectArea(\"TRB\") \r\ndbCloseArea()\r\n\r\nIf !\"false\" $ aRetMsg[7]\r\n\tIf (\"SIM\" $ Upper(aRetMsg[8])) .OR. ( \"APROVADO\" $ Upper(aRetMsg[8]) )\r\n\t\r\n\t \r\n\t\tRecLock(\"SC5\",.F.)\r\n\t\t\tSC5->C5_BLQ  := ''\r\n\t\tMsUnlock()\t\r\n\t\t/*\r\n\t\tdbSelectArea(\"SC6\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(SC5->C5_FILIAL + SC5->C5_NUM)\r\n\t\tWhile SC6->(!EOF()) .And. SC6->C6_FILIAL + SC6->C6_NUM == SC5->C5_FILIAL + SC5->C5_NUM\r\n\t\t                                      \r\n\t\t      MaLibDoFat(SC6->(RecNo()),SC6->C6_QTDVEN,,,.T.,.T.,.F.,.F.)\r\n\t\t\r\n\t\t   SC6->(dBSkip())\r\n\t\tEndDo\r\n\t\t*/\r\n\tEndIf\r\nElse \r\n\tAlert(\"Pedido ainda não liberado!\")\r\nEndIf\r\n\r\nReturn() \r\n\r\nUser Function AjuGerais()\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nPrivate aPerg := {}\r\nPrivate cPerg := \"AJUSGERAIS\"\r\nPrivate nOpc  := 0\r\n\r\nnOpc := Aviso(\"Atenção\",\"Estes ajustes devem ser usados somente em casos especiais! Pedido: [\"+SC5->C5_NUM+\"] .\" ,{\"Confirma\",\"Abandona\"})\t\r\n\r\nIf nOpc == 2\r\n\tReturn()\r\nEndIf\r\n                  \r\nAadd(aPerg,{cPerg,\"Alterar o peso líquido:\",\"N\",12,04,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\r\nAadd(aPerg,{cPerg,\"Alterar o peso bruto :\" ,\"N\",12,04,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\r\n\r\nAadd(aPerg,{cPerg,\"Alterar qtd volume 1:\"  ,\"N\",03,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})     \r\nAadd(aPerg,{cPerg,\"Alterar qtd Box:\"       ,\"N\",03,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\r\n\r\nU_Testasx1(cPerg,aPerg,.t.) \r\n\r\nIf ! Pergunte(cPerg,.T.)\r\n\tReturn()\r\nEndIf\r\n\r\nRecLock(\"SC5\",.F.)\r\n\tSC5->C5_PESOL    := mv_par01\r\n\tSC5->C5_PBRUTO   := mv_par02\r\n\tSC5->C5_VOLUME1  := mv_par03\r\n\tSC5->C5_VOLUME2  := mv_par04\r\nMsUnlock()\t\r\n\r\nAviso(\"Atualização:\",\"Pedido: [\"+SC5->C5_NUM+\"] atualizado com sucesso!\" ,{\"Ok\"})\r\n\r\nReturn()\r\n\r\n\r\nUser Function MNumInv()\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal cNumInvo := GetMv(\"MV_XNUMINV\")\r\nLocal cQuery   := \"\"\r\n\r\nIF EMPTY(SC5->C5_YINVOIC)\r\n\t\r\n\tProcRegua(3) \r\n\t\r\n\tPutMv(\"MV_XNUMINV\",Soma1(cNumInvo))\r\n\t\r\n\tIncProc(\"Criando Invoice:\" + cNumInvo) \r\n\tSleep( 1000 ) \r\n\t\r\n\tIncProc(\"Salvando...\" + cNumInvo)\r\n\tSleep( 1000 ) \r\n\t\r\n\tIncProc(\"Liberando....\" + cNumInvo)\r\n\tSC5->(reclock(\"SC5\", .F.))\r\n\tSC5->C5_YINVOIC := cNumInvo\t\t\t\t\t\t\t\t\t\r\n\tSC5->(msUnLock())\r\n\tSleep( 1000 )\r\n\t\r\n\tAVISO(\"Invoice\", \"Invoice gerada com sucesso! Número=\" + cNumInvo  , { \"Fechar\" }, 1)\r\n\t\r\n\t//U_GROA014A()\r\n\t//AxInclui(\"SZO\")\r\n\t\r\n\tdbSelectArea(\"ZGO\")\r\n\tdbSetOrder(1)\r\n\tIf dbSeek(xFilial(\"ZGO\") + SC5->C5_NUM + SC5->C5_CLIENTE + SC5->C5_LOJACLI)\r\n\t\tZGO->(reclock(\"ZGO\", .F.))\r\n\t\tZGO->ZGO_INVOIC := cNumInvo\t\t\t\t\t\t\t\t\t\r\n\t\tZGO->(msUnLock())\r\n\t\t//U_GROA014A()\r\n\tElse\r\n\t\tZGO->(reclock(\"ZGO\", .T.))\r\n\t\tZGO->ZGO_FILIAL := xFilial(\"ZGO\")\r\n\t\tZGO->ZGO_INVOIC := cNumInvo\t\r\n\t\tZGO->ZGO_PEDIDO := SC5->C5_NUM\r\n\t\tZGO->ZGO_CLIENT := SC5->C5_CLIENTE\r\n\t\tZGO->ZGO_LOJA\t:= SC5->C5_LOJACLI\t\t\t\t\t\t\r\n\t\tZGO->(msUnLock())\r\n\tEndIf\r\n\t\r\n\tcQuery := \"SELECT CAST(M2_DATA AS DATE) DATA, MAX(M2_MOEDA2) 'DOLAR' , MAX(M2_MOEDA3) 'EURO'\r\n\tcQuery += \"  FROM SM2010\r\n\tcQuery += \"  WHERE D_E_L_E_T_ = ''\r\n\tcQuery += \"    AND M2_DATA  = '\"+DToS(dDataBase)+\"'\r\n\tcQuery += \"   GROUP BY M2_DATA\r\n\t\r\n\tTcQuery cQuery Alias TMP_MOEDA New\r\n\tdbSelectArea(\"TMP_MOEDA\")\r\n\t\r\n\tSC5->(reclock(\"SC5\", .F.))\r\n\tSC5->C5_MENNOTA := AllTrim(SC5->C5_MENNOTA) + \" //INVOICE:\" + SC5->C5_YINVOIC + \"-\" + LEFT(DToS(dDataBase),4) +  \"  TAXA DO DOLAR R$:\" + AllTrim(STR(TMP_MOEDA->DOLAR)) + \" CNTR:\" + AllTrim(SC5->C5_XCONTAI) \r\n\tSC5->(msUnLock())\r\n\t\r\n\tdbSelectArea(\"TMP_MOEDA\")\r\n\tdbCloseArea()            \r\nElse \r\n\r\n\tAVISO(\"Invoice\", \"Já existe invoice para esse pedido! Número=\" + SC5->C5_YINVOIC  , { \"Fechar\" }, 1)\r\n\r\nEndIf\t\r\n\r\nReturn()\r\n\r\n\r\nUser Function fParAut(nTipo)\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal cRet := \"\"\r\n\r\nIf nTipo = 2\r\n\tcRet :=  \"&FILIAL=\" + AllTrim(SC5->C5_FILIAL) +\"&NUMPED=\" + AllTrim(SC5->C5_NUM) \r\nElse\r\n\tdbSelectArea(\"ZGO\")\r\n\tdbSetorder(1)\r\n\tIf dbSeek(xFilial(\"ZGO\")+AllTrim(SC5->C5_NUM))\r\n\t\tcRet := \"&FILIAL=\" + AllTrim(ZGO->ZGO_FILIAL) +\"&INVOICE=\" + AllTrim(ZGO->ZGO_INVOIC)\r\n\tElse\r\n\t\tAlert(\"Pedido de venda sem Invoice!\")\r\n\tEndIf\r\nEndIf\r\n\r\nReturn(cRet)\r\n\r\n\r\nUser Function GA410CONS() \r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal aButtons := {}\r\n\r\nSetKey(VK_F5,{||u_MCONSUTDET()})\r\nSetKey(VK_F6,{||u_GERAMSGPAD()})\r\n\r\naAdd(aButtons, {\"\", {|| u_MCONSUTDET()}, \"[F5] Consulta GrPlus\", \"[F5] Consulta GrPlus\"})\r\naAdd(aButtons, {\"\", {|| u_GERAMSGPAD()}, \"[F6] Gera Msg Padrão\", \"[F6] Gera Msg Padrão\"})\r\n\r\nReturn aButtons\r\n\r\nUser Function GERAMSGPAD()\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal cQuery   := \"\"         \r\n//Local aPeso    := {}\r\n//Local nResult  := 0     \r\n//Local cBoleto  := \"\"\r\nLocal cMsgNota := \"\"    \r\n//Local cMsgNota2:= \"\"                         \r\nLocal cNotas   := \"\"\r\nLocal aGriCavDW:= {}\r\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\r\nLocal cInCavDw := \"\"\r\nLocal nX       := 0\r\n\r\n/*\r\nMensagem foi retirada de uso conforme chamado numero 1109\r\nControle de drawback em tempo Real.\r\n*/\r\nIF TYPE(\"aCols\") == \"A\"\r\n\tFor nX := 1 To Len(aCols)\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec \r\n\t\t\tIf !GDDeleted(nX) .and. LEFT(GdFieldGet(\"C6_LOTECTL\",nX),2)=='DW'\r\n\t\t\t\tIf Empty(aScan(aGriCavDW,GdFieldGet(\"C6_LOTECTL\",nX)) )\r\n\t\t\t\t\taAdd(aGriCavDW , GdFieldGet(\"C6_LOTECTL\",nX)  )\r\n\t\t\t\tEndIf\r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\tNext nX\r\n\tIf !Empty(aGriCavDW)\r\n\t\tFor nX := 1 To Len(aGriCavDW)\t\t\r\n\t\t\taGriCavDW[nX] := LEFT(AllTrim(aGriCavDW[nX]),8)\r\n\t\t\tcInCavDw := cInCavDw +  \"'\"+AllTrim(aGriCavDW[nX])+\"',\"\r\n\t\tNext nX\r\n\t\tcInCavDw := Left(cInCavDw,Len(cInCavDw)-1)\r\n\tEndIf\r\n\t\r\n\r\n\tIf !Empty(cInCavDw)\r\n\t\t\r\n\t\tcQuery := \" SELECT DISTINCT DOC ,\r\n\t\tcQuery += \" \t\t\t\tEMISSAO\r\n\t\tcQuery += \"   FROM(\r\n \t\tcQuery += \" \t SELECT\r\n \t\tcQuery += \" \t\t\tLOTE,\r\n\t\tcQuery += \" \t\t\tIIF(EMISSAO<>'',EMISSAO,ISNULL((SELECT TOP 1 D1_EMISSAO FROM SD1010 WHERE D_E_L_E_T_ = '' AND D1_LOTECTL = LEFT(LOTE, LEN(RTRIM(LTRIM(LOTE)))-1) AND LEFT(D1_COD,2) = 'BL'),'')) EMISSAO,\r\n \t\tcQuery += \" \t\t\tIIF(DOC<>'',DOC,ISNULL((SELECT TOP 1 D1_DOC FROM SD1010 WHERE D_E_L_E_T_ = '' AND D1_LOTECTL = LEFT(LOTE, LEN(RTRIM(LTRIM(LOTE)))-1) AND LEFT(D1_COD,2) = 'BL'),'')) DOC\r\n \t\tcQuery += \" \t   FROM (\r\n \t\tcQuery += \" \t\t\tSELECT\tLOTE,\r\n \t\tcQuery += \" \t\t\t\t\tIIF(FORNECE<>'000011','', DOC) DOC,\r\n \t\tcQuery += \" \t\t\t\t\tEMISSAO,\r\n\t\tcQuery += \" \t\t\t\t\tD1_SERIE,\r\n \t\tcQuery += \" \t\t\t\t\tFORNECE\r\n \t\tcQuery += \" \t\t\t\t\tFROM (\t\r\n \t\tcQuery += \" \t\t\t\t\t\t\tSELECT DISTINCT D1_LOTECTL LOTE, \t\t\t\t\r\n \t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_DOC DOC,\r\n\t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_EMISSAO EMISSAO, \r\n \t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_SERIE,\r\n \t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_FORNECE  FORNECE\r\n \t\tcQuery += \" \t\t\t\t\t\t\tFROM SD1010 \r\n \t\tcQuery += \" \t\t\t\t\t\t\tWHERE D_E_L_E_T_ = '' \r\n \t\tcQuery += \" \t\t\t\t\t\t\tAND D1_LOTECTL IN (\"+cInCavDw+\")\r\n \t\tcQuery += \" \t\t\t\t\t\t )TB_TEMP\r\n \t\tcQuery += \" \t\t  )TAB_TEMP\r\n \t\tcQuery += \" \t)TAB_TEMP_FIM\r\n \t\tcQuery += \" WHERE DOC <> ''\r\n\t\t\r\n\t\tTcQuery cQuery Alias TMP_NOTA New\r\n\t\tdbSelectArea(\"TMP_NOTA\")\r\n\t\t\r\n\t\tDo While !EOF()\r\n\t\t\r\n\t\t\tcNotas := cNotas + AllTrim(TMP_NOTA->DOC) + \"-\" + dtoc(STOd(TMP_NOTA->EMISSAO))+ \" ,\"  \r\n\t\t\r\n\t\t\tdbSelectArea(\"TMP_NOTA\")\r\n\t\t\tdbSkip()\r\n\t\tEndDo\r\n\t\t\r\n\t\tdbSelectArea(\"TMP_NOTA\")\r\n\t\tdbCloseArea()\r\n\t\r\n\t\t//cMsgNota += \"ESTA NOTA FISCAL CONTEM INSUMOS IMPORTADOS ADQUIRIDOS DE ITINGA MINERACAO LTDA. PELA NF:\"+cNOtas+\" AMPARADO PELO REGIME DRAWBACK INTEGRADO - MODALIDADE SUSPENSAO, TIPO INTERMEDIARIO ATO CONCESSÓRIO Nº 20190019344 DE 08/05/2019.///\"   \r\n\tEndIf\r\n\t\r\n\tcQuery := \"SELECT CAST(M2_DATA AS DATE) DATA, MAX(M2_MOEDA2) 'DOLAR' , MAX(M2_MOEDA3) 'EURO'\r\n\tcQuery += \"  FROM SM2010\r\n\tcQuery += \"  WHERE D_E_L_E_T_ = ''\r\n\tcQuery += \"    AND M2_DATA  = '\"+DToS(dDataBase)+\"'\r\n\tcQuery += \"  GROUP BY M2_DATA \r\n\t\r\n\tTcQuery cQuery Alias TMP_MOEDA New\r\n\tdbSelectArea(\"TMP_MOEDA\")\r\n\t\r\n\tcMsgNota += \"INVOICE:\" + AllTrim(M->C5_YINVOIC) + \"-\" + LEFT(DToS(dDataBase),4) +  \"  TAXA DO DOLAR R$:\" + AllTrim(STR(TMP_MOEDA->DOLAR)) + \" CNTR:\" + AllTrim(M->C5_XCONTAI) + \" LACRE:\" + AllTrim(M->C5_XSEAL)\r\n\t\t        \r\n\tdbSelectArea(\"TMP_MOEDA\")\r\n\tdbCloseArea()                       \r\n\t\r\n\tIf !Empty(m->C5_MENNOTA)\r\n\t\tIf MsgYesNo(\"O campo [C5_MENNOTA], já possui informção. Deseja subistituir a mensagem original?\" )\r\n\t\t\tm->C5_MENNOTA := memoline(AllTrim(cMsgNota),254,1,,.T.)\r\n\t\t\tm->C5_MSG2    := memoline(AllTrim(cMsgNota),254,2,,.T.)\r\n\t\tEndIf\t\t\r\n\tElse\r\n\t\tm->C5_MENNOTA := memoline(AllTrim(cMsgNota),254,1,,.T.)\r\n\t\tm->C5_MSG2    := memoline(AllTrim(cMsgNota),254,2,,.T.)\r\n\tEndIf\r\n\t\r\nElse\r\n\r\n\tSetKey(VK_F5,)\r\n\tSetKey(VK_F6,)\r\n\r\nEndIf\r\n\r\nReturn\r\n\r\nStatic Function MAltVlrAut(cNumItem,cNumChapa) \r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal nEdit1\t := 0\r\nLocal oEdit1\r\n\r\nLocal nEdit2\t := 0\r\nLocal oEdit2\r\n\r\nLocal nEdit3\t := SA1->A1_INFDESC\r\nLocal oEdit3\r\n\r\n//Local nEdit4\t := 0\r\n//Local oEdit4\r\n\r\nLocal lNExec     := .F.\r\nLocal lNDele     := .F.\r\n\r\nLocal nX         := 0\r\n\r\n// Variaveis Private da Funcao\r\nPrivate _oDlgVlr\t\t\t\t// Dialog Principal\r\n\r\n// Variaveis que definem a Acao do Formulario                    \r\nDEFINE MSDIALOG _oDlgVlr TITLE \" ITEM \" + cNumItem   FROM u_MGETTELA(223),u_MGETTELA(173) TO u_MGETTELA(359),u_MGETTELA(520) PIXEL\r\n\r\n\t// Cria as Groups do Sistema\r\n\t@ u_MGETTELA(003),u_MGETTELA(005) TO u_MGETTELA(044),u_MGETTELA(168) LABEL \"\" PIXEL OF _oDlgVlr\r\n\r\n\t// Cria Componentes Padroes do Sistema\r\n\t@ u_MGETTELA(010),u_MGETTELA(008) Say \"Valor Negociado:\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t@ u_MGETTELA(010),u_MGETTELA(050) MsGet oEdit1 Var nEdit1            Size u_MGETTELA(35)  ,u_MGETTELA(009) picture(\"@E 9,999,999.99999\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t\r\n\t@ u_MGETTELA(010),u_MGETTELA(085) Say \"Desconto padrão: {%}\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t@ u_MGETTELA(010),u_MGETTELA(130) MsGet oEdit3 Var nEdit3            Size u_MGETTELA(35) ,u_MGETTELA(009) when(.f.) picture(\"@E 99.99\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t\r\n\t@ u_MGETTELA(028),u_MGETTELA(008) Say \"Novo desconto: {%}\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t@ u_MGETTELA(028),u_MGETTELA(050) MsGet oEdit2 Var nEdit2            Size u_MGETTELA(35) ,u_MGETTELA(009) picture(\"@E 99.99999\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t\r\n\t//@ u_MGETTELA(028),u_MGETTELA(085) Say \"Desconto: {Vlr}\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t//@ u_MGETTELA(028),u_MGETTELA(130) MsGet oEdit4 Var nEdit4            Size u_MGETTELA(35) ,u_MGETTELA(009) picture(\"@E 9999.99\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t\r\n\t@ u_MGETTELA(047),u_MGETTELA(131) Button \"Ok\" \t\tSize u_MGETTELA(037),u_MGETTELA(012)  ACTION( lNExec := .T. , Close(_oDlgVlr))  PIXEL OF _oDlgVlr\r\n\t//@ u_MGETTELA(047),u_MGETTELA(085) Button \"Deletar\" \tSize u_MGETTELA(037),u_MGETTELA(012)  ACTION( lNDele := .T. , Close(_oDlgVlr))  PIXEL OF _oDlgVlr\r\n\t//@ u_MGETTELA(050),u_MGETTELA(007) Say \"O valor irá subistituir todas as chapas do cavalete! \"  Size u_MGETTELA(113),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\r\nACTIVATE MSDIALOG _oDlgVlr CENTERED\r\n\r\n\r\nIf lNDele\r\n\tFor nX := 1 To Len(aCols)\r\n\t\tIf AllTrim(GdFieldGet(\"C6_YCAVALE\",nX)) == AllTrim(cNumCav)\t\t\t\r\n\t\t\t aCols[nX][Len(aHeader)+1] := .T.\r\n\t\tEndIf\r\n\tNext nX\r\nEndIf\r\n\r\nIf lNExec\r\n\t\r\n\tIf !Empty(nEdit1) .Or. !Empty(nEdit2)\r\n\t\tFor nX := 1 To Len(aCols)\r\n\t\t\r\n\t\t\tIf !Empty(nEdit1)\r\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\r\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_PRUNIT\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX) //C6_PRUNIT 23/09/2019\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\r\n\t\t\t\tEndIf\r\n\t\t\tElse\r\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\r\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\r\n\t\t\t\t\t\t//GdFieldPut(\"C6_PRUNIT\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX) //C6_PRUNIT 23/09/2019\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\r\n\t\t\t\tEndIf\r\n\t\t\tEndIf\r\n\t\tNext nX\r\n\tEndIf\r\n\t\r\n\t/*\r\n\tIf !Empty(nEdit1) .Or. !Empty(nEdit2) .Or. !Empty(nEdit4)\r\n\t\tFor nX := 1 To Len(aCols)\r\n\t\t\tIf Empty(nEdit4 )\r\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\r\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_PRUNIT\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX) //C6_PRUNIT 23/09/2019\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\r\n\t\t\t\tEndIf\r\n\t\t\tElse \r\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//nEdit4 := round(nEdit4 / cNumChapa,2)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tnEdit2 := (nEdit4*100)/GdFieldGet(\"C6_VALOR\",nX)  \r\n\t\t\t\t\r\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\r\n\t\t\t\tEndIf\r\n\t\t\tEndIf\r\n\t\tNext nX\r\n\tElse\r\n\t\tIf !Empty(nEdit3)\r\n\t\t\t\r\n\t\t\t//For nX := 1 To Len(aCols)\r\n\t\t\t//\tIf AllTrim(GdFieldGet(\"C6_YCAVALE\",nX)) == AllTrim(cNumCav)\t\t\t\r\n\t\t\t//\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit3,nX)\r\n\t\t\t//\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCREF\",nX) ,nEdit1) * nEdit3) /100,2),nX)\r\n\t\t\t//\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,GdFieldGet(\"C6_PRCREF\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCREF\",nX) ,nEdit1) * nEdit2) /100   ,nX)\r\n\t\t\t//\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\r\n\t\t\t//\tEndIf\r\n\t\t\t//Next nX\r\n\t\t\t\r\n\t\tEndIf\r\n\tEndIf\r\n\t*/\r\n\t \r\nEndIf\r\n\r\n\r\nReturn \r\n\r\n\r\nUser Function MCONSUTDET()\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\n// Variaveis Locais da Função\r\nLocal cEdit1\t := Space(100)\r\nLocal cEdit2\t := Space(100)\r\nLocal cEdit3\t := Space(100)\r\nLocal oEdit1\r\nLocal oEdit2\r\nLocal oEdit3\r\n\r\nLocal nX         := 0\r\n\r\n// Variaveis Private da Funcão\r\nPrivate _oDlg\t  // Dialog Principal\r\n\r\n// Variaveis que definem a Acao do Formulario\r\nPrivate VISUAL := .F.                        \r\nPrivate INCLUI := .F.                        \r\nPrivate ALTERA := .F.                        \r\nPrivate DELETA := .F.        \r\n\r\n// Privates das ListBoxes\r\nPrivate aListBox1 := {}\r\nPrivate oListBox1\r\nPrivate aFlist   := {}\r\n\r\n/*\r\nInicializando Variaveis \r\n*/\r\n\r\niF TYPE(\"aCols\") == \"A\"\r\n\r\n\tIF !(M-> C5_TIPO $ \"D,B\")   //Se for nota de devolucao\r\n\t\tcEdit1  := Posicione(\"SA1\",1,XFilial(\"SA1\")+M->C5_CLIENTE+M->C5_LOJACLI,\"A1_NOME\")                   // Retorna o nome do Cliente\r\n\tELSE\r\n\t\tcEdit1  := POSICIONE(\"SA2\",1,XFILIAL(\"SA2\")+M->C5_CLIENTE+M->C5_LOJACLI,\"A2_NOME\")\t\t\t\t\t // Retorna o nome do Fornecedor      \r\n\tENDIF\r\n\tcEdit2 := Posicione(\"SE4\",1,XFilial(\"SE4\")+M->C5_CONDPAG,\"E4_DESCRI\") \r\n\tcEdit3 := Posicione(\"SA3\",1,XFilial(\"SA3\")+M->C5_VEND1,\"A3_NOME\") \r\n\t\r\n\tDEFINE MSDIALOG _oDlg TITLE \"CONSULTA DETALHADA GRPLUS\" FROM u_MGETTELA(333),u_MGETTELA(275) TO u_MGETTELA(734),u_MGETTELA(795) PIXEL\r\n\t\r\n\t// Cria Componentes Padroes do Sistema\r\n\t@ u_MGETTELA(006),u_MGETTELA(005) Say \"NOME DO CLIENTE:\" Size u_MGETTELA(042),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlg\r\n\t@ u_MGETTELA(006),u_MGETTELA(052) MsGet oEdit1 Var cEdit1 when(.f.) Size u_MGETTELA(200),u_MGETTELA(009) COLOR CLR_BLACK PIXEL OF _oDlg\r\n\t@ u_MGETTELA(021),u_MGETTELA(006) Say \"COND. PAGAMENTO:\" Size u_MGETTELA(046),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlg\r\n\t@ u_MGETTELA(021),u_MGETTELA(052) MsGet oEdit2 Var cEdit2 when(.f.) Size u_MGETTELA(057),u_MGETTELA(009) COLOR CLR_BLACK PIXEL OF _oDlg\r\n\t@ u_MGETTELA(021),u_MGETTELA(114) Say \"NOME VENDEDOR:\" Size u_MGETTELA(055),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlg\r\n\t@ u_MGETTELA(021),u_MGETTELA(165) MsGet oEdit3 Var cEdit3 when(.f.) Size u_MGETTELA(087),u_MGETTELA(009) COLOR CLR_BLACK PIXEL OF _oDlg\r\n\t@ u_MGETTELA(180),u_MGETTELA(215) Button \"OK\"  Size u_MGETTELA(037),u_MGETTELA(012) ACTION(Close(_oDlg)) PIXEL OF _oDlg\r\n\t\r\n\t@ u_MGETTELA(035),u_MGETTELA(006) ListBox oListBox1 Fields ;\r\n\t\tHEADER \"ITEM\",\"CAVALETE\",\"P.LIQUIDO\",\"P.BRUTO\",\"QTD CHAPAS\",\"QTD RECORTE/AMOSTRAS\";\r\n\t\tSize u_MGETTELA(247),u_MGETTELA(140) Of _oDlg Pixel;\r\n\t\tColSizes 05,80,50,50,50,20\r\n\r\n\t\toListBox1:bLDblClick := {||  iif(fLibFunc(aFlist[oListBox1:nAT,01])==.t., MAltVlrAut(aFlist[oListBox1:nAT,01],aFlist[oListBox1:nAT,04]) , Alert(\"Produto oferta não pode ser alterado!\") )  }\r\n\r\n\t// Chamadas das ListBox do Sistema\r\n\tfListBox1()\r\n\t\r\n\tFor nX := 1 To Len(aFlist)\r\n\t\tIf AllTrim(aFlist[nX][1]) == AllTrim(GdFieldGet(\"C6_ITEM\",n))\r\n\t\t\t//oListBox1:Select(nX)\r\n\t\t\t//oListBox1:bLine := { || aFlist[ oListBox1:nX ] }\r\n\t\t\toListBox1:nAt := Nx\r\n\t\tEndIf\r\n\tNext Nx\r\n\t\r\n\tACTIVATE MSDIALOG _oDlg CENTERED \r\n\r\nElse\r\n\r\n\t//Alert(\"ok\")\r\n\tSetKey(VK_F5,)\r\n\tSetKey(VK_F6,)\r\nEndIf\r\n\r\nReturn(.T.)\r\n\r\nStatic Function fLibFunc(cNumItem)\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal nX   := 0\r\nLocal lRet := .T.\r\n\r\nFor nX := 1 To Len(aCols)\r\n\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\r\n\t\tIF GdFieldGet(\"C6_XOFERTA\",nX) == \"S\"\t\r\n\t\t\tlRet := .F.\r\n\t\tEndIf\r\n\tEndIf\r\nNext nX\r\n\r\nReturn(lRet)\r\n\r\nStatic Function fListBox1()\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\n//Local nPos   := 0\r\nLocal nTotBr   := 0\r\nLocal nTotLQ   := 0\r\nLocal nTotCh   := 0\r\n//Local nTotDF := 0\r\nLocal nTotAM   := 0\r\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\r\nLocal nx       := 0\r\n\r\noListBox1:SetArray(aFlist)\r\n\r\n/*\r\nPreenche o dados de peso bruto e peso liquido por cavaletes\r\n e quantidade de chapas\r\n*/\r\nFor nX := 1 To Len(aCols)\r\n\r\n\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t//\"0005/0006/0034/0035/0036\"\r\n\tdbSelectArea(\"SB1\")\r\n\tdbSetOrder(1)\r\n\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\r\n\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\r\n\t\tIf !GDDeleted(nX) \r\n\t\t\t/*\r\n\t\t\tIf !aScan(aFlist,{|x|alltrim(x[1]) == GdFieldGet(\"C6_YCAVALE\",nX)  })\t\t\r\n\t\t\t\tAadd(aFlist,{GdFieldGet(\"C6_YCAVALE\",nX) ,;\r\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOLQ\"))    ,;\r\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOBR\"))  ,;\r\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0, fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YQTDBD\") ),;\r\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_QTDVEN\",nX),0 )  })\r\n\t\t\tElse\r\n\t\t\t\tnPos := aScan(aFlist,{|x|alltrim(x[1])==GdFieldGet(\"C6_YCAVALE\",nX) })\r\n\t\t\t \taFlist[nPos][2] := aFlist[nPos][2] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOLQ\"))\r\n\t\t\t \taFlist[nPos][3] := aFlist[nPos][3] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX),fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOBR\"))\r\n\t\t\t \taFlist[nPos][4] := aFlist[nPos][4] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0, fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YQTDBD\") )\r\n\t\t\t \taFlist[nPos][5] := aFlist[nPos][5] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_QTDVEN\",nX), IIF(AllTrim(GdFieldGet(\"C6_YCLASSI\",nX))==\"A\" .AND. Empty(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))),1,0 )) //\r\n\t\t\tEndIf\r\n\t\t\t*/\r\n\t\t\t\r\n\t\t\tAadd(aFlist,{GdFieldGet(\"C6_ITEM\",nX) ,;\r\n\t\t\t\t\t\t GdFieldGet(\"C6_YCAVALE\",nX) ,; \r\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),GdFieldGet(\"C6_PRODUTO\",nX),GdFieldGet(\"C6_LOCAL\",nX),\"B8_YPESOLQ\"))    ,;\r\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),GdFieldGet(\"C6_PRODUTO\",nX),GdFieldGet(\"C6_LOCAL\",nX),\"B8_YPESOBR\"))  ,;\r\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0, fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),GdFieldGet(\"C6_PRODUTO\",nX),GdFieldGet(\"C6_LOCAL\",nX),\"B8_YQTDBD\") ),;\r\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_QTDVEN\",nX),0 )  })\r\n\t\t\t\r\n\t\tEndIf\r\n\tElse \r\n\t\r\n\t//IIF(AllTrim(GdFieldGet(\"C6_YCLASSI\",nX))==\"A\" .AND. Empyt(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))),1,0)\r\n\t\r\n\tAadd(aFlist,{     \"-\",;\r\n\t\t\t\t\t  \"-\",;\r\n\t\t\t\t \t   0 ,;\r\n\t\t\t\t       0 ,;\r\n\t\t\t\t       0 ,;\r\n\t\t\t\t       0  })\r\n\t\r\n\tEndIf\r\nNext Nx\r\n\r\nIf Len(aFlist)>0\r\n\tFor nX := 1 To Len(aFlist)\r\n\t\tIf Alltrim(aFlist[nX][2]) = \"\"\r\n\t\t\taFlist[nX][2] := \"RECORTES\" \r\n\t\tEndIf\r\n\tNext Nx\r\n\t\r\n\tFor nX := 1 To Len(aFlist)\r\n\t\tnTotLQ := nTotLQ + aFlist[nX][3]\r\n\t\tnTotBr := nTotBr + aFlist[nX][4]\r\n\t\tnTotCh := nTotCh + aFlist[nX][5]\r\n\t\tnTotAM := nTotAM + aFlist[nX][6]\r\n\tNext Nx\r\n\t\r\n\tAadd(aFlist,{\"---------\",\"--------------------------------------------\",\"----------------------------------\",\"----------------------------------\",\"----------------------------------\",\"------------------------------------------\"})\r\n\tAadd(aFlist,{\"(=)\",\"  Total:\",nTotLQ,nTotBr,nTotCh,nTotAM})\r\n\tAadd(aFlist,{\"(=)\",\"  Weigth Limit: \"+ AllTrim(Str(M->C5_XWLIMIT)),M->C5_XWLIMIT - nTotLQ  ,M->C5_XWLIMIT - nTotBr,\"\",\"\"})\r\nEndIf\r\n\r\noListBox1:bLine := {|| {;\r\n\t\t\t\t\taFlist[oListBox1:nAT,01],;\r\n\t\t\t\t\taFlist[oListBox1:nAT,02],;\r\n\t\t\t\t\taFlist[oListBox1:nAT,03],;\r\n\t\t\t\t\taFlist[oListBox1:nAT,04],;\r\n\t\t\t\t\taFlist[oListBox1:nAT,05],;\r\n\t\t\t\t\taFlist[oListBox1:nAT,06]}}\r\n\t\r\nReturn        \r\n           \r\n\r\nStatic Function fPqLotSub(cLote,cSubLote,cCodProd,cCodLocal,cTipRet)\r\n****************************************************************************************************************\r\n*    //fPqCvlt(GdFieldGet(\"C6_YCAVALE\",nX)) -- quantiade de cavaletes amostras\r\n*    //\r\n****\r\nLocal nVlrRest := 0\r\n\r\ncQuery  := \" SELECT \"+ cTipRet +\" VLRET\"\r\ncQuery  += \"   FROM SB8010 \r\ncQuery  += \"  WHERE D_E_L_E_T_ = ''\r\ncQuery  += \"    AND B8_LOTECTL = '\"+ AllTrim(cLote)     +\"' \r\ncQuery  += \"    AND B8_NUMLOTE = '\"+ AllTrim(cSubLote)  +\"'\r\ncQuery  += \"    AND B8_PRODUTO = '\"+ AllTrim(cCodProd)  +\"'\r\ncQuery  += \"    AND B8_LOCAL   = '\"+ AllTrim(cCodLocal) +\"'\r\ncQuery  += \"    AND B8_SALDO <> 0\r\n\r\ntcQuery cQuery alias TRB new\r\ndbSelectArea(\"TRB\")\r\ndbgotop()\r\n\r\nnVlrRest := TRB->VLRET\r\n\r\ndbSelectArea(\"TRB\") \r\ndbCloseArea()\r\n\r\nReturn nVlrRest\r\n\r\n\r\nStatic Function fPqCvlt(cCavalete)\r\n****************************************************************************************************************\r\n*    //fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOBR\")\r\n*    \r\n****\r\nLocal nVlrRest := 0\r\n\r\ncQuery  := \" SELECT COUNT(*) AS VLR_CONT\r\ncQuery  += \"    FROM SB8010 \r\ncQuery  += \"   WHERE D_E_L_E_T_ = ''\r\ncQuery  += \"     AND B8_YCAVALE = '\"+AllTrim(cCavalete)+\"'\r\ncQuery  += \"     AND B8_YCLASSI = 'A'\r\ncQuery  += \"     AND B8_SALDO <> 0\r\n\r\ntcQuery cQuery alias TRB new\r\ndbSelectArea(\"TRB\")\r\ndbgotop()\r\n\r\nnVlrRest := TRB->VLR_CONT\r\n\r\ndbSelectArea(\"TRB\") \r\ndbCloseArea()\r\n\r\nReturn nVlrRest\r\n\r\n\r\nUser Function MINFORFIN(dSetDate,cSetCodPG)\r\n****************************************************************************************************************\r\n*    //Informações Financeiras \r\n*    \r\n****\r\nPrivate _oInforFin\t\t\t\t// Dialog Principal\r\n                       \r\nPrivate oPG    := LoadBitmap(GetResources(), \"BR_VERMELHO\")\r\nPrivate oNPG   := LoadBitmap(GetResources(), \"BR_VERDE\")\r\nPrivate oNADA  := LoadBitmap(GetResources(), \"BR_CINZA\")\r\n\r\n// Privates das ListBoxes\r\nPrivate aListBoxFin := {}\r\nPrivate oListBoxFin\r\n\r\nDEFINE MSDIALOG _oInforFin TITLE \"Informações Financeiras\" FROM u_MGETTELA(178),u_MGETTELA(181) TO u_MGETTELA(403),u_MGETTELA(967) PIXEL\r\n\r\n\t// Cria Componentes Padroes do Sistema\r\n\t@ u_MGETTELA(093),u_MGETTELA(308) Button \"Cancelar\" Size u_MGETTELA(037),u_MGETTELA(012) ACTION(Close(_oInforFin)) PIXEL OF _oInforFin\r\n\t@ u_MGETTELA(093),u_MGETTELA(351) Button \"Salvar\" Size u_MGETTELA(037),u_MGETTELA(012)   ACTION(fSaveDtBl(),Close(_oInforFin)) PIXEL OF _oInforFin\r\n\r\n\t\t@ u_MGETTELA(003),u_MGETTELA(005) ListBox oListBoxFin Fields ;\r\n\t\tHEADER \"\",\"RECNO\",\"PREFIXO\",\"NUMERO\",\"TIPO\",\"PARCELA\",\"VALOR\",\"EMISSAO NF\",\"VENCIMENTO\",\"DATA BAIXA\",\"VENCIMENTO B/L\",\"VENCIMENTO B/L REAL\" ;\r\n\t\tSize u_MGETTELA(383),u_MGETTELA(088) Of _oInforFin Pixel;\r\n\t\tColSizes 08,20,40,40,40,40,40,40,40,40,50,40\r\n\t\t\r\n\t\t//oListBoxFin:bLDblClick := {||  MAltVlrAut(aFlist[oListBoxFin:nAT,01]) } alterar a função\r\n\t\t\r\n\r\n\t// Chamadas das ListBox do Sistema\r\n\tfListFin1(dSetDate,cSetCodPG)\r\n\r\nACTIVATE MSDIALOG _oInforFin CENTERED \r\n\r\nReturn(.T.)\r\n\r\n\r\nStatic Function fSaveDtBl()\r\n****************************************************************************************************************\r\n* //\r\n* //\r\n* \r\n****\r\nLocal lGravou  := .F.\r\nLocal cCodTitu := \"\"\r\nLocal nX       := 0\r\n\r\nFor nX:=1 to Len(aListBoxFin)\r\n\tIf !Empty(aListBoxFin[nX][12])\r\n\t\t\r\n\t\tdbSelectArea(\"SE1\")\r\n\t\tdbGoto(aListBoxFin[nX][2]) \r\n\t\tSE1->(reclock(\"SE1\", .F.))\r\n\t\t\tSE1->E1_VENCTO  := aListBoxFin[nX][11] \r\n\t\t\tSE1->E1_VENCREA := aListBoxFin[nX][12]\r\n\t\tSE1->(msUnLock())\r\n\t\t\r\n\t\tlGravou:=.T.\r\n\t\tcCodTitu := cCodTitu + aListBoxFin[nX][04]+\"-\"+aListBoxFin[nX][06]+ \" | \" + chr(13)+chr(10) \r\n\t\t\r\n\tEndIf\r\nNext nX\r\n\r\nIf lGravou\r\n\tAVISO(\"Títulos gravados com sucesso:\", cCodTitu , { \"Fechar\" }, 3)\r\nEndIF\r\n\r\nReturn()\r\n\r\nStatic Function fListFin1(dSetDate,cSetCodPG)\r\n****************************************************************************************************************\r\n* //\r\n* //\r\n* \r\n****\r\nLocal cQuery  := \"\"\r\n//Local aTPAVA  := {}\r\nLocal aRetAva := \"\"\r\n\r\ndbSelectArea(\"SF2\")\r\ndbSetOrder(2)\r\nIF dbSeek(xFilial(\"SF2\") + M->C5_CLIENTE + M->C5_LOJACLI + M->C5_NOTA + M->C5_SERIE + \"N\")\r\n\r\n\taTPadv := Condicao(M->C5_XVLRFIN,cSetCodPG,,SF2->F2_EMISSAO,) //FSepCond(M->C5_XVLRFIN,cSetCodPG,SF2->F2_EMISSAO)\r\n\r\n\tdbSelectArea(\"SE4\")\r\n\tdbSetOrder(1)\r\n\tIf dbSeek(xFilial(\"SE4\")+ cSetCodPG )\r\n\t\taRetAva := strtokarr (AllTrim(SE4->E4_TPAVA), \",\")\r\n\tEndIf\r\n\r\n\tIf Len(aRetAva) <> 0\r\n\t\tIf Len(aRetAva) <> Len(aTPadv)\r\n\t\t\tAlert(\"Verifique a condição de pagamento: (\" + AllTrim(cSetCodPG) + \"). O campo tp. avançado está diferente das quantidade de parcelas.\" )\r\n\t\tEndIf\r\n\tEndIf\r\n\r\n\tcQuery := \" \tSELECT\tR_E_C_N_O_ RECNO, \r\n\tcQuery += \" \t\t\tE1_FILIAL,\r\n\tcQuery += \" \t\t\tE1_PREFIXO,\r\n\tcQuery += \" \t\t\tE1_TIPO,\r\n\tcQuery += \" \t\t\tE1_NUM,\r\n\tcQuery += \" \t\t\tE1_PARCELA,\r\n\tcQuery += \" \t\t\tE1_EMISSAO,\r\n\tcQuery += \" \t\t\tE1_VENCREA,\r\n\tcQuery += \" \t\t\tE1_BAIXA,\r\n\tcQuery += \" \t\t\tE1_VALOR\r\n\tcQuery += \" \t  FROM SE1010 \r\n\tcQuery += \" \t WHERE E1_NUM     = '\"+M->C5_NOTA+\"'\r\n\tcQuery += \" \t   AND D_E_L_E_T_ = ''\r\n\t//cQuery += \" \t   AND E1_BAIXA   = ''\r\n\tcQuery += \" \t   AND E1_EMISSAO = '\"+dtoS(SF2->F2_EMISSAO)+\"'\r\n\tcQuery += \" \t   AND E1_TIPO IN ('NF')\r\n\tcQuery += \" \t   AND E1_CLIENTE = '\"+M->C5_CLIENTE+\"'\r\n\tcQuery += \" \t   AND E1_LOJA    = '\"+M->C5_LOJACLI+\"'\r\n\tcQuery += \" \t   AND E1_SERIE   = '\"+M->C5_SERIE+\"' \r\n\r\n\tTcQuery cQuery Alias TMP_FIM New\r\n\tdbSelectArea(\"TMP_FIM\")\r\n\t\r\n\tnPosAt := 0\r\n\tcTipoAvan := \"\"\r\n\t\r\n\tDo While !EOF()\r\n\t\r\n\t\tnPosAt := nPosAt + 1\r\n\t\tIf Len(aRetAva)<>0\r\n\t\t\tcTipoAvan := aRetAva[nPosAt] \r\n\t\t\t\r\n\t\t\tIf AllTrim(cTipoAvan) <> \"A\"\r\n\t\t\t\taTPadv := Condicao(M->C5_XVLRFIN,cSetCodPG,,dSetDate+1,)\r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\t\t\r\n\t\tAadd(aListBoxFin,{\tiif(!Empty(aRetAva),IIF(EMPTY(TMP_FIM->E1_BAIXA),oNPG,oPG),oNADA),;\r\n\t\t\t\t\t\t\tTMP_FIM->RECNO,;\r\n\t\t\t\t\t\t\tTMP_FIM->E1_PREFIXO,;\r\n\t\t\t\t\t\t\tTMP_FIM->E1_NUM,;\r\n\t\t\t\t\t\t\tTMP_FIM->E1_TIPO,;\r\n\t\t\t\t\t\t\tTMP_FIM->E1_PARCELA,;\r\n\t\t\t\t\t\t\tTMP_FIM->E1_VALOR,;\r\n\t\t\t\t\t\t\tStoD(TMP_FIM->E1_EMISSAO),;\r\n\t\t\t\t\t\t\tStoD(TMP_FIM->E1_VENCREA),;\r\n\t\t\t\t\t\t\tStoD(TMP_FIM->E1_BAIXA),;\r\n\t\t\t\t\t\t\tiif(!Empty(aRetAva),IIf(Empty(TMP_FIM->E1_BAIXA), aTPadv[nPosAt][1]             ,sToD(\"\") ),sToD(\"\")),;\r\n\t\t\t\t\t\t\tiif(!Empty(aRetAva),IIf(Empty(TMP_FIM->E1_BAIXA), DataValida(aTPadv[nPosAt][1]) ,sToD(\"\") ),sToD(\"\"));\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\r\n\t\tdbSelectArea(\"TMP_FIM\")\r\n\t\tdbSkip()\r\n\tEndDo\r\n\t\r\n\tdbSelectArea(\"TMP_FIM\")\r\n\tdbCloseArea()\r\n\r\n\tif Empty(aListBoxFin)\r\n\t\r\n\t\tAadd(aListBoxFin,{\t\toNADA,;\r\n\t\t\t\t\t\t\t\t\"\",;\r\n\t\t\t\t\t\t\t\t\"\",;\r\n\t\t\t\t\t\t\t\t\"\",;\r\n\t\t\t\t\t\t\t\t\"\",;\r\n\t\t\t\t\t\t\t\t\"\",;\r\n\t\t\t\t\t\t\t\t\"\",;\r\n\t\t\t\t\t\t\t\tStoD(\"\"),;\r\n\t\t\t\t\t\t\t\tStoD(\"\"),;\r\n\t\t\t\t\t\t\t\tStoD(\"\"),;\r\n\t\t\t\t\t\t\t\tStoD(\"\"),;\r\n\t\t\t\t\t\t\t\tsToD(\"\");\r\n\t\t\t\t\t\t\t\t})\r\n\t\r\n\tEndIf \r\n\r\n\toListBoxFin:SetArray(aListBoxFin)\r\n\t\r\n\toListBoxFin:bLine := {|| {;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,01],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,02],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,03],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,04],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,05],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,06],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,07],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,08],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,09],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,10],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,11],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,12]}}\r\n\t\r\n\r\nEndIf\r\n\r\nReturn()\r\n"}}}
Content-Length: 33746
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode/10_LIB/WFMobGran.prw","languageId":"advpl","version":1,"text":"#include \"RWMAKE.ch\"\r\n#include \"Colors.ch\"\r\n#include \"Font.ch\"\r\n#Include \"HBUTTON.CH\"\r\n#include \"Topconn.ch\"\r\n#Include \"Protheus.ch\"\r\n#include \"tbiconn.ch\"\r\n#include \"totvs.ch\"\r\n\r\n/*\r\nPrograma ...: WFMOBGRAN.Prw\r\nUso ........: Importaçao de Pedidos MobGran\r\nData .......: 09/11/2021\r\nFeito por ..: Bruno Lage Ferreira   (33)8402-2125\r\nEmail.......: sigawise@gmail.com\r\nCopyright ..: @1998-2001,2014\r\n\r\nFATURADO  - AZUL      - 3\r\nCANCELADO - VERMELHO  - 4\r\nIMPORTADO - LARANJA   - 5\r\n*/\r\n\r\nUser Function WFMOBGRAN()\r\n************************************************************************************************\r\n*\r\n* /* Programa Princial*/\r\n***\r\n\r\nLocal cNRotina     := ProcName()\r\n\r\nPrivate _aCabecalho := {}\r\nPrivate _aItens\t\t:= {}\r\nPrivate lMsHelpAuto := .T.\r\nPrivate lMsErroAuto := .F.\r\n\r\nCOnOut(\"*********************************************\")\r\nCOnOut(\" Prg [WFMOBGRAN]         (SIGAWISE)          \")\r\nCOnOut(\"*********************************************\")\r\n\r\n/*\r\nEste recurso foi criado para executar a chamada na [FILIAL 01]\r\n*/\r\nIf MTRotina(cNRotina)\r\n\tMfEnvir(\"1\",1,\"010101\")\r\nElse\r\n\tConOut(\"Processo em execucao! [u_WFMOBGRAN], Adiado para o próximo minuto.\")\r\nEndIf\r\n\r\nReturn()\r\n\r\n\r\nStatic Function MTRotina(cNomeRotina)\r\n************************************************************************************************\r\n*\r\n* /* Programa para verificar se a rotina esta sendo executada */\r\n***\r\nLocal   aInfo    := GetUserInfoArray()\r\nLocal   lRet     := .T.\r\nLocal   nCNPross := 0\r\nLocal   nI       := 0\r\n\r\nFor nI := 1 to len(aInfo)\r\n\tIf upper(AllTrim(cNomeRotina)) $ upper(AllTrim(aInfo[nI][11]))\r\n\t\tnCNPross := nCNPross + 1\r\n\tEndIf\r\nNext nI\r\n\r\nIf nCNPross > 1\r\n\tlRet := .F.\r\nEndIf\r\n\r\nReturn(lRet)\r\n\r\n\r\nUser Function MFQueryC()\r\n************************************************************************************************\r\n*\r\n* /* Importação de Clientes */\r\n***\r\nLocal aCli  := {}\r\n\r\n//Local nOpcAuto  := MODEL_OPERATION_INSERT\r\nLocal lRet      := .T.\r\nLocal cQuery    := \"\"\r\nLocal cNumCli   := \"\"\r\nLocal cCodMun   := \"\"\r\n\r\nLocal aAI0Auto := {}\r\nLocal nOpcAuto := 3//MODEL_OPERATION_INSERT\r\n\r\nLocal   cDescErro   := \"\"\r\nPrivate lMsErroAuto := .F.\r\n\r\nConOut(\"[Importaçao de Clientes] INICIO!\")\r\n\r\ncQuery := \" SELECT  ZSE_FILIAL,\r\ncQuery += \"\t\t\tZSE_COD,\r\ncQuery += \"\t\t\tZSE_LOJA,\r\ncQuery += \"\t\t\tZSE_PESSOA,\r\ncQuery += \"\t\t\tZSE_CGC,\r\ncQuery += \"\t\t\tZSE_NOME,\r\ncQuery += \"\t\t\tZSE_ENDER,\r\ncQuery += \"\t\t\tZSE_TIPO,\r\ncQuery += \"\t\t\tZSE_EST,\r\ncQuery += \"\t\t\tZSE_CODMUN,\r\ncQuery += \"\t\t\tZSE_MUNIC,\r\ncQuery += \"\t\t\tZSE_BAIRRO,\r\ncQuery += \"\t\t\tZSE_PAIS,\r\ncQuery += \"\t\t\tZSE_INSCRI,\r\ncQuery += \"\t\t\tZSE_VEND1,\r\ncQuery += \"\t\t\tZSE_CDPAIS,\r\ncQuery += \"\t\t\tZSE_LAT,\r\ncQuery += \"\t\t\tZSE_LONG,\r\ncQuery += \"\t\t\tZSE_MOEDA,\r\ncQuery += \"\t\t\tZSE_STATUS,\r\ncQuery += \"\t\t\tZSE_DDD,\r\ncQuery += \"\t\t\tZSE_DDI,\r\ncQuery += \"\t\t\tZSE_TELL,\r\ncQuery += \"\t\t\tZSE_EMAIL,\r\ncQuery += \"\t\t\tZSE_CEP,\r\ncQuery += \"\t\t\tZSE_ERRO,\r\ncQuery += \"\t\t\tR_E_C_N_O_ RECNO\r\ncQuery += \"\t   FROM ZSE010 \r\ncQuery += \"\t  WHERE D_E_L_E_T_ = ''\r\ncQuery += \"\t    AND ZSE_STATUS = 'P'\r\n\r\nTCQUERY cQuery ALIAS \"TRB_CLI\" NEW\r\n\r\ndbSelectArea(\"TRB_CLI\")\r\ndbGoTop()\r\nDo While !EOF()\r\n\t\r\n\tcNumCli  := U_MCONTNUM(\"SA1\",\"01\")\r\n\r\n\taCli := {}\r\n\r\n\tcQuery := \"select CC2_MUN FROM CC2010 WHERE D_E_L_E_T_ = '' AND CC2_CODMUN = '\"+TRB_CLI->ZSE_CODMUN+\"' AND CC2_EST = '\"+TRB_CLI->ZSE_EST+\"'\"\r\n\tTCQUERY cQuery ALIAS \"TRB_MUN\" NEW\r\n\r\n\tdbSelectArea(\"TRB_MUN\")\r\n\tdbGoTop()\r\n\tcCodMun := TRB_MUN->CC2_MUN\r\n\tdbSelectArea(\"TRB_MUN\")\r\n\tdbCloseArea()\r\n\r\n\taAdd(aCli, {\"A1_FILIAL\"  , xFilial(\"SA1\")          \t, Nil})\r\n\taAdd(aCli, {\"A1_COD\"     , cNumCli                 \t, Nil})\r\n\taAdd(aCli, {\"A1_LOJA\"    , TRB_CLI->ZSE_LOJA    \t, Nil})\r\n\taAdd(aCli, {\"A1_PESSOA\"  , TRB_CLI->ZSE_PESSOA\t    , Nil})\r\n\taAdd(aCli, {\"A1_NOME\"    , TRB_CLI->ZSE_NOME        , Nil})\r\n\taAdd(aCli, {\"A1_NREDUZ\"  , TRB_CLI->ZSE_NOME        , Nil})\r\n\taAdd(aCli, {\"A1_END\"     , TRB_CLI->ZSE_ENDER       , Nil})\r\n\taAdd(aCli, {\"A1_TIPO\"    , TRB_CLI->ZSE_TIPO        , NIL})\r\n\taAdd(aCli, {\"A1_EST\"     , TRB_CLI->ZSE_EST         , Nil})\r\n\taAdd(aCli, {\"A1_COD_MUN\" , TRB_CLI->ZSE_CODMUN      , Nil})\r\n\taAdd(aCli, {\"A1_MUN\"     , cCodMun\t\t\t        , Nil})\r\n\taAdd(aCli, {\"A1_BAIRRO\"  , TRB_CLI->ZSE_BAIRRO      , Nil})\r\n\taAdd(aCli, {\"A1_CGC\"     , TRB_CLI->ZSE_CGC         , Nil})\r\n\taAdd(aCli, {\"A1_INSCR\"   , TRB_CLI->ZSE_INSCRI      , Nil})\r\n\r\n\taAdd(aCli, {\"A1_CODPAIS\" , TRB_CLI->ZSE_CDPAIS      , Nil})\r\n\taAdd(aCli, {\"A1_PAIS\"    , TRB_CLI->ZSE_PAIS        , Nil})\r\n\t\r\n\taAdd(aCli, {\"A1_VEND\"    , TRB_CLI->ZSE_VEND1       , Nil})\r\n\taAdd(aCli, {\"A1_NATUREZ\" , \"1.1.02.01\"              , Nil})\r\n\r\n\taAdd(aCli, {\"A1_XLAT\"    , TRB_CLI->ZSE_LAT         , Nil})\r\n\taAdd(aCli, {\"A1_XLONG\"   , TRB_CLI->ZSE_LONG        , Nil})\r\n\taAdd(aCli, {\"A1_YMOEDA\"  , TRB_CLI->ZSE_MOEDA       , Nil})\r\n\r\n\taAdd(aCli, {\"A1_DDD\"    , TRB_CLI->ZSE_DDD          , Nil})\r\n\taAdd(aCli, {\"A1_DDI\"    , TRB_CLI->ZSE_DDI          , Nil})\r\n\taAdd(aCli, {\"A1_TEL\"    , TRB_CLI->ZSE_TELL         , Nil})\r\n\taAdd(aCli, {\"A1_EMAIL\"  , TRB_CLI->ZSE_EMAIL        , Nil})\r\n\taAdd(aCli, {\"A1_CEP\"    , TRB_CLI->ZSE_CEP          , Nil})\r\n\r\n\taAdd(aAI0Auto,{\"AI0_SALDO\" ,0 ,Nil})\r\n\r\n\tlMsErroAuto := .F.\r\n\t//MsExecAuto({|x,y| MATA030(x,y)}, aCli, 3)\r\n\tMSExecAuto({|a,b,c| CRMA980(a,b,c)}, aCli, nOpcAuto, aAI0Auto)\r\n\r\n\tIf lMsErroAuto\r\n\r\n\t\tcDescErro :=\"**********************\"+ CRLF \r\n\t\tcDescErro += DtoC(dDatabase)+\"-\"+TIME()+CRLF\r\n\t\tcDescErro +=\"**********************\"+ CRLF \r\n\t\tcDescErro += Mostraerro(\"D:\\TOTVS 12\\Microsiga\\protheus_data\\_LOGINTMOB\\\", Replace(Replace(DtoC(dDatabase)+\"_\"+TIME(),\":\",\"_\"),\"/\",\"_\") + \"_ErroCliente.log\")\r\n\r\n\t\tConOut(cDescErro)\r\n\r\n\t\tdbSelectArea('ZSE')\r\n\t\tdbGoTo(TRB_CLI->RECNO)\r\n\t\tRecLock( 'ZSE', .F. )\t\r\n\t\t\tReplace ZSE->ZSE_STATUS  With \"M\"\r\n\t\t\tReplace ZSE->ZSE_ERRO    With cDescErro\r\n\t\tMsUnLock()   \r\n\telse\r\n\t\tConout(\"Cliente incluído com sucesso!\")\r\n\r\n\t\tdbSelectArea('ZSE')\r\n\t\tdbGoTo(TRB_CLI->RECNO)\r\n\t\tRecLock( 'ZSE', .F. )\t\r\n\t\t\tReplace ZSE->ZSE_COD     With cNumCli \r\n\t\t\tReplace ZSE->ZSE_STATUS  With \"X\"\r\n\t\t\tReplace ZSE->ZSE_ERRO    With \"\"\r\n\t\tMsUnLock()   \r\n\tEndIf\r\n\t\t\r\n\tdbSelectArea(\"TRB_CLI\")\r\n\tdbSkip()\r\nEndDo\r\n\r\n/*\r\nFecha arquivo temporario de SQL cabeçalhos\r\n*/\r\ndbSelectArea(\"TRB_CLI\")\r\ndbCloseArea()\r\n\r\nConOut(\"[Importaçao de Clientes] Finalização!\")\r\n\r\nReturn lRet\r\n\r\n\r\nUser Function MlibPV()\r\n************************************************************************************************\r\n*\r\n*/* Liberação P.Venda*/\r\n***\r\nLocal cQuery := \"\"\r\n\r\nConOut(\"[Liberação de Pedidos de Venda] Início!\")\r\n\r\ncQuery := \"  SELECT\tC5_FILIAL+C5_NUM CHAVE,\r\ncQuery += \"  \t\tSC5.R_E_C_N_O_ REC_SC5,\r\ncQuery += \"  \t\tZSC.R_E_C_N_O_ REC_ZSC,\r\ncQuery += \"  \t\tZSC_TIPO TIPO,\r\ncQuery += \"  \t\tZSC_SITUAC SIT, \r\ncQuery += \"  \t\tCASE\r\ncQuery += \"              WHEN ZSC_SITUAC = 'L' AND ZSC_TIPO='1' THEN 'UPDATE SC5010 SET C5_BLQ='''+'2'+'''' + ' WHERE R_E_C_N_O_ = ' +RTRIM(LTRIM(SC5.R_E_C_N_O_))\r\ncQuery += \"  \t\t\t WHEN ZSC_SITUAC = 'L' AND ZSC_TIPO='2' THEN 'UPDATE SC5010 SET C5_BLQ='' '''       + ' WHERE R_E_C_N_O_ = ' +RTRIM(LTRIM(SC5.R_E_C_N_O_))\r\ncQuery += \"  \t\tEND UPDSC5,\r\ncQuery += \"  \t\tCASE\r\ncQuery += \"              WHEN ZSC_SITUAC = 'L' AND ZSC_TIPO='1' THEN 'UPDATE ZSC010 SET ZSC_SITUAC='''+'X'+'''' + ' WHERE R_E_C_N_O_ = ' +RTRIM(LTRIM(ZSC.R_E_C_N_O_))\r\ncQuery += \"  \t\t \t WHEN ZSC_SITUAC = 'L' AND ZSC_TIPO='2' THEN 'UPDATE ZSC010 SET ZSC_SITUAC='''+'X'+'''' + ' WHERE R_E_C_N_O_ = ' +RTRIM(LTRIM(ZSC.R_E_C_N_O_))\r\ncQuery += \"  \t\tEND UPDZSC,\r\ncQuery += \" \t\tCASE\r\ncQuery += \" \t\t\tWHEN ZSC_SITUAC = 'L' AND ZSC_TIPO='1' AND (SELECT DISTINCT ZSC_DATA FROM ZSC010 WHERE\tD_E_L_E_T_ = '' AND ZSC_CODIGO = C5_NUM AND ZSC_TIPO <> 'B' AND ZSC_TIPO = '2')<>''   THEN 'UPDATE SC5010 SET C5_BLQ='''+''+'''' + ' WHERE R_E_C_N_O_ = ' +RTRIM(LTRIM(SC5.R_E_C_N_O_))\r\ncQuery += \" \t\tEND UPDSC5_LIBFIN\r\ncQuery += \"    FROM SC5010 SC5 INNER JOIN ZSC010 ZSC ON (C5_FILIAL+C5_NUM = ZSC_FILIAL+ZSC_CODIGO) \r\ncQuery += \"   WHERE C5_BLQ     <> '' \r\ncQuery += \"     AND ZSC_TIPO   <> 'B' \r\ncQuery += \"     AND ZSC_SITUAC <> 'X'\r\ncQuery += \"     AND SC5.D_E_L_E_T_ = '' \r\ncQuery += \"     AND ZSC.D_E_L_E_T_ = ''\r\ncQuery += \"     AND ZSC_TIPO   < '3'\r\n\r\nTCQUERY cQuery ALIAS \"TRB_LPV\" NEW\r\n\r\ndbSelectArea(\"TRB_LPV\")\r\ndbGoTop()\r\nDo While !EOF()\r\n\r\n\tIf TRB_LPV->SIT = 'L'\r\n\t\tcQuery := TRB_LPV->UPDSC5\r\n\t\tTcSqlExec(cQuery)\r\n\t\t\r\n\t\tcQuery := TRB_LPV->UPDZSC\r\n\t\tTcSqlExec(cQuery)\r\n\r\n\t\tcQuery := TRB_LPV->UPDSC5_LIBFIN\r\n\t\tTcSqlExec(cQuery)\r\n\tEndIf\r\n\r\n\tdbSelectArea(\"TRB_LPV\")\r\n\tdbSkip()\r\nEndDo\r\n\r\n/*\r\nFecha arquivo temporario de SQL cabeçalhos\r\n*/\r\ndbSelectArea(\"TRB_LPV\")\r\ndbCloseArea()\r\n\r\nConOut(\"[Liberação de Pedidos de Venda] Finalização!\")\r\n\r\nReturn()\r\n\r\n\r\nStatic Function MfEnvir(cEmp01,nFil00,cFil01)\r\n************************************************************************************************\r\n*\r\n*/* Programa de preparacao dos ambientes conforme paramentros  de filial*/\r\n***\r\nLocal   lAuto \t   := .F.\r\nPrivate aIdVend    := {}\r\n\r\nCOnOut(\"*********************************************\")\r\nCOnOut(\" Prg [MfEnvir]            (SIGAWISE)         \")\r\nCOnOut(\"*********************************************\")\r\n\r\n/*\r\nCriaçao dos ambientes\r\n*/\r\nIf Select(\"SX2\") == 0\r\n\tPREPARE ENVIRONMENT EMPRESA \"01\" FILIAL cFil01 TABLES \"SC5\"\r\n\tConout(DtoC(dDatabase)+\" - \"+TIME()+\" Iniciando JOB de [Importaçao de Pedidos MobGran].\")\r\n\tlAuto := .F.\r\nEndIf\r\n\r\n/*\r\nFuncao princial de chamadas de rotinas\r\n*/\r\nu_MFQueryC()\r\n\r\n/*\r\nFuncao princial de chamadas de rotinas\r\n*/\r\nu_MFQueryL()\r\n\r\n/*\r\nFuncao princial de chamadas de rotinas\r\n*/\r\nu_MFQueryP( \"010101\" , \"001\" )\r\n\r\n/*\r\nFuncao princial de Liberação de Pedidos de Venda\r\n*/\r\nU_MlibPV()\r\n\r\n/*\r\nControle de limpesa dos ambientes\r\n*/\r\nIf lAuto\r\n\tRpcClearEnv()\r\n\tConout(DtoC(dDatabase)+\" - \"+TIME()+\" FIM do JOB [Importaçao de Pedidos MobGran] .\")\r\nElse\r\n\tRpcClearEnv()\r\n\tAlert(\"[Importaçao de Pedidos MobGran] efetuada com sucesso!\")\r\nEndif\r\n\r\n/*\r\nGarante o reinicio do ambientes\r\n*/\r\nRESET ENVIRONMENT\r\n\r\nReturn()\r\n\r\n\r\nUser Function MFQueryL()\r\n************************************************************************************************\r\n*\r\n*\t//Funcao especifica para geracao das SQL de Trabalho\r\n*\r\n***\r\nLocal cQuery := \"\"\r\n\r\nConout(DtoC(dDatabase)+\" - \"+TIME()+\" JOB [Atualização do limites de créditos Qualitá] .\")\r\n\r\ncQuery := \" UPDATE SA1010  \r\ncQuery += \"    SET A1_LC = ZSD_NVALOR\r\ncQuery += \"   FROM ZSD010 ZSD INNER JOIN SA1010 SA1 ON (A1_COD = ZSD_CLIENT AND A1_LOJA = ZSD_LOJA)\r\ncQuery += \"  WHERE ZSD.D_E_L_E_T_ = ''\r\ncQuery += \"    AND SA1.D_E_L_E_T_ = ''\r\ncQuery += \"    AND ZSD_STATUS     = 'P'\r\n\r\n/*\r\nExecucao background do código sql\r\n*/\r\nTcSqlExec(cQuery)\r\n\r\ncQuery := \" UPDATE ZSD010  \r\ncQuery += \"    SET ZSD_STATUS = 'X'\r\ncQuery += \"   FROM ZSD010 ZSD INNER JOIN SA1010 SA1 ON (A1_COD = ZSD_CLIENT AND A1_LOJA = ZSD_LOJA)\r\ncQuery += \"  WHERE ZSD.D_E_L_E_T_ = ''\r\ncQuery += \"    AND SA1.D_E_L_E_T_ = ''\r\ncQuery += \"    AND ZSD_STATUS     = 'P'\r\n\r\n/*\r\nExecucao background do código sql\r\n*/\r\nTcSqlExec(cQuery)\r\n\r\nConout(DtoC(dDatabase)+\" - \"+TIME()+\" FIM DO JOB [Atualização do limites de créditos Qualitá] .\")\r\n\r\nReturn()\r\n\r\nUser Function MFQueryP(cPara01,cPara02)\r\n************************************************************************************************\r\n*\r\n*\t//Funcao especifica para geracao das SQL de Trabalho\r\n*\r\n***\r\nLocal cQuery \t:= \"\"\r\nLocal nCodItem \t:= 0\r\nLocal cCodTab   := \"\"\r\nLocal cCodTabP  := \"\"\r\n\r\nPrivate aTabTES \t:= {}\r\nPrivate cNumPedPol  := \"\"\r\n\r\nCOnOut(\"*********************************************\")\r\nCOnOut(\" Prg u_MFQueryP([\"+cPara01+\"],[\"+cPara02+\"])     (SIGAWISE)\")\r\nCOnOut(\"*********************************************\")\r\n\r\ncCodTab  := \"\"\r\ncCodTabP := \"\"\r\n\r\n/*\r\nMobGran_pedcab\r\n*/\r\ncQuery := \" SELECT DISTINCT  \r\ncQuery += \" \t   '010101'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t    AS C5_FILIAL ,\r\ncQuery += \"        'N'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS C5_TIPO   ,\r\ncQuery += \" \t   'N'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS C5_XSHOWFO,\r\ncQuery += \" \t   ZSA_IDMOBP\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS IDMOB     ,\r\ncQuery += \" \t   ZSA_CPAG\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS C5_CONDPAG,\r\ncQuery += \" \t   REPLACE(CONVERT(VARCHAR(10),getdate(),112),'-','') \t\t\t\t\tAS C5_EMISSAO,\r\ncQuery += \" \t   ''\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t        AS C5_TRANSP ,\r\ncQuery += \" \t   LEFT(ZSA_CLIENT ,6)\t\t\t\t\t\t\t\t\t\t\t\t\tAS C5_CLIENTE,\r\ncQuery += \"        RIGHT(ZSA_CLIENT,2)\t\t\t\t\t\t\t\t\t\t\t\t\tAS C5_LOJA   ,\r\ncQuery += \" \t   'ME' \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS C5_YTIPO  ,\r\ncQuery += \" \t   (SELECT MIN(C5_NUM) FROM SC5010 WHERE C5_XIDMOB = ZSA_IDMOBP)\t\tAS C5_NUM\r\ncQuery += \"   FROM ZSA010 ZSA LEFT JOIN SC5010 SC5 ON (C5_XIDMOB = ZSA_IDMOBP AND SC5.D_E_L_E_T_ = '' AND ZSA.D_E_L_E_T_ = '')\r\ncQuery += \"  WHERE (ZSA_IDPEND in ('P') )\r\n//cQuery += \"  WHERE (ZSA_IDPEND in ('P') OR SC5.C5_NUM ='003953')\r\ncQuery += \"    AND ZSA_STATUS = 'ATIVA'\r\ncQuery += \"    AND (ISNULL(CAST(CONVERT(VARBINARY(MAX), ZSA_MSGINT) AS VARCHAR(MAX)),'') = '' )\r\n//cQuery += \"    AND (ISNULL(CAST(CONVERT(VARBINARY(MAX), ZSA_MSGINT) AS VARCHAR(MAX)),'') = '' OR  SC5.C5_NUM ='003953')\r\ncQuery += \"    ORDER BY IDMOB\r\n/*\r\nGeraçao do arquivo de Temporario de cabecalho\r\n*/\r\n//MemoWrite(\"D:\\TOTVS 12\\Microsiga\\protheus_data\\_LOGINTMOB\\CABEC_INT_MOG.TXT\",cQuery)\r\n\r\nTCQUERY cQuery ALIAS \"TRB_CAB\" NEW\r\n\r\n/*\r\nMobGran_pedcorp\r\n*/\r\ncQuery := \" SELECT 'I'    ACAO     ,\r\ncQuery += \"\t   '010101'   FILIAL   ,\r\ncQuery += \"\t   '00'       ITEM     , \r\ncQuery += \"\t   ZSA_IDMOBP IDMOB    ,\r\ncQuery += \"\t   ZSA_NUMCAV CAVALETE ,\r\ncQuery += \"\t   ZSA_PROD            ,\r\ncQuery += \"\t   ZSA_LOTE            ,\r\ncQuery += \"\t   ZSA_CLASSI          , \r\ncQuery += \"\t   ZSA_PRCDES          ,\r\ncQuery += \"\t   ZSA_LOCAL           ,\r\ncQuery += \"\t   ZSA_QTDVEN          , \r\ncQuery += \"\t   ZSA_IDPEND          ,\r\ncQuery += \"\t   ZSA_PRCUNT          ,\r\ncQuery += \"\t   ROUND(((ZSA_QTDVEN*ZSA_PRCUNT)+ZSA_VALDES)/ZSA_QTDVEN,2)  AS ZSA_PRCTAB,\r\ncQuery += \"\t   ZSA_DESCON          ,\r\ncQuery += \"\t   ZSA_VALDES          ,\r\ncQuery += \"\t   SC5.C5_NUM AS C5_NUM,\r\ncQuery += \"\t   0 PESOAMOSTRA\r\ncQuery += \"   FROM ZSA010 ZSA LEFT JOIN SC5010 SC5 ON (C5_XIDMOB = ZSA_IDMOBP AND SC5.D_E_L_E_T_ = '' AND ZSA.D_E_L_E_T_ = '')\r\ncQuery += \" WHERE ZSA_IDPEND in ('P')\r\ncQuery += \"   AND ZSA_STATUS = 'ATIVA'\r\ncQuery += \"   AND ISNULL(CAST(CONVERT(VARBINARY(MAX), ZSA_MSGINT) AS VARCHAR(MAX)),'') = ''\r\n\r\ncQuery += \" UNION ALL\r\n\r\ncQuery += \"  SELECT 'I' ACAO    ,\r\ncQuery += \"\t\tC6_FILIAL      ,\r\ncQuery += \"\t\tC6_ITEM ITEM   ,\r\ncQuery += \"\t\tC5_XIDMOB IDMOB,\r\ncQuery += \"\t\tC6_YCAVALE     ,\r\ncQuery += \"\t\tC6_PRODUTO     ,\r\ncQuery += \"\t\tC6_LOTECTL     ,\r\ncQuery += \"\t\tC6_YCLASSI     ,\r\ncQuery += \"\t\t0              ,\r\ncQuery += \"\t\tC6_LOCAL       ,\r\ncQuery += \"\t\tC6_QTDVEN      ,\r\ncQuery += \"\t\t'P'            ,\r\ncQuery += \"\t\tC6_PRUNIT\t   ,\r\ncQuery += \"\t\tC6_PRCVEN      ,\r\ncQuery += \"\t\tC6_DESCONT     ,\r\ncQuery += \"\t\tC6_VALDESC     ,\r\ncQuery += \"\t\tC6_NUM C5_NUM  ,\r\ncQuery += \"\t\tC6_XPESO PESOAMOSTRA\r\ncQuery += \"  FROM SC6010 SC6 INNER JOIN SC5010 SC5 ON(C5_FILIAL = C6_FILIAL  AND C6_NUM=C5_NUM)\r\ncQuery += \" WHERE SC6.D_E_L_E_T_ = ''\r\ncQuery += \"   AND SC5.D_E_L_E_T_ = ''\r\ncQuery += \"   AND SC6.C6_PRODUTO  LIKE 'AM%' \r\ncQuery += \"   AND C6_FILIAL + C6_NUM IN(\r\ncQuery += \"\t\t\t\t\t\t\t SELECT DISTINCT '010101'+ SC5.C5_NUM AS C5_NUM\r\ncQuery += \"\t\t\t\t\t\t\t   FROM ZSA010 ZSA LEFT JOIN SC5010 SC5 ON (C5_XIDMOB = ZSA_IDMOBP AND SC5.D_E_L_E_T_ = '' AND ZSA.D_E_L_E_T_ = '')\r\ncQuery += \"\t\t\t\t\t\t\t WHERE ZSA_IDPEND in ('P')\r\ncQuery += \"\t\t\t\t\t\t\t   AND ZSA_STATUS = 'ATIVA'\r\ncQuery += \"\t\t\t\t\t\t\t   AND ISNULL(CAST(CONVERT(VARBINARY(MAX), ZSA_MSGINT) AS VARCHAR(MAX)),'') = ''\r\ncQuery += \"\t\t\t\t\t\t\t  )\r\n\r\ncQuery += \" UNION ALL \r\n\r\ncQuery += \" SELECT 'R' ACAO    ,\r\ncQuery += \"\t\tC6_FILIAL      ,\r\ncQuery += \"\t\tC6_ITEM ITEM   ,\r\ncQuery += \"\t\tC5_XIDMOB IDMOB,\r\ncQuery += \"\t\tC6_YCAVALE     ,\r\ncQuery += \"\t\tC6_PRODUTO     ,\r\ncQuery += \"\t\tC6_LOTECTL     ,\r\ncQuery += \"\t\tC6_YCLASSI     ,\r\ncQuery += \"\t\t0              ,\r\ncQuery += \"\t\tC6_LOCAL       ,\r\ncQuery += \"\t\tC6_QTDVEN      ,\r\ncQuery += \"\t\t'P'            ,\r\ncQuery += \"\t\tC6_PRUNIT\t   ,\r\ncQuery += \"\t\tC6_PRCVEN      ,\r\ncQuery += \"\t\tC6_DESCONT     ,\r\ncQuery += \"\t\tC6_VALDESC     ,\r\ncQuery += \"\t\tC6_NUM C5_NUM  ,\r\ncQuery += \"\t\tC6_XPESO PESOAMOSTRA\r\ncQuery += \"  FROM SC6010 SC6 INNER JOIN SC5010 SC5 ON(C5_FILIAL = C6_FILIAL  AND C6_NUM=C5_NUM)\r\ncQuery += \" WHERE SC6.D_E_L_E_T_ = ''\r\ncQuery += \"   AND SC5.D_E_L_E_T_ = ''\r\ncQuery += \"   AND C6_FILIAL + C6_NUM IN(\r\ncQuery += \"\t\t\t\t\t\t\t SELECT DISTINCT '010101'+ SC5.C5_NUM AS C5_NUM\r\ncQuery += \"\t\t\t\t\t\t\t   FROM ZSA010 ZSA LEFT JOIN SC5010 SC5 ON (C5_XIDMOB = ZSA_IDMOBP AND SC5.D_E_L_E_T_ = '' AND ZSA.D_E_L_E_T_ = '')\r\ncQuery += \"\t\t\t\t\t\t\t WHERE ZSA_IDPEND in ('P')\r\ncQuery += \"\t\t\t\t\t\t\t   AND ZSA_STATUS = 'ATIVA'\r\ncQuery += \"\t\t\t\t\t\t\t   AND ISNULL(CAST(CONVERT(VARBINARY(MAX), ZSA_MSGINT) AS VARCHAR(MAX)),'') = ''\r\ncQuery += \"\t\t\t\t\t\t\t  )\r\ncQuery += \" ORDER BY IDMOB,ACAO DESC,ITEM,CAVALETE,ZSA_LOTE,C5_NUM\r\n\r\n/*\r\nGeraçao do arquivo temporario de Itens\r\n*/\r\n//MemoWrite(\"D:\\TOTVS 12\\Microsiga\\protheus_data\\_LOGINTMOB\\ITENS_INT_MOG.TXT\",cQuery)\r\nTCQUERY cQuery ALIAS \"TRB_ITEM\" NEW\r\n\r\n/*\r\nLimpa os vendedores adicionados anteriomente\r\n*/\r\naIdVend := {}\r\n\r\ndbSelectArea(\"TRB_CAB\")\r\ndbGoTop()\r\nDo While !EOF()\r\n\t/*\r\n\tPosiciona nos cadastro\r\n\t*/\r\n\tdbSelectArea(\"SA1\")\r\n\tdbsetorder(1)\r\n\tdbseek(xfilial(\"SA1\")+TRB_CAB->C5_CLIENTE+TRB_CAB->C5_LOJA,.f.)\r\n\t\r\n\t/*\r\n\tLimpa todos os valores antigos\r\n\t*/\r\n\t_aCabecalho := {}\r\n\t\r\n\t/*\r\n\tPreenchimento dos Array do cabeçalho\r\n\t*/\r\n\taAdd(_aCabecalho,AllTrim(TRB_CAB->C5_FILIAL)\t)  // C5_FILIAL   1\r\n\taAdd(_aCabecalho,\"N\" \t\t\t\t\t\t\t)  // C5_TIPO     2\r\n\taAdd(_aCabecalho,AllTrim(TRB_CAB->C5_CLIENTE) \t)  // C5_CLIENTE  3\r\n\taAdd(_aCabecalho,AllTrim(TRB_CAB->C5_LOJA  ) \t)  // C5_LOJACLI  4\r\n\taAdd(_aCabecalho,AllTrim(TRB_CAB->IDMOB) \t\t)  // C5_IDMOB    5\r\n\taAdd(_aCabecalho,AllTrim(TRB_CAB->C5_CONDPAG)\t)  // C5_CONDPAG  6\r\n\taAdd(_aCabecalho,STOD(AllTrim(TRB_CAB->C5_EMISSAO)))  // C5_EMISSAO  7\r\n\taAdd(_aCabecalho,TRB_CAB->C5_XSHOWFO       \t    )     // C5_XSHOWFO  8\r\n\taAdd(_aCabecalho,\"ME\"\t\t\t\t       \t    )     // C5_YTIPO    9\r\n\taAdd(_aCabecalho,TRB_CAB->C5_NUM\t\t\t\t)     // C5_COTACAO  10\r\n\t\r\n\t/*\r\n\tNa inclusao dos itens a cada loop ele zera o valor inicial\r\n\t*/\r\n\tnCodItem := 0\r\n\t_aItens\t := {}\r\n\t\r\n\tdbSelectArea(\"TRB_ITEM\")\r\n\tdbGoTop()\r\n\tDo While !EOF()\r\n\t\t\r\n\t\tIf AllTrim(TRB_CAB->IDMOB)  == AllTrim(TRB_ITEM->IDMOB)\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tPosiciona no cadastro\r\n\t\t\t*/\r\n\t\t\tdbSelectArea(\"SB1\")\r\n\t\t\tdbsetorder(1)\r\n\t\t\tdbseek(xfilial(\"SB1\")+AllTrim(TRB_ITEM->ZSA_PROD) ,.f.)\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tPosiciona no cadastro\r\n\t\t\t*/\r\n\t\t\tdbSelectArea(\"SF4\")\r\n\t\t\tdbsetorder(1)\r\n\t\t\tdbseek(xfilial(\"SF4\")+AllTrim(SB1->B1_TS) ,.f.)\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tSoma dos itens\r\n\t\t\t*/\r\n\t\t\tIF TRB_ITEM->ACAO = \"I\"\r\n\t\t\t\tnCodItem := nCodItem + 1\r\n\t\t\tEndIf\r\n\t\t\t/*\r\n\t\t\tVariais para geracao das linhas de itens do\r\n\t\t\tPedido\r\n\t\t\t*/\r\n\t\t\tcC01 := AllTrim(TRB_ITEM->FILIAL)       \t\t// FILIAL\r\n\t\t\tcC02 := iif(TRB_ITEM->ACAO = \"I\", AllTrim(Str(nCodItem) ),TRB_ITEM->ITEM) \t\t\t\t// C6_ITEM\r\n\t\t\tcC03 := AllTrim(TRB_ITEM->ZSA_PROD)  \t    \t// C6_PRODUTO\r\n\t\t\tcC04 := IIF(TRB_ITEM->ZSA_PRCDES=0,'N','S')  \t// C6_XOFERTA\r\n\t\t\tcC05 := AllTrim(TRB_ITEM->CAVALETE)\t\t\t\t// C6_YCAVALE\r\n\t\t\tcC06 := AllTrim(TRB_ITEM->ZSA_CLASSI)\t\t  \t// C6_YCLASSI\r\n\t\t\tcC07 := SB1->B1_UM  \t\t\t\t\t\t\t// C6_UM\r\n\t\t\tcC08 := AllTrim(TRB_ITEM->ZSA_LOTE)\t\t\t    // C6_LOTECTL\r\n\t\t\tcC09 := AllTrim(TRB_ITEM->CAVALETE)\t\t\t    // C6_NUMLOTE\r\n\t\t\tcC10 := AllTrim(TRB_ITEM->ZSA_LOCAL)\t        // C6_LOCAL\r\n\t\t\tcC11 := TRB_ITEM->ZSA_QTDVEN  \t\t\t\t\t// C6_QTDVEN\r\n\t\t\t\t\t\t\r\n\t\t\tcC12 := IIF(TRB_ITEM->ZSA_PRCDES=0,TRB_ITEM->ZSA_PRCUNT,TRB_ITEM->ZSA_PRCDES)  \t\t\t\t\t// C6_PRCVEN PRC VENDA\r\n\t\t\tcC13 := TRB_ITEM->ZSA_PRCTAB    \t\t\t\t// C6_PRUNIT PRC TABELA\r\n\r\n\t\t\tIf AllTrim(TRB_ITEM->ZSA_CLASSI) $ 'A' .OR. SubStr(AllTrim(TRB_ITEM->ZSA_PROD) ,1,2) == 'AM'\r\n\t\t\t\tcC14 :=  \"525\"  \t\t\t\t\t\t\t// C6_TES\r\n\t\t\telse\r\n\t\t\t\tIf _aCabecalho[9]==\"ME\"\r\n\t\t\t\t\tcC14 :=  \"511\"\t\t \t\t\t\t\t\t// C6_TES\r\n\t\t\t\telse\r\n\t\t\t\t\tcC14 :=  \"511\"\t\t \t\t\t\t\t\t// C6_TES\r\n\t\t\t\tEndIf\r\n\t\t    EndIf\r\n\r\n\t\t\tcC15 := SB1->B1_ORIGEM + SF4->F4_SITTRIB  \t\t// C6_SITTRIB\r\n\t\t\tcC16 := dDataBase  \t\t\t\t\t\t\t\t// C6_ENTREG\r\n\t\t\tcC17 := TRB_ITEM->ACAO\t\t\t\t\t\t\t// AÇÃO \r\n\r\n\t\t\tcC18 := TRB_ITEM->ZSA_DESCON\r\n\t\t\tcC19 := TRB_ITEM->ZSA_VALDES\r\n\t\t\tcC20 := TRB_ITEM->PESOAMOSTRA\r\n\r\n\t\t\t//cC13 := TRB_ITEM->C6_DESCONT  \t\t\t\t// C6_DESCONT\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tCriaçao da Linha de itens dos Pedidos\r\n\t\t\t*/\r\n\t\t\taAdd( _aItens , {cC01,cC02,cC03,cC04,cC05,cC06,cC07,cC08,cC09,cC10,cC11,cC12,cC13,cC14,cC15,cC16,cC17,cC18,cC19,cC20} )\r\n\t\t\t\r\n\t\tEndIf\r\n\t\t\r\n\t\tdbSelectArea(\"TRB_ITEM\")\r\n\t\tdbSkip()\r\n\tEndDo\r\n\t\r\n\t/*\r\n\tCaso hava registros no cabeçalho\r\n\tentao a rotina de Inclusao de pedidos\r\n\te chamada.\r\n\t*/\r\n\tIf !Empty(_aCabecalho) .And. !Empty(_aItens)\r\n\t\t\r\n\t\t\r\n\t\tCOnOut(\"*********************************************\")\r\n\t\tCOnOut(\" Prg [Inserindo Pedidos]   (SIGAWISE)        \")\r\n\t\tCOnOut(\"*********************************************\")\r\n\t\t\r\n\t\tMfPedI( _aCabecalho, _aItens)\r\n\t\t\r\n\t\t/*\r\n\t\tIf Ascan(aIdVend,AllTrim(TRB_CAB->C5_VEND1)) == 0\r\n\t\t\tCOnOut(\"*********************************************\")\r\n\t\t\tCOnOut(\" Prg [addVendArry]        (SIGAWISE)         \")\r\n\t\t\tCOnOut(\"*********************************************\")\r\n\t\t\t\r\n\t\t\taAdd(aIdVend,AllTrim(TRB_CAB->C5_VEND1))\r\n\t\tEndIf\r\n\t\t*/\r\n\t\t\r\n\tEndIf\r\n\t\r\n\tdbSelectArea(\"TRB_CAB\")\r\n\tdbSkip()\r\nEndDo\r\n\r\n/*\r\nEnvio do protocolo\r\n*/\r\nCOnOut(\"*********************************************\")\r\nCOnOut(\" chamada [SendProtocol]  OFF  (SIGAWISE)     \")\r\nCOnOut(\"*********************************************\")\r\n//SendProtocol(aIdVend)\r\n\r\n/*\r\nFecha arquivo temporario de SQL cabeçalhos\r\n*/\r\ndbSelectArea(\"TRB_CAB\")\r\ndbCloseArea()\r\n\r\n/*\r\nFecha arquivos temporario de SQL de Itens\r\n*/\r\ndbSelectArea(\"TRB_ITEM\")\r\ndbCloseArea()\r\n\r\nReturn()\r\n\r\nStatic Function MfPedI( _aCabecalho , _aItens )\r\n************************************************************************************************\r\n*\r\n*\r\n***\r\nLocal aAreasPed     := GetArea()\r\nLocal _aAutoSC5 \t:= {}\r\nLocal _aAutoSC6 \t:= {}\r\nLocal _aLinha\t\t:= {}\r\nLocal _aErroSC6     := {}\r\nLocal i \t\t\t:= 0\r\n\r\nLocal _aRetorno\t\t:= {}\r\nLocal cCodTab   \t:= \"\"\r\nLocal cCodTabP  \t:= \"\"\r\nLocal cDescErro     := \"\"\r\n\r\ncPedido  := \"\"\r\ncCodTab  := \"\"\r\ncCodTabP := \"\"\r\n\r\nPrivate _cTabela := \"SC5\"\r\n\r\nCOnOut(\"*********************************************\")\r\nCOnOut(\" Prg [MfPedI]             (SIGAWISE)         \")\r\nCOnOut(\"*********************************************\")\r\n\r\nlMsErroAuto := .f.\r\n\r\nIf !Empty(_aCabecalho)\r\n\t\r\n\tIf Empty(_aCabecalho[10]) \r\n\t\t/*\r\n\t\tRecebe o proximo numero de pedidos do Protheus\r\n\t\t*/\r\n\t\tcPedido  := GetSxeNum(_cTabela,\"C5_NUM\")\r\n\t\t\r\n\t\tRollBackSxE()\r\n\telse\t\r\n\t\tcPedido  := _aCabecalho[10]\r\n\r\n\t\tdbSelectArea(\"SC5\")\r\n\t\tdbSetOrder(1)\r\n\t\tIf !dbSeek(\"010101\" + cPedido  )\r\n\t\t\tConOut(\"Pedido de Venda não econtrado!\")\r\n\t\tEndIf\r\n\tEndIf\r\n\r\n\t/*\r\n\tPosiciona no cadastro\r\n\t*/\r\n\tdbSelectArea(\"SA1\")\r\n\tdbSetOrder(1)\r\n\tIf !dbSeek(xFilial(\"SA1\") + _aCabecalho[3] + _aCabecalho[4] )\r\n\t\tConOut(\"Cliente não econtrado!\")\r\n\tEndIf\r\n\t\r\n\t/*\r\n\tPosiciona no cadastro\r\n\t*/\r\n\tdbSelectArea(\"SA3\")\r\n\tdbSetOrder(1)\r\n\tIf !dbSeek(xFilial(\"SA3\") + SA1->A1_VEND )\r\n\t\tConOut(\"Vendedor não econtrado!\")\r\n\tEndIf\r\n\t\r\n\t/*\r\n\tCriaçao do Array especifio da inclusao do pedido de venda\r\n\tRotina de Cabeçalho\r\n\t*/\r\n\t_aAutoSC5:={{\"C5_NUM\"    ,cPedido           \t\t\t\t\t\t\t\t,Nil},; // Numero do pedido\r\n\t\t\t\t{\"C5_TIPO\"   ,\"N\"         \t    \t\t\t\t\t\t\t\t,Nil},; // Tipo de pedido\r\n\t\t\t\t{\"C5_XIDMOB\" ,_aCabecalho[5]    \t\t\t\t\t\t\t\t,Nil},; // Hora de inclusao\r\n\t\t\t\t{\"C5_CLIENTE\",_aCabecalho[3]       \t\t\t\t\t\t\t\t,Nil},; // Codigo do cliente\r\n\t\t\t\t{\"C5_LOJAENT\",_aCabecalho[4]      \t\t\t\t\t\t\t\t,Nil},; // Loja para entrada\r\n\t\t\t\t{\"C5_LOJACLI\",_aCabecalho[4]      \t\t\t\t\t\t\t\t,Nil},; // Loja do cliente\r\n\t\t\t\t{\"C5_EMISSAO\",_aCabecalho[7]   \t        \t\t\t\t\t\t,Nil},; // Data de emissao\r\n\t\t\t\t{\"C5_DTINC\"  ,_aCabecalho[7] \t  \t    \t\t\t\t\t\t,Nil},; // Data de emissao\r\n\t\t\t\t{\"C5_CONDPAG\",_aCabecalho[6]       \t\t\t\t\t\t\t\t,Nil},; // Codigo da condicao de pagamento\r\n\t\t\t\t{\"C5_YTIPO\"  ,_aCabecalho[9]             \t\t\t\t\t   \t,Nil},; // Percentual de Desconto\r\n\t\t\t\t{\"C5_TIPOCLI\",SA1->A1_TIPO\t    \t\t\t \t\t\t\t   \t,Nil},; // Tipo Cliente\r\n\t\t\t\t{\"C5_VEND1\"  ,SA1->A1_VEND          \t\t\t\t\t\t   \t,Nil},; // Vendedor\r\n\t\t\t\t{\"C5_XSHOWFO\", IIF(Empty(_aCabecalho[10]),\"N\",SC5->C5_XSHOWFO) \t,Nil},; // FollowUp   \r\n\t\t\t\t{\"C5_COTACAO\",cPedido \t\t\t\t\t\t\t\t\t\t\t,Nil}}  // C5_NUM OU C5_COTACAO\r\n\t\t\r\n\t/*\r\n\tErro dos itens do pedidos\r\n\t*/\r\n\t_aErroSC6 := {}\r\n\r\n\t/*\r\n\tLoop dos Itens do cadastro de produtos da Polibras\r\n\t*/\r\n\tFor i := 1 to Len(_aItens)\r\n\t\t_aLinha := {}\r\n\t\t\r\n\t\t/*\r\n\t\tPosiciona no cadastro\r\n\t\t*/\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tIf !dbSeek(xFilial(\"SB1\") + _aItens[i,3],.f. )\r\n\t\t\t\r\n\t\t\taAdd(_aErroSC6 , {cPedido, StrZero(i,4), _aItens[i,3],\"Produto nao econtrado\" } )\r\n\t\t\t\r\n\t\tElseIf SB1->B1_MSBLQL <> '1'\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tCriaçao do Array especifio da inclusao do pedido de venda\r\n\t\t\tRotina de Itens\r\n\t\t\t*/\r\n\t\t\taadd(_aLinha,{\"C6_NUM\"    ,cPedido                     \t\t\t      \t  ,Nil}) // Numero do Pedido\r\n\r\n\t\t\tif _aItens[i,17] == \"I\"\r\n\t\t\t\taadd(_aLinha,{\"C6_ITEM\"   ,Iif(i < 100, StrZero(i,2),AllTrim(Str(i))) ,Nil}) // Numero do Item no Pedido\r\n\t\t\telse\r\n\t\t\t\taadd(_aLinha,{\"LINPOS\"   ,  \"C6_ITEM\",  _aItens[i,02] })\r\n      \t\t\taadd(_aLinha,{\"AUTDELETA\",  \"S\"      ,  Nil           })\r\n\t\t\tEndIf\r\n\r\n\t\t\taadd(_aLinha,{\"C6_PRODUTO\",_aItens[i,3]                \t\t\t\t\t,Nil}) // Codigo do Produto\r\n\t\t\taadd(_aLinha,{\"C6_DESCRI\" ,AllTrim(SB1->B1_DESC)       \t\t\t\t\t,Nil}) // Descricao produto\r\n\t\t\taadd(_aLinha,{\"C6_LOCAL\"  ,_aItens[i,10]              \t\t\t\t\t,Nil}) // Armazem\r\n\t\t\t\r\n\t\t\taadd(_aLinha,{\"C6_YCAVALE\",_aItens[i,5]                \t\t\t\t\t,Nil}) // cavalete\r\n\t\t\taadd(_aLinha,{\"C6_YCLASSI\",_aItens[i,6]                \t\t\t\t\t,Nil}) // Cassificação\r\n\t\t\taadd(_aLinha,{\"C6_LOTECTL\",_aItens[i,8]                \t\t\t\t\t,Nil}) // Lote \r\n\t\t\taadd(_aLinha,{\"C6_NUMLOTE\",_aItens[i,9]                \t\t\t\t\t,Nil}) // Lote \r\n\t\t\t\r\n\t\t\taadd(_aLinha,{\"C6_QTDVEN\" ,_aItens[i,11]               \t\t\t\t\t,Nil}) // Quantidade Vendida\r\n\t\r\n\t\t\taadd(_aLinha,{\"C6_PRCVEN\" ,_aItens[i,12]               \t\t\t\t\t,Nil}) // Preco Unitario Liquido CONFERIDO\r\n\t\t\taadd(_aLinha,{\"C6_PRUNIT\" ,_aItens[i,13] \t             \t\t\t\t,Nil}) // Preco de Lista         CONFERIDO\r\n\t\t\taadd(_aLinha,{\"C6_VALOR\"  ,Round(_aItens[i,11] * _aItens[i,12],2)  \t\t,Nil}) // Preco Total\r\n\t\t\taadd(_aLinha,{\"C6_VALDESC\",_aItens[i,19]              \t\t\t   \t\t,Nil}) // valor do desconto\r\n\r\n\t\t\taadd(_aLinha,{\"C6_ENTREG\" ,dDatabase          \t\t\t\t\t\t\t,Nil}) // Data da Entrega\r\n\t\t\taadd(_aLinha,{\"C6_UM\"     ,_aItens[i,7]                 \t\t\t\t,Nil}) // Unidade de Medida Primar.\r\n\t\t\taadd(_aLinha,{\"C6_TES\"    ,_aItens[i,14]                 \t\t\t\t,Nil}) // Tipo de Entrada/Saida do Item\r\n\t\t\t\r\n\t\t\taadd(_aLinha,{\"C6_CLI\"    ,_aCabecalho[3]               \t\t\t\t,Nil}) // Cliente\r\n\t\t\taadd(_aLinha,{\"C6_LOJA\"   ,_aCabecalho[4]              \t\t\t\t\t,Nil}) // Loja do Cliente\r\n\t\t\t\r\n\t\t\taadd(_aLinha,{\"C6_XOFERTA\",_aItens[i,4]                \t\t\t\t\t,Nil}) // Oferta\r\n\t\t\taadd(_aLinha,{\"C6_XPESO\"  ,_aItens[i,20]                \t\t\t\t,Nil}) // Peso da Amostra\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tClone da Linha de Produtos\r\n\t\t\t*/\r\n\t\t\tAAdd( _aAutoSC6, AClone( _aLinha ) )\r\n\t\t\t\r\n\t\tElse\r\n\t\t\taAdd(_aErroSC6 , {cPedido, StrZero(i,4), _aItens[i,3],\"Produto Bloqueado\" } )\r\n\t\tEndIf\r\n\t\t\r\n\tNext\r\n\t\r\n\t/*\r\n\tInicializacao da variavel de Erro\r\n\t*/\r\n\tlMsErroAuto := .F.\r\n\t\r\n\t/*\r\n\tExecauto para geracao dos pedidos com validacações\r\n\t*/\r\n\tdbSelectArea(\"SC5\")\r\n\tdbSetOrder(1)\r\n\tIf !dbSeek(\"010101\" + cPedido  )\r\n\t\tMSExecAuto({|x,y,Z| Mata410(x,y,Z)},_aAutoSC5,_aAutoSC6,3) //INCLUSÃO\r\n\tElse\r\n\t\tMSExecAuto({|x,y,Z| Mata410(x,y,Z)},_aAutoSC5,_aAutoSC6,4) //ALTERAÇÃO\r\n\tEndIf\r\n\r\n\t/*\r\n\tVariavel complementar de apoio de erros\r\n\t*/\r\n\tcDescErro     := \"\"\r\n\t\r\n\tIf lMsErroAuto\r\n\t\tcDescErro :=\"**********************\"+ CRLF \r\n\t\tcDescErro += DtoC(dDatabase)+\"-\"+TIME()+CRLF\r\n\t\tcDescErro +=\"**********************\"+ CRLF \r\n\t\tcDescErro += Mostraerro(\"D:\\TOTVS 12\\Microsiga\\protheus_data\\_LOGINTMOB\\\", Replace(Replace(DtoC(dDatabase)+\"_\"+TIME(),\":\",\"_\"),\"/\",\"_\") + \"_ErroPedido.log\")\r\n\r\n\t\tConOut(cDescErro)\r\n\t\tSleep(10000)\r\n\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSA\")\r\n\t\tcQuery += \"    SET ZSA_IDPEND = 'M',ZSA_MSGINT= CONVERT(VARBINARY(MAX), '\"+UPPER(cDescErro)+\"') \r\n\t\tcQuery += \"   FROM ZSA010 ZSA LEFT JOIN SC5010 SC5 ON (C5_XIDMOB = ZSA_IDMOBP AND SC5.D_E_L_E_T_ = '' AND ZSA.D_E_L_E_T_ = '')\r\n\t\tcQuery += \"  WHERE ZSA_IDMOBP = '\"+ AllTrim(_aCabecalho[5]) +\"'\r\n\t\t//cQeery += \"    AND ISNULL(CAST(ZSA_MSGINT AS VARCHAR(MAX)), '') = ''\r\n\r\n\t\t/*\r\n\t\tExecucao background do codigo sql\r\n\t\t*/\r\n\t\tTcSqlExec(cQuery)\r\n\r\n\t\tDisarmTransaction()\r\n\t\tRollBackSxE()\r\n\tElse\r\n\r\n\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSA\")\r\n\t\tcQuery += \"    SET ZSA_IDPEND = 'M',ZSA_PEDVEN='\"+AllTrim(cPedido) +\"'\r\n\t\tcQuery += \"   FROM ZSA010 ZSA LEFT JOIN SC5010 SC5 ON (C5_XIDMOB = ZSA_IDMOBP AND SC5.D_E_L_E_T_ = '' AND ZSA.D_E_L_E_T_ = '')\r\n\t\tcQuery += \"  WHERE ZSA_IDMOBP = '\"+ AllTrim(_aCabecalho[5]) +\"'\r\n\t\t//cQuery += \"    AND ZSA_PEDVEN <> '003953'\r\n\t\t\r\n\t\t/*\r\n\t\tExecucao background do codigo sql\r\n\t\t*/\r\n\t\tTcSqlExec(cQuery)\r\n\r\n\r\n\t\t/*\r\n\t\tConfirmacao do pedido\r\n\t\t*/\r\n\t\tConfirmSX8()\r\n\r\n        SC6->(DbSetOrder(1))\r\n\t\tIf SC6->(DbSeek(xFilial(\"SC5\")+SC5->C5_NUM))\r\n\r\n\t\t\tDo While !SC6->(Eof()) .And. SC5->(C5_FILIAL+C5_NUM) == SC6->(C6_FILIAL+C6_NUM)\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tSC6->(DbSkip())\r\n\t\t\tEndDo\r\n\t\t\t\r\n\t\tEndIf\r\n\t\t\r\n\tEndIf\r\n\t\r\n\r\n\t/*\r\n\tVerica se o Pedido foi Inserido\r\n\t*/\r\n\tdbSelectArea(_cTabela)\r\n\tdbSetOrder(1)\r\n\tIf Empty(cDescErro) .AND. dbSeek(xFilial(_cTabela)+cPedido)\r\n\t\t//u_MIntMGLib(cPedido,SC5->C5_XIDMOB,\"SC5\", SC5->C5_XMOTBLQ)\t\t\r\n\tElse\r\n\r\n\tEndIf\r\n\t\r\nElse\r\n\r\nEndIf\r\n\r\n//_aRetorno := {cPedido,_cErro}\r\nRestArea(aAreasPed)\r\n\r\nReturn(_aRetorno)\r\n"}}}
Content-Length: 870
{"jsonrpc":"2.0","id":12,"method":"$totvsserver/patchApply","params":{"patchApplyInfo":{"connectionToken":"djM6djF5aTBwNzQ4bm1ranViaXNrbGl4aW93NXFneDQ6MToxOTIuMTY4LjEuMTAxOjEyMzY6MDo3LjAwLjE5MTIwNVA6Mw==:djE6Y29tcGlsYV9xOkFkbWluOi9WZmpIeDlnVmxGN1FTcU01L3BiYmVhbWU3cTI0VUVVL2hlOTdhcXlsOTQ9|djI6MTY0NDQwNDQzMTowOjE6MQ==.cVxMhEjvI+Htho1irx+SzT3aHIMdUsLKGQRUog0R318jtKa80icJ+9jZqZF0kvJWPMg6/+q2uJI/JsqFgMgDS1buSr5jTQmoLFmzj0u51insCAYzHtgZwV3f+dobf6yz/U4voX2mmXSu4Eg4H9cmFl65yQ8wFG1jQ+fH56bw19ENBTIuiL3K9mjYj8hyJWDaEcAO5ofQHjxuythr/MOZW2yfFA05CDiPwgiBVSVjqxn+KYhFzAaCjD4H0F414Zy6D4x7VKXmltHAzhlfaOBssa1Kg1GRvYsYR32hpofPEvJMc3qySfyRuIHgLtonzEWxP+ThrMKacVgrUInwzJ4wFA==","environment":"compila_q","patchUri":"file:///d%3A/TOTVS%2012/BKP_UPDATES/2022-02-09%20-%20LIB/22-02-07-LIB_LABEL_07022022_P12_LOBO-TTTP120.PTM","isLocal":true,"isValidOnly":false,"applyScope":"only_new"}}}
Content-Length: 878
{"jsonrpc":"2.0","id":13,"method":"$totvsserver/patchApply","params":{"patchApplyInfo":{"connectionToken":"djM6djF5aTBwNzQ4bm1ranViaXNrbGl4aW93NXFneDQ6MToxOTIuMTY4LjEuMTAxOjEyMzY6MDo3LjAwLjE5MTIwNVA6Mw==:djE6Y29tcGlsYV9xOkFkbWluOi9WZmpIeDlnVmxGN1FTcU01L3BiYmVhbWU3cTI0VUVVL2hlOTdhcXlsOTQ9|djI6MTY0NDQwNDQzMTowOjE6MQ==.cVxMhEjvI+Htho1irx+SzT3aHIMdUsLKGQRUog0R318jtKa80icJ+9jZqZF0kvJWPMg6/+q2uJI/JsqFgMgDS1buSr5jTQmoLFmzj0u51insCAYzHtgZwV3f+dobf6yz/U4voX2mmXSu4Eg4H9cmFl65yQ8wFG1jQ+fH56bw19ENBTIuiL3K9mjYj8hyJWDaEcAO5ofQHjxuythr/MOZW2yfFA05CDiPwgiBVSVjqxn+KYhFzAaCjD4H0F414Zy6D4x7VKXmltHAzhlfaOBssa1Kg1GRvYsYR32hpofPEvJMc3qySfyRuIHgLtonzEWxP+ThrMKacVgrUInwzJ4wFA==","environment":"compila_q","patchUri":"file:///d%3A/TOTVS%2012/BKP_UPDATES/2022-02-09%20-%20SPED%20FISCAL/13529307_dserfis1-29277_12_1_27_tttp120_lg.ptm","isLocal":true,"isValidOnly":false,"applyScope":"only_new"}}}
Content-Length: 164
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode/10_LIB/WFMobGran.prw"}}}
Content-Length: 186
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode/06_FATURAMENTO_NOVO_COMERCIAL/MT410TOK.prw"}}}
Content-Length: 167
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode/04_CONTABIL/MCT1CLI.prw"}}}
Content-Length: 1087
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode/02_COMPRAS/MT103VCC.prw","languageId":"advpl","version":1,"text":"#INCLUDE \"Protheus.ch\"\r\n#INCLUDE \"RwMake.ch\"\r\n#INCLUDE \"topconn.ch\" \r\n#INCLUDE \"Colors.ch\" \r\n#INCLUDE \"JPEG.CH\"\r\n\r\n/*\r\nPrograma        : Programa MT103VCC.prw\r\nObjetivo        : P.Entrada compilado para remover msg de aviso e eventual erro na entrada da NF-e pelo conexção nfe\r\nAutor           : Bruno Lage Ferreira\t\r\nData/Hora       : 03/02/2022 17:30\r\nObs.            :\r\nFoi feito uma reunião com o com Felipe do conexaonfe e raquel da Qualita para exemplificar o erro\r\nFelipe testou o comportamento do ponto de entrada retornando .F. nas msg. que solucionou o problema.\r\n\r\n*/\r\n\r\nUser Function MT103VCC()\r\n/*****************************************************************************************\r\n* Programa principal \r\n*\r\n***/  \r\n\r\n//AVISO(\"MT103VCC\",\"MT103VCC\",{\"OK\"},2)\r\n\r\nReturn({.F.,.F.,.F.,.F.})\r\n"}}}
Content-Length: 167
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode/02_COMPRAS/MT103VCC.prw"}}}
Content-Length: 110159
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode/06_FATURAMENTO_NOVO_COMERCIAL/MT410TOK.prw","languageId":"advpl","version":1,"text":"#INCLUDE \"rwmake.ch\"\r\n#INCLUDE \"protheus.ch\"\r\n#INCLUDE \"topconn.ch\"\r\n\r\n/*\r\nPrograma ...: MT410TOK.Prw\r\nUso ........: Validação do pedido de vendas\r\nData .......: 26/04/2019\r\nFeito por ..: Bruno Lage Ferreira \r\n\r\nMV_NDESCTP - DESCONTO NO PREÇO DE LISTA E UNITARIO\r\nNOVO\r\n*/\r\n\r\nUser Function MT410TOK()\r\n****************************************************************************************************************\r\n*   /* Programa para validar o pedido de venda tabela de preço de chapas - Qualitá */\r\n*\r\n****\r\nLocal   lRet      := .T.\r\nLocal   oProcess\r\nLocal   nOpc      := PARAMIXB[1]\r\nLocal   cQuery    := \"\"\r\nDefault lEnd      := .F.\r\n\r\n\r\nIf SubString(CNUMEMP,1,2) == \"01\" .And. (INCLUI == .T. .Or. nOpc == 1 .OR. ALTERA == .T.) .AND. (FUNNAME() <> \"GROA001\")\r\n\r\n\ta410Recalc()\r\n\r\n\toProcess := MsNewProcess():New({|lEnd| lRet := MValidPedV(@oProcess, @lEnd,@lRet) },\"Validando dados..\",\"Lendo Registros do Pedido de Vendas\",.T.) \r\n\tIf !IsBlind()     \r\n\t\tIf nOpc == 1 \r\n\t\t\tIf !Empty(M->C5_XIDMOB)\r\n\t\t\t\t\r\n\t\t\t\tcQuery := \"SELECT MAX(ZSA_IDMOB) ID FROM ZSA010 WHERE D_E_L_E_T_ =\t'' AND  ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\"'\"\r\n\t\t\t\ttcQuery cQuery alias TRB_EMOB new\r\n\t\t\t\tdbSelectArea(\"TRB_EMOB\")\r\n\t\t\t\tdbgotop()\r\n\r\n\t\t\t\tIf !EMPTY(TRB_EMOB->ID)\r\n\t\t\t\t\tAlert(\"Este P.Venda deve ser excluído pelo MogGran!\")\r\n\t\t\t\t\tdbSelectArea(\"TRB_EMOB\") \r\n\t\t\t\t\tdbCloseArea()\r\n\t\t\t\t\tReturn(.f.)\r\n\t\t\t\tEndIf\r\n\r\n\t\t\t\tdbSelectArea(\"TRB_EMOB\") \r\n\t\t\t\tdbCloseArea()\r\n\r\n\t\t\tEndIF\r\n\t\tEndIf\r\n\t\toProcess:Activate()\r\n\telse\r\n\t\tlRet := MValidPedV(nil, @lEnd,@lRet)\r\n\tEndIf\r\nEndIf\r\n\r\nReturn(lRet)\r\n\r\nUser Function M410LIOK()\r\n****************************************************************************************************************\r\n*    Libera ou bloquea linha do pedido de venda \r\n*\r\n****\r\nLocal lRet   := .T.\r\nLocal cQuery := \"\"\r\n\r\n/*\r\nLinhaOk\r\n*/\r\nIf SubString(CNUMEMP,1,2) == \"01\" \r\n\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",n))) ,1,2) $ 'BL' .AND. u_MTSOEST(GdFieldGet(\"C6_TES\",n)) \r\n\t\tIf Empty(GdFieldGet(\"C6_LOTECTL\",n))\r\n\t\t\tAlert(\"ERRO! BLOCO SEM LOTE!\")\r\n\t\t\tlRet := .F.\r\n\t\tEndIf\r\n\tEndIf\r\n\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",n))) ,1,2) $ 'CH' .AND. (Empty(GdFieldGet(\"C6_LOTECTL\",n)) .OR. Empty(GdFieldGet(\"C6_NUMLOTE\",n)))  \r\n\t\tAlert(\"ERRO! CHAPA COM LOTE OU SUB-LOTE EM BRANCO!\")\r\n\t\tlRet := .F.\r\n\tEndIf\r\nEndIf\r\n\r\n\r\n/*\r\nValida mobGran\r\n*/\r\ncQuery  := \" SELECT ZSA_PRCDES FROM ZSA010\r\ncQuery  += \"  WHERE D_E_L_E_T_ = ''\r\ncQuery  += \"  AND ZSA_PRCDES <> 0\r\n//cQuery  += \"  AND ZSA_STATUS = 'ATIVA'\r\ncQuery  += \"  AND ZSA_IDMOBP = '\"+ AllTrim(M->C5_XIDMOB)                    +\"'\r\ncQuery  += \"  AND ZSA_NUMCAV = '\"+ AllTrim(GdFieldGet(\"C6_YCAVALE\",n))      +\"'\r\ncQuery  += \"  AND ZSA_PROD   = '\"+ AllTrim(GdFieldGet(\"C6_PRODUTO\",n))      +\"'\r\ncQuery  += \"  AND ZSA_CLASSI = '\"+ AllTrim(GdFieldGet(\"C6_YCLASSI\",n))      +\"'\r\ncQuery  += \"  AND ZSA_LOTE   = '\"+ AllTrim(GdFieldGet(\"C6_LOTECTL\",n))      +\"'\r\n\r\ntcQuery cQuery alias TRB new\r\ndbSelectArea(\"TRB\")\r\ndbgotop()\r\n\r\nIf !EMPTY(TRB->ZSA_PRCDES)\r\n\tGdFieldPut(\"C6_XOFERTA\",'S')\r\nEndIf\r\n\r\ndbSelectArea(\"TRB\") \r\ndbCloseArea()\r\n\r\n\r\nReturn(lRet)\r\n\r\nUser Function MTSOEST(cCodTes)\r\n****************************************************************************************************************\r\n*    Libera ou bloquea linha do pedido de venda \r\n*\r\n****\r\nLocal lRet := .F.\r\n\r\ndbSelectArea(\"SF4\")\r\ndbSetOrder(1)\r\ndbSeek(xFilial(\"SF4\") + cCodTes)\r\n\r\nIf SF4->F4_ESTOQUE == \"S\"\r\n\tlRet := .T.\r\n\tConOut(\"MTSOEST\" +\"|\"+ cCodTes +\"|\"+ \".T.\" )\r\nElse\r\n\tConOut(\"MTSOEST\" +\"|\"+ cCodTes +\"|\"+ \".F.\" )\r\n\tlRet := .F.\r\nEndIf\r\n\r\nReturn(lRet)\r\n\r\nUser Function GM410FIM()\r\n****************************************************************************************************************\r\n*    Libera ou bloquea pedido de venda M410STTS \r\n*\r\n****\r\nLocal lLibBlq  := .F.\r\nLocal lCalcPeso:= .F.\r\nLocal cQuery   := \"\"\r\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\r\nlOCAL nX       := 0\r\n\r\nIf SubString(CNUMEMP,1,2) == \"01\"  .AND. (FUNNAME() <> \"GROA001\")\r\n\tFor nX := 1 To Len(aCols)\r\n\t\tIf !Empty(GdFieldGet(\"C6_XMOTBLQ\",nX)) .OR. !Empty(M->C5_XMOTBLQ)\r\n\t\t\tlLibBlq   := .T.\r\n\t\tEndIf\r\n\t\t\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\t\t\r\n\t\t\tlCalcPeso := .T.\r\n\t\tEndIf\r\n\tNext nX\r\n\t\r\n\tIf lLibBlq   \r\n\t\tRecLock(\"SC5\",.F.)\r\n\t\t\tSC5->C5_BLQ  := '1'\r\n\t\tMsUnlock()\t\r\n\tEndif\r\n\r\n\tIf  M->C5_TIPO $ \"D/B\"\r\n\t\tRecLock(\"SC5\",.F.)\r\n\t\t\tSC5->C5_BLQ  := ''\r\n\t\tMsUnlock()\t\r\n\tEndIf \r\n\r\n\tIf lCalcPeso\r\n\t\r\n\t\t//Soma dos pesos brutos e liquido\r\n\t\tcQuery   := \" SELECT\tROUND(SUM(B8_YPESOLQ) + SUM(PESO_AMOSTRAS),3) PLQ, \r\n\t\tcQuery   += \" \t\t    ROUND(SUM(B8_YPESOBR) + SUM(PESO_AMOSTRAS),3) PBR \r\n\t\tcQuery   += \" FROM (\r\n\t\tcQuery   += \" SELECT\t\tISNULL(ZGO.ZGO_INVOIC,'') AS ZGO_INVOIC, \r\n\t\tcQuery   += \" \t\t\tTAB_PROFORMA.* FROM (\r\n\t\tcQuery   += \" \t\t\t SELECT\tRTRIM(LTRIM(C5_NUM)) AS C5_NUM,\r\n\t\tcQuery   += \" \t\t\t\t\tYEAR(CAST(C5_EMISSAO AS DATE) )ANO,\r\n\t\tcQuery   += \" \t\t\t\t\tCAST(C5_EMISSAO AS DATE) AS C5_EMISSAO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_NOME)) AS A1_NOME,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_END)) AS A1_END,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_BAIRRO)) AS A1_BAIRRO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDI)) AS A1_DDI,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDD)) AS A1_DDD,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_TEL)) AS A1_TEL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_CONTATO)) AS A1_CONTATO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A3_NOME)) AS A3_NOME,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(YA_PAIS_I)) AS YA_PAIS_I,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XSEAL)) AS C5_XSEAL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XBOOKIN)) AS C5_XBOOKIN,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVESSEL)) AS C5_XVESSEL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XCONTAI)) AS C5_XCONTAI,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTARE)) AS C5_XTARE,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPO)) AS C5_XPO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_LOTECTL)) AS C6_LOTECTL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_NUMLOTE)) AS C6_NUMLOTE,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_CF,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_XPESO AS PESO_AMOSTRAS,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YESPLIQ * 100 AS C6_YESPLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(B5_YCEMEIN)) AS C6_DESCRI, \r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_DESCRI))  AS C6_DESCRI_P, \r\n\t\tcQuery   += \" \t\t\t\t\tIIF(RTRIM(LTRIM(C6_YCAVALE))='','-',RTRIM(LTRIM(C6_YCAVALE)))  AS C6_YCAVALE,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_PRCVEN,\r\n\t\tcQuery   += \" \t\t\t\t\tROUND(C6_PRCVEN / 10.764,2) AS PRCVEN_SQFT,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XVLRFIN AS VALOR_FINANCEIRO,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_QTDVEN,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_NUMLOTE<>'',1,0) AS QTD_CHAPAS,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',0,C6_QTDVEN) AS QTD_TOTAL_FATURAR,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='M2',C6_QTDVEN,0) AS QTD_TOTAL_M2,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='PC',C6_QTDVEN,0) AS QTD_TOTAL_PC,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_UM,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_UNSVEN,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_VALOR,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',C6_VALOR,0) AS SAMPLE_DESC,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_VALDESC,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YCOMLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YALTLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YTOTLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOLQ FROM SB8010 WHERE D_E_L_E_T_ = '' AND C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO AND B8_LOCAL = C6_LOCAL) ,0) AS  B8_YPESOLQ,\r\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOBR FROM SB8010 WHERE D_E_L_E_T_ = '' AND C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO AND B8_LOCAL = C6_LOCAL) ,0) AS  B8_YPESOBR,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XTESALE,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVALEXT)) AS C5_XVALEXT,\r\n\t\tcQuery   += \" \t\t\t\t\tUPPER(ISNULL(CONVERT(VARCHAR(MAX), CONVERT(VARBINARY(MAX), C5_YOBSEXT)),'')) AS C5_YOBSEXT,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESING))  AS E4_DESING,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESCRI))  AS E4_DESPOR,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPORTLO)) AS C5_XPORTLO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTPCONT)) AS C5_XTPCONT,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XINSURA)) AS C5_XINSURA,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFIMDES)) AS C5_XFIMDES,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFRFORW)) AS C5_XFRFORW,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XWLIMIT,\r\n\t\tcQuery   += \" \t\t\t\t\tCASE \r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'S' THEN 'STANDARD'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'C' THEN 'COMMERCIAL'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'P' THEN 'PREMIUM'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = '' AND C6_CF='7949' THEN 'SAMPLE'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = ''  THEN '' \r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'A' THEN 'SAMPLE'\r\n\t\tcQuery   += \" \t\t\t\t\tEND C6_YCLASSI,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XTOTAL,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XDESCON,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XPDESTI,\r\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT B8_LOTEFOR FROM SB8010 WHERE D_E_L_E_T_ = '' AND B8_LOTECTL = C6_LOTECTL AND B8_NUMLOTE = '' AND SUBSTRING(B8_PRODUTO,1,2) ='BL' ),'') AS LOTE_FORNECEDOR\r\n\t\tcQuery   += \" \t\t\t FROM SC6010 SC6 INNER JOIN SC5010 SC5\r\n\t\tcQuery   += \" \t\t\t\t   ON (C6_FILIAL = C5_FILIAL AND C6_NUM = C5_NUM )\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA1010 SA1\r\n\t\tcQuery   += \" \t\t\t\t   ON (A1_COD = C5_CLIENTE AND A1_LOJA = C5_LOJACLI )\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SYA010 SYA\r\n\t\tcQuery   += \" \t\t\t\t   ON (A1_PAIS = YA_CODGI)\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA3010\r\n\t\tcQuery   += \" \t\t\t\t   ON (A1_VEND=A3_COD)\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SB5010 SB5\r\n\t\tcQuery   += \" \t\t\t\t   ON (C6_PRODUTO = B5_COD)\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SE4010 SE4\r\n\t\tcQuery   += \" \t\t\t\t   ON (E4_CODIGO = C5_CONDPAG)\r\n\t\tcQuery   += \" \t\t\t WHERE SC6.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SC5.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SA1.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SYA.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SB5.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SE4.D_E_L_E_T_ = ''\r\n\t\t//cQuery   += \" \t\t\t   AND SC5.C5_BLQ <> '1'\r\n\t\tcQuery   += \" \t\t\t   AND C5_NUM = '\"+SC5->C5_NUM+\"'\r\n\t\tcQuery   += \" )TAB_PROFORMA\r\n\t\tcQuery   += \" \t FULL OUTER JOIN ZGO010 ZGO\r\n\t\tcQuery   += \" \t   ON (C5_NUM = ZGO_PEDIDO)\r\n\t\tcQuery   += \" WHERE C5_NUM <> ''\r\n\t\tcQuery   += \"   AND ISNULL(ZGO_INVOIC,'') LIKE '%%'\r\n\t\tcQuery   += \" )TB_PESO\r\n\t\t                                                          \r\n\t\ttcQuery cQuery alias TRB new\r\n\t\tdbSelectArea(\"TRB\")\r\n\t\tdbgotop()\r\n\t\t\r\n\t\tIF !M->C5_TIPO $ \"D/B\" .And. LEFT(AllTrim(GdFieldGet(\"C6_PRODUTO\",1)),2) <> 'BL'\r\n\t\t\tIF !EOF()\r\n\t\t\t\tdbSelectArea(\"SC5\")\t\t\r\n\t\t\t\tIf RecLock(\"SC5\",.f.)\r\n\t\t\t\t\tReplace SC5->C5_PESOL  With TRB->PLQ\r\n\t\t\t\t\tReplace SC5->C5_PBRUTO With TRB->PBR\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tIF TRB->PLQ > SC5->C5_PBRUTO \r\n\t\t\t\t\t\tAlert(\"Peso bruto esta menor que peso líquido. Favor corrigir!\")\r\n\t\t\t\t\t\tReplace SC5->C5_PBRUTO With 0\r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tMsUnLock()\r\n\t\t\t\tEndIf\t\r\n\t\t\tEndIf\r\n\t\tEndIf\t\t\t\t\r\n\t\tdbSelectArea(\"TRB\") \r\n\t\tdbCloseArea()\r\n\t\t\r\n\t\t//Soma da quantidade de bandos\r\n\t\tcQuery   := \" SELECT COUNT(*) QTD FROM (\r\n\t\tcQuery   += \" SELECT DISTINCT C6_YCAVALE FROM (\r\n\t\tcQuery   += \" SELECT\t\tISNULL(ZGO.ZGO_INVOIC,'') AS ZGO_INVOIC, \r\n\t\tcQuery   += \" \t\t\tTAB_PROFORMA.* FROM (\r\n\t\tcQuery   += \" \t\t\t SELECT\tRTRIM(LTRIM(C5_NUM)) AS C5_NUM,\r\n\t\tcQuery   += \" \t\t\t\t\tYEAR(CAST(C5_EMISSAO AS DATE) )ANO,\r\n\t\tcQuery   += \" \t\t\t\t\tCAST(C5_EMISSAO AS DATE) AS C5_EMISSAO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_NOME)) AS A1_NOME,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_END)) AS A1_END,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_BAIRRO)) AS A1_BAIRRO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDI)) AS A1_DDI,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDD)) AS A1_DDD,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_TEL)) AS A1_TEL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_CONTATO)) AS A1_CONTATO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A3_NOME)) AS A3_NOME,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(YA_PAIS_I)) AS YA_PAIS_I,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XSEAL)) AS C5_XSEAL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XBOOKIN)) AS C5_XBOOKIN,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVESSEL)) AS C5_XVESSEL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XCONTAI)) AS C5_XCONTAI,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTARE)) AS C5_XTARE,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPO)) AS C5_XPO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_LOTECTL)) AS C6_LOTECTL,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_NUMLOTE)) AS C6_NUMLOTE,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_CF,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_XPESO AS PESO_AMOSTRAS,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YESPLIQ * 100 AS C6_YESPLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(B5_YCEMEIN)) AS C6_DESCRI, \r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_DESCRI))  AS C6_DESCRI_P, \r\n\t\tcQuery   += \" \t\t\t\t\tIIF(RTRIM(LTRIM(C6_YCAVALE))='','-',RTRIM(LTRIM(C6_YCAVALE)))  AS C6_YCAVALE,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_PRCVEN,\r\n\t\tcQuery   += \" \t\t\t\t\tROUND(C6_PRCVEN / 10.764,2) AS PRCVEN_SQFT,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XVLRFIN AS VALOR_FINANCEIRO,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_QTDVEN,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_NUMLOTE<>'',1,0) AS QTD_CHAPAS,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',0,C6_QTDVEN) AS QTD_TOTAL_FATURAR,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='M2',C6_QTDVEN,0) AS QTD_TOTAL_M2,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='PC',C6_QTDVEN,0) AS QTD_TOTAL_PC,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_UM,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_UNSVEN,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_VALOR,\r\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',C6_VALOR,0) AS SAMPLE_DESC,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_VALDESC,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YCOMLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YALTLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tC6_YTOTLIQ,\r\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOLQ FROM SB8010 WHERE D_E_L_E_T_ = '' AND  C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO) ,0) AS  B8_YPESOLQ,\r\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOBR FROM SB8010 WHERE D_E_L_E_T_ = '' AND C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO) ,0) AS  B8_YPESOBR,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XTESALE,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVALEXT)) AS C5_XVALEXT,\r\n\t\tcQuery   += \" \t\t\t\t\tUPPER(ISNULL(CONVERT(VARCHAR(MAX), CONVERT(VARBINARY(MAX), C5_YOBSEXT)),'')) AS C5_YOBSEXT,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESING))  AS E4_DESING,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESCRI))  AS E4_DESPOR,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPORTLO)) AS C5_XPORTLO,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTPCONT)) AS C5_XTPCONT,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XINSURA)) AS C5_XINSURA,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFIMDES)) AS C5_XFIMDES,\r\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFRFORW)) AS C5_XFRFORW,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XWLIMIT,\r\n\t\tcQuery   += \" \t\t\t\t\tCASE \r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'S' THEN 'STANDARD'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'C' THEN 'COMMERCIAL'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'P' THEN 'PREMIUM'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = '' AND C6_CF='7949' THEN 'SAMPLE'\r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = ''  THEN '' \r\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'A' THEN 'SAMPLE'\r\n\t\tcQuery   += \" \t\t\t\t\tEND C6_YCLASSI,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XTOTAL,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XDESCON,\r\n\t\tcQuery   += \" \t\t\t\t\tC5_XPDESTI,\r\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT B8_LOTEFOR FROM SB8010 WHERE D_E_L_E_T_ = '' AND B8_LOTECTL = C6_LOTECTL AND B8_NUMLOTE = '' AND SUBSTRING(B8_PRODUTO,1,2) ='BL' ),'') AS LOTE_FORNECEDOR\r\n\t\tcQuery   += \" \t\t\t FROM SC6010 SC6 INNER JOIN SC5010 SC5\r\n\t\tcQuery   += \" \t\t\t\t   ON (C6_FILIAL = C5_FILIAL AND C6_NUM = C5_NUM )\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA1010 SA1\r\n\t\tcQuery   += \" \t\t\t\t   ON (A1_COD = C5_CLIENTE AND A1_LOJA = C5_LOJACLI )\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SYA010 SYA\r\n\t\tcQuery   += \" \t\t\t\t   ON (A1_PAIS = YA_CODGI)\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA3010\r\n\t\tcQuery   += \" \t\t\t\t   ON (A1_VEND=A3_COD)\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SB5010 SB5\r\n\t\tcQuery   += \" \t\t\t\t   ON (C6_PRODUTO = B5_COD)\r\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SE4010 SE4\r\n\t\tcQuery   += \" \t\t\t\t   ON (E4_CODIGO = C5_CONDPAG)\r\n\t\tcQuery   += \" \t\t\t WHERE SC6.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SC5.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SA1.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SYA.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SB5.D_E_L_E_T_ = ''\r\n\t\tcQuery   += \" \t\t\t   AND SE4.D_E_L_E_T_ = ''\r\n\t  //cQuery   += \"              --AND SC5.C5_BLQ <> '1'\r\n\t\tcQuery   += \" \t\t\t   AND C5_NUM = '\"+SC5->C5_NUM+\"'\r\n\t\tcQuery   += \" \r\n\t\tcQuery   += \" )TAB_PROFORMA\r\n\t\tcQuery   += \" \t FULL OUTER JOIN ZGO010 ZGO\r\n\t\tcQuery   += \" \t   ON (C5_NUM = ZGO_PEDIDO)\r\n\t\tcQuery   += \" WHERE C5_NUM <> ''\r\n\t   //cQuery  += \"   --AND ISNULL(ZGO_INVOIC,'') LIKE '%'+@INVOICE+'%'\r\n\t\tcQuery   += \" )TB_TOTAL_CAV\r\n\t\tcQuery   += \" WHERE C6_YCAVALE <> '-'\r\n\t\tcQuery   += \" )TB_QTD_CAV\r\n\t\t\r\n\t\t\r\n\t\ttcQuery cQuery alias TRB new\r\n\t\tdbSelectArea(\"TRB\")\r\n\t\tdbgotop()\r\n\t\t\r\n\t\tIF !EOF()\r\n\t\t\tdbSelectArea(\"SC5\")\t\t\r\n\t\t\tIf RecLock(\"SC5\",.f.)\r\n\t\t\t\tReplace SC5->C5_VOLUME1  With TRB->QTD  \r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf\t\r\n\t\tEndIf\r\n\t\t\t\t\t\t\r\n\t\tdbSelectArea(\"TRB\") \r\n\t\tdbCloseArea()\r\n\t\t\r\n\t\tIf RecLock(\"SC5\",.f.)\r\n\t\t\tIF SC5->C5_VOLUME1 == 0\r\n\t\t\t\tSC5->C5_VOLUME1 := 1\r\n\t\t\tEndIf\r\n\t\t\tMsUnLock()\r\n\t\tEndIf\t\r\n\t\t\r\n\tEndIf\r\n\r\nEndIf\r\n\r\nReturn()\r\n\r\n/*\r\nUser Function MDesTot()\r\n****************************************************************************************************************\r\n*    Programa dar o desconto  \r\n*\r\n****\r\nLocal nValorTemp := 0\r\n\r\nFor nX := 1 To Len(aCols)\r\n\t\tGdFieldPut(\"C6_DESCONT\",M->C5_DESC1,nX) \r\nNext nX\r\n\r\nReturn(.T.) \r\n*/\r\n\r\nStatic Function MValidPedV(oProcess, lEnd,lRet)\r\n****************************************************************************************************************\r\n*   /* Programa para validar o pedido de venda tabela de preço de chapas - Qualitá */\r\n*\r\n****\r\nLocal cQuery := \"\"\r\n\r\nLocal nPosCava := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_YCAVALE\"}) //Cavalete\r\nLocal nPosLOTE := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_LOTECTL\"}) //SubLote\r\nLocal nPosSUBL := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_NUMLOTE\"}) //Lote\r\nLocal nPosLOCA := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_LOCAL\"  }) //Lote\r\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\r\n\r\nLocal fTPBLQ   := .F.\r\n\r\nLocal aMsgPrc  := {}\r\nLoca  nX       := 0\r\n\r\nIf !IsBlind()     \r\n\toProcess:SetRegua1(8)\r\nEndIf\r\n\r\n/*\r\nSomente para Qualitá\r\n*/\r\nConOut(FUNNAME())\r\nIf SubString(CNUMEMP,1,2) == \"01\" .And. (INCLUI == .T. .Or. ALTERA == .T.) .AND. (FUNNAME() <> \"GROA001\")\r\n\r\n\r\n\tM->C5_XMOTBLQ := \"\"\r\n\r\n\t/*\r\n\tSomente para Mercado Externo\r\n\tValidação mercado interno campos FollowUp\r\n\t*/\r\n\tIf M->C5_YTIPO $ \"ME/MI\"\r\n\t\tIF M->C5_XSHOWFO == \"S\"\r\n\t\t\tIf Empty(M->C5_XFOLLST) .Or. Empty(M->C5_XPENDEN) .Or. Empty(M->C5_XDTLIBF)\r\n\t\t\t\tAlert(\"FollowUp='SIM'! O P.Venda não pode ser salvo sem as informações de Pendência/Situação/Data de Liberação. \")\t\r\n\t\t\t\tReturn(.F.)\r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\tEndIf\r\n\r\n\tcDesMoed := \"\"\r\n\toFont := TFont():New('Arial Black',,-18,.T.)\r\n\t\r\n\tIf     M->C5_MOEDA == 1\r\n\t\tcDesMoed := \"1 - (R$)   R E A L\"\r\n\tElseIf M->C5_MOEDA == 2\r\n\t\tcDesMoed := \"2 - ($)    D O L A R\"\r\n\tElseIf M->C5_MOEDA == 3\r\n\t\tcDesMoed := \"3 - (€)    E U R O\"\r\n\tEndIf\r\n\t\r\n\tIf !IsBlind()     \r\n\t\tDEFINE MSDIALOG _oDlgMoeda TITLE \"Moeda\" FROM u_MGETTELA(178),u_MGETTELA(181) TO u_MGETTELA(342),u_MGETTELA(577) PIXEL\r\n\t\t\t// Cria as Groups do Sistema\r\n\t\t\t@ u_MGETTELA(001),u_MGETTELA(003) TO u_MGETTELA(062),u_MGETTELA(195) LABEL \"\" PIXEL OF _oDlgMoeda\r\n\t\t\r\n\t\t\t// Cria Componentes Padroes do Sistema\r\n\t\t\t@ u_MGETTELA(009),u_MGETTELA(010) Say \"Pedido sendo salvo na moeda:\" Size u_MGETTELA(075),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgMoeda\r\n\t\t\t@ u_MGETTELA(033),u_MGETTELA(078) Say cDesMoed \t\t\t\t\t\t Size u_MGETTELA(090),u_MGETTELA(080) COLOR CLR_HMAGENTA FONT oFont PIXEL OF _oDlgMoeda\r\n\t\t\t@ u_MGETTELA(064),u_MGETTELA(156) Button \"OK\" ACTION(Close(_oDlgMoeda)) Size u_MGETTELA(037),u_MGETTELA(012) PIXEL OF _oDlgMoeda\r\n\t\tACTIVATE MSDIALOG _oDlgMoeda CENTERED \r\n\tEndIf\r\n\r\n\tConOut(\"******************************************\" )\r\n\tConOut(\"Inicio P.E = MT410TOK Qualitá\" )\r\n\tConOut(\"******************************************\" )\t\r\n\t/*\r\n\t****************************************************************\r\n\tConferencia da tabela de preço com o desconto cadastrado por classificação comercial\r\n\t****************************************************************\r\n\t*/\r\n\tdbSelectArea(\"SA1\")\r\n\tdbSetOrder(1)\r\n\tdbSeek(xFilial(\"SA1\") + M->C5_CLIENTE + M->C5_LOJACLI )\r\n\t\r\n\tIf !Empty(SA1->A1_INFDESC)\r\n\t\tAlert(\"Aviso! Este cliente possui um desconto padrão! Verifique sempre pela tela [F5].\")\r\n\tEndIf\r\n\t\r\n\tIF M->C5_TIPO $ \"D\"\r\n\t\tReturn(.T.)\r\n\tEndIf\r\n\t\r\n\tIf !IsBlind()     \r\n\t\toProcess:IncRegua1(\"[1-8] - Conferência da tabela de preço com o desconto cadastrado!\")  \r\n\tEndIf\r\n\r\n\tFor nX := 1 To Len(aCols)\r\n\t\t/*\r\n\t\tRegra geral de tabela de preços \r\n\t\t*/\r\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\t\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\t\t\t\r\n\t\t\tIf Empty(SA1->A1_TABELA)\r\n\r\n\t\t\t\tIf Empty(GdFieldGet(\"C6_YCLASSI\",nX))\r\n\t\t\t\t\tcClassif := \"P\"\r\n\t\t\t\tElse\r\n\t\t\t\t\tcClassif := AllTrim(GdFieldGet(\"C6_YCLASSI\",nX))\r\n\t\t\t\tEndIf\r\n\r\n\t\t\t\tIf GdFieldGet(\"C6_XOFERTA\",nX) == 'N'\r\n\r\n\t\t\t\t\tcQuery  := \" SELECT DA1_CODTAB,DA0_DESCRI,DA0_DESGER ,DA1_PRCVEN , CASE WHEN DA1_PERDES=0  THEN 1 WHEN DA1_PERDES<>0 THEN DA1_PERDES END  DA1_PERDES \r\n\t\t\t\t\tcQuery  += \"   FROM DA0010 DA0 \r\n\t\t\t\t\tcQuery  += \"        INNER JOIN DA1010 DA1 \r\n\t\t\t\t\tcQuery  += \" ON (DA0_CODTAB = DA1_CODTAB)\r\n\t\t\t\t\t\r\n\t\t\t\t\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) <> 'AM'\r\n\t\t\t\t\t\tcQuery  += \"  WHERE DA0_YCLASS IN ('\"+ cClassif +\"')\r\n\t\t\t\t\t\tcQuery  += \"    AND DA1_CODPRO = '\" + AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\"\t\t\r\n\t\t\t\t\tElse\r\n\t\t\t\t\t\tcQuery  += \"  WHERE DA1_CODPRO = '\" + AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\"\t\r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\tIF !EMPTY(SA1->A1_MULTTAB)\r\n\t\t\t\t\t\tcQuery  += \"    AND DA0_CODTAB IN (\"+AllTrim(SA1->A1_MULTTAB)+\")\"\r\n\t\t\t\t\tELSE\r\n\t\t\t\t\t\tcQuery  += \"    AND DA0_CODTAB IN ('000','001','002','003')\r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\tcQuery  += \"    AND DA0.D_E_L_E_T_ = ''\r\n\t\t\t\t\tcQuery  += \"    AND DA1.D_E_L_E_T_ = ''\r\n\t\t\t\t\t\r\n\t\t\t\t\ttcQuery cQuery alias TRB new\r\n\t\t\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\t\t\tdbgotop()\r\n\t\t\t\t\t\r\n\t\t\t\t\tIf Empty(TRB->DA1_PRCVEN) .and. !GDDeleted(nX) \r\n\t\t\t\t\t\tAlert(\"[C6_PRCVEN] - Tabela de preço não encontrada! Linha:(\" + Alltrim(str(nX)) +\") Confira a classif. do produto ou Mult.Tabelas preços no Cad. Cliente.\" )\r\n\t\t\t\t\t\tlRet := .F. \r\n\t\t\t\t\t\t//sleep(300)\t\r\n\t\t\t\t\t\tM->C5_BLQ  := '1'\r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t\r\n\t\t\t\t\t//If GdFieldGet(\"C6_PRCVEN\",nX) <  IIF(cClassif==\"P\",((TRB->DA1_PRCVEN - TRB->DA0_DESGER)),((TRB->DA1_PRCVEN * TRB->DA0_DESGER))) .and. !GDDeleted(nX)\r\n\t\t\t\t\tIf GdFieldGet(\"C6_PRCVEN\",nX) <  IIF(cClassif==\"P\",((TRB->DA1_PRCVEN - TRB->DA0_DESGER)),((TRB->DA1_PRCVEN))) .and. !GDDeleted(nX)\r\n\t\t\t\t\t\t//aAdd(aMsgPrc,\"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + Alltrim(str(nX))+\" Tabela de Preço:\" + AllTrim(TRB->DA1_CODTAB) + \"-\"+ AllTrim(TRB->DA0_DESCRI))  \r\n\t\t\t\t\t\taAdd(aMsgPrc,\"Cavalete:\"+GdFieldGet(\"C6_YCAVALE\",nX)+\" Tabela de Preço:\" + AllTrim(TRB->DA1_CODTAB) + \"-\"+ AllTrim(TRB->DA0_DESCRI) )\r\n\t\t\t\t\t\t//lRet := .F.\r\n\t\t\t\t\t\tConOut(\"******************************************\")\r\n\t\t\t\t\t\tConOut(\"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + Alltrim(str(nX)))\r\n\t\t\t\t\t\tConOut(\"******************************************\")\r\n\t\t\t\t\t\t//sleep(300)\r\n\t\t\t\t\t\tM->C5_BLQ  := '1'\t\r\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"PREÇO MENOR QUE A TABELA DE PREÇO:\"+ AllTrim(TRB->DA1_CODTAB),nX)\t\r\n\t\t\t\t\tELSE\r\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\r\n\t\t\t\t\tEndIf\r\n\r\n\t\t\t\t\tGdFieldPut(\"C6_PRCREF\",TRB->DA1_PRCVEN,nX)\r\n\t\t\t\t\t\r\n\t\t\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\t\t\tdbCloseArea()\r\n\t\t\t\telse\r\n\t\t\t\t\tM->C5_BLQ  := ''\r\n\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\r\n\t\t\t\tEndIf\r\n\r\n\t\t\t\tIF lRet == .F. .And. !IsBlind()  \r\n\t\t\t\t\tReturn(lRet) \r\n\t\t\t\tEndIf\r\n\t\t\tElse\r\n\t\t\t\t/*\r\n\t\t\t\tUsado para definir uma tabela de preço especifica para o cliente\r\n\t\t\t\t*/\r\n\t\t\t\tIf GdFieldGet(\"C6_XOFERTA\",nX) == 'N'\r\n\t\t\t\t\r\n\t\t\t\t\tcQuery  := \" SELECT DA1_CODTAB,DA0_DESCRI,DA0_DESGER,DA1_PRCVEN , CASE WHEN DA1_PERDES=0  THEN 1 WHEN DA1_PERDES<>0 THEN DA1_PERDES END  DA1_PERDES\r\n\t\t\t\t\tcQuery  += \"   FROM DA0010 DA0 \r\n\t\t\t\t\tcQuery  += \"        INNER JOIN DA1010 DA1 \r\n\t\t\t\t\tcQuery  += \" ON (DA0_CODTAB = DA1_CODTAB)\r\n\t\t\t\t\t\r\n\t\t\t\t\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) <> 'AM'\r\n\t\t\t\t\t\tcQuery  += \"  WHERE DA1_CODTAB IN ('\"+ M->C5_TABELA +\"')\r\n\t\t\t\t\t\tcQuery  += \"    AND DA1_CODPRO = '\"+AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\r\n\t\t\t\t\tElse\r\n\t\t\t\t\t\t//TABELA PADRÃO DE AMOSTRAS\r\n\t\t\t\t\t\tcQuery  += \"  WHERE DA1_CODPRO = '\"+AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\r\n\t\t\t\t\t\tcQuery  += \"    AND DA0_CODTAB IN ('000')\r\n\t\t\t\t\tEndIf-\r\n\t\t\t\r\n\t\t\t\t\tcQuery  += \"    AND DA0.D_E_L_E_T_ = ''\r\n\t\t\t\t\tcQuery  += \"    AND DA1.D_E_L_E_T_ = ''\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\ttcQuery cQuery alias TRB new\r\n\t\t\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\t\t\tdbgotop()\r\n\t\t\t\t\t\r\n\t\t\t\t\tIf Empty(TRB->DA1_PRCVEN) .and. !GDDeleted(nX)\r\n\t\t\t\t\t\tAlert(\"[C6_PRCVEN] - Tabela de preço não encontrada! Linha:(\" + Alltrim(str(nX)) +\") Confira a classif. do produto ou Mult.Tabelas preços no Cad. Cliente.\" )\r\n\t\t\t\t\t\tlRet := .F.\r\n\t\t\t\t\t\t//sleep(300)\r\n\t\t\t\t\t\tM->C5_BLQ  := '1'\r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t\r\n\t\t\t\t\tIf GdFieldGet(\"C6_PRCVEN\",nX) <  TRB->DA1_PRCVEN .and. !GDDeleted(nX)\r\n\t\t\t\t\t\taAdd(aMsgPrc,\"Cavalete:\"+GdFieldGet(\"C6_YCAVALE\",nX)+\" Tabela de Preço:\" + AllTrim(TRB->DA1_CODTAB) + \"-\"+ AllTrim(TRB->DA0_DESCRI) ) \r\n\t\t\t\t\t\t//lRet := .F.\r\n\t\t\t\t\t\tConOut(\"******************************************\" )\r\n\t\t\t\t\t\tConOut(\"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + Alltrim(str(nX)))\r\n\t\t\t\t\t\tConOut(\"******************************************\" )\r\n\t\t\t\t\t\t//sleep(300)\t\r\n\t\t\t\t\t\tM->C5_BLQ  := '1'\r\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"Preço menor que a tabela:\"+ AllTrim(TRB->DA1_CODTAB),nX)\t\r\n\t\t\t\t\tELSE\r\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\r\n\t\t\t\t\tEndIf\r\n\r\n\t\t\t\t\tGdFieldPut(\"C6_PRCREF\",TRB->DA1_PRCVEN,nX)\r\n\t\t\t\t\t\r\n\t\t\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\t\t\tdbCloseArea()\r\n\t\t\t\tElse\r\n\t\t\t\t\tM->C5_BLQ  := ''\r\n\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\r\n\t\t\t\tEndIf\r\n\r\n\t\t\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\t\t\tReturn(lRet) \r\n\t\t\t\tEndIf\r\n\t\t\t\r\n\t\t\tEndIf\r\n\t\t\t\t\r\n\t\tEndIf\r\n\tNext nX\r\n\t\r\n\tcMSG := \"\"\r\n\t\r\n\tFor nX:=1 to Len(aMsgPrc)\r\n\t\t\tIf Empty(cMSG)\r\n\t\t\t\tcMSG := \"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + chr(13)+chr(10) \r\n\t\t\tEndIf\r\n\t\t\tcMSG += aMsgPrc[nX] + chr(13)+chr(10)   \r\n\tNext nX\r\n\t\r\n\t\r\n\tIf !Empty(cMSG)\r\n\t\tAlert(cMSG)  \r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\tEndIf\r\n\t\r\n\t\r\n\t/*\r\n\t***************************************************************************************\r\n\tVerifica o erro do saldo no cavalete e no pedido \r\n\t***************************************************************************************\r\n\t\r\n\tnQtdPedVend := 0\r\n\t\r\n\tFor nX := 1 To Len(aCols)\r\n\t\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\r\n\t\tnQtdPedVend := GdFieldGet(\"C6_QTDVEN\",nX))\r\n\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec \r\n\t\t\tIf !GDDeleted(nX)\r\n\t\t\t\t\r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\t\t\r\n\tNext nX\r\n\t*/\r\n\t\r\n\tConOut(\"******************************************\" )\r\n\tConOut(\"P.E = MT410TOK Qualitá Validação de cavaletes\" )\r\n\tConOut(\"******************************************\" )\r\n\r\n\t/*\r\n\t****************************************************************\r\n\tConferencia do cavaletes duplicados no proprio pedido \r\n\t****************************************************************\r\n\t*/\r\n\taNumCav \t:= {}\t\t\r\n\taTodCav \t:= {}\r\n    aGriCav \t:= {}\r\n    aGriCavDup \t:= {}\r\n    aGriLSPv    := {}\r\n    aLSPvLoca   := {}\t\r\n    aCavZero    := {}\r\n    aNumCavPro  := {}\r\n\taCavBenef   := {}\r\n    \r\n\tFor nX := 1 To Len(aCols)\r\n\t\r\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\t\r\n\t\t//ALERT(SB1->B1_COD +\"||\"+ SB1->B1_GRUPO)\r\n\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec \r\n\t\r\n\t\t\tIf !Empty(GdFieldGet(\"C6_YCAVALE\",nX)) .and. !GDDeleted(nX) \r\n\t\t\t\tIf Empty( aScan(aNumCav,GdFieldGet(\"C6_YCAVALE\",nX)) )\r\n\t\t\t\t \taAdd(aNumCav   ,GdFieldGet(\"C6_YCAVALE\",nX))\r\n\t\t\t\t \taAdd(aNumCavPro,{GdFieldGet(\"C6_YCAVALE\",nX),GdFieldGet(\"C6_PRODUTO\",nX)})\r\n\t\t\t\tEndIf\r\n\t\t\tEndIf\r\n\t\t\tIf !GDDeleted(nX)\r\n\t\t\t\tIf Empty(aScan(aGriCav,AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) + GdFieldGet(\"C6_YCAVALE\",nX) + GdFieldGet(\"C6_LOTECTL\",nX) + GdFieldGet(\"C6_NUMLOTE\",nX)) )\r\n\t\t\t\t\taAdd(aGriCav , AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) + GdFieldGet(\"C6_YCAVALE\",nX) + GdFieldGet(\"C6_LOTECTL\",nX) + GdFieldGet(\"C6_NUMLOTE\",nX)  )\r\n\t\t\t\t\taAdd(aGriLSPv, {GdFieldGet(\"C6_LOTECTL\",nX) , GdFieldGet(\"C6_NUMLOTE\",nX) , AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))} )\r\n\t\t\t\tElse\r\n\t\t\t\t\tIF LEFT(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)),2)<>'AM'\r\n\t\t\t\t\t\taAdd(aGriCavDup, AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+GdFieldGet(\"C6_YCAVALE\",nX) + GdFieldGet(\"C6_LOTECTL\",nX) + GdFieldGet(\"C6_NUMLOTE\",nX)  )\r\n\t\t\t\t\tEndIf\r\n\t\t\t\tEndIf\r\n\t\t\tEndIf\r\n\t\t\t\r\n\t\tEndIf\r\n\t\t\r\n\tNext nX\r\n\t\r\n\tcMSG := \"\"\r\n\tFor nX:=1 to Len(aGriCavDup)\r\n\t\t\tIf Empty(cMSG)\r\n\t\t\t\tcMSG := \"Duplicados no pedido atual:\" + chr(13)+chr(10) \r\n\t\t\tEndIf\r\n\t\t\tcMSG += \"O item: \" + aGriCavDup[nX] + chr(13)+chr(10)   \r\n\tNext nX\r\n\t\r\n\tIf !Empty(cMSG)\r\n\t\tAlert(cMSG)\r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\tlRet := .F.\r\n\t\t\r\n\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\tReturn(lRet) \r\n\t\tEndIf\r\n\tEndIf\r\n\t\r\n\t/*\r\n\t****************************************************************\r\n\tConferencia se todos os itens do cavales estao completos (Se estiverem em cavaletes)\r\n\tCavalete apagado por completo\r\n\tA mesma rotina confere se existe produtos sem saldo.\r\n\t****************************************************************\r\n\t*/\r\n\tIf !IsBlind()     \r\n\t\toProcess:IncRegua1(\"[2-8] - Teste de cavales completos,apagados e sem saldo!\")\r\n\tEndIf\r\n\r\n\t/*\r\n\tSOMENTE SE O PEDIDO NAO ESTIVER FATURADO \r\n\t*/\r\n\tIF LEN(AllTrim(M->C5_NOTA)) <> 9\r\n\t\r\n\t\t/*\r\n\t\tVALIDAÇÃO DO CAMPO DA ULTIMA ATUALIZAÇÃO DO FOLLOWUP\r\n\t\t*/\r\n\t\tM->C5_XULDTAU := DDATABASE\r\n\r\n\t\tFor nX := 1 To Len(aNumCavPro)\r\n\t\t\r\n\t\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\t\tdbSelectArea(\"SB1\")\r\n\t\t\tdbSetOrder(1)\r\n\t\t\tdbSeek(xFilial(\"SB1\")+ aNumCavPro[nX][2] )\r\n\t\t\t\r\n\t\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\r\n\t\t\r\n\t\t\t \tcQuery  := \"  SELECT B8_PRODUTO,B1_DESC,B8_YCAVALE,B8_LOTECTL,B8_NUMLOTE,B8_YCAVALE+B8_LOTECTL+B8_NUMLOTE+B8_LOCAL CHAVE,B8_LOCAL,B8_SALDO \r\n\t\t\t \tcQuery  += \"    FROM SB8010 SB8 INNER JOIN SB1010 SB1 ON (B8_PRODUTO = B1_COD)\r\n\t\t\t \tcQuery  += \"   WHERE SB8.D_E_L_E_T_ = ''\r\n\t\t\t \tcQuery  += \"     AND SB1.D_E_L_E_T_ = ''\r\n\t\t\t \tcQuery  += \"     AND B8_YCAVALE = '\"+aNumCavPro[nX][1]+\"'\r\n\t\t\t \tcQuery  += \"     AND B8_PRODUTO = '\"+aNumCavPro[nX][2]+\"'\r\n\t\t\t \tcQuery  += \"     AND B8_ORIGLAN = 'BD'\r\n\t\t\t \tcQuery  += \"     AND B8_SALDO   <> 0\r\n\t\t\t \t\r\n\t\t\t \ttcQuery cQuery alias TRB new\r\n\t\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\t\tdbgotop()\r\n\t\t\t\tDo While !EOF()\r\n\t\t\t\t\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tcavaletes incompletos\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tIF !aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE })  \r\n\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE , TRB->B8_LOCAL} )\r\n\t\t\t\t\tElse\r\n\t\t\t\t\t\tif GDDeleted(aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE }))\r\n\t\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE,TRB->B8_LOCAL} )\r\n\t\t\t\t\t\tEndIf \r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tSem Saldo\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tIf TRB->B8_SALDO == 0  \r\n\t\t\t\t\t\taAdd(aCavZero,{ TRB->CHAVE ,AllTrim(TRB->B8_PRODUTO)+\"-\"+ AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE, TRB->B8_LOCAL} )\r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t\r\n\t\t\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\t\t\tdbSkip()\r\n\t\t\t\tEndDo\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t/*\r\n\t\t\t\tCavalete apagado\r\n\t\t\t\t*/\r\n\t\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\t\tdbgotop()\r\n\t\t\t\tIf EOF() .And.  !Empty(aNumCav[nX])\r\n\t\t\t\t\r\n\t\t\t\t\tIF !aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE })  \r\n\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE, TRB->B8_LOCAL} )\r\n\t\t\t\t\tElse\r\n\t\t\t\t\t\tif GDDeleted(aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE }))\r\n\t\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE , TRB->B8_LOCAL} )\r\n\t\t\t\t\t\tEndIf \r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\t\r\n\t\t\t\tEndIf\r\n\r\n\t\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\t\tdbCloseArea()\r\n\t\t\tEndIf\r\n\r\n\r\n\t\t\t/*\r\n\t\t\tCavalete em beneficiamento não pode \r\n\t\t\tProibe\r\n\t\t\t*/\r\n\t\t\tIf aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] }) <> 0 .AND. M->C5_TIPO = 'B'\r\n\t\t\t\taAdd(aCavBenef,{ aNumCavPro[nX][1] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][3] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][5] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][10] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][36] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][24]} )\r\n\t\t\tEndIf\r\n\t\t\t\r\n\t\tNext nX\r\n\r\n\r\n\t\tcMSG := \"\"\r\n\r\n\t\t/*\r\n\t\tBeneficiamento\r\n\t\t*/\t\t\r\n\t\tFor nX:=1 to Len(aCavBenef)\r\n\t\t\tIf Empty(cMSG)\r\n\t\t\t\tcMSG := \"Pedido de Beneficiamento com cavaletes:\" + chr(13)+chr(10) \r\n\t\t\tEndIf\t\t\t\r\n\t\t\tcMSG +=     \"  ->\" + AllTrim(aCavBenef[nX][2]) + \" Cav.[\" + Alltrim(aCavBenef[nX][3]) + \"] Lote[\" + Alltrim(aCavBenef[nX][4]) + \"] SubLote[\" + Alltrim(aCavBenef[nX][5]) + \"] Local [\"+ Alltrim(aCavBenef[nX][6]) +\"].\"+ chr(13)+chr(10)   \r\n\t\tNext nX\r\n\r\n\t\t/*\r\n\t\tIncompletos/Apagado\r\n\t\t\r\n\t\tFor nX:=1 to Len(aTodCav)\r\n\t\t\tIf Empty(cMSG)\r\n\t\t\t\tcMSG := \"Cavaletes incompletos/Apagado:\" + chr(13)+chr(10) \r\n\t\t\tEndIf\t\t\t\r\n\t\t\tcMSG +=     \"  ->\" + AllTrim(aTodCav[nX][2]) + \" Cav.[\" + Alltrim(aTodCav[nX][3]) + \"] Lote[\" + Alltrim(aTodCav[nX][4]) + \"] SubLote[\" + Alltrim(aTodCav[nX][5]) + \"] Local [\"+ Alltrim(aTodCav[nX][6]) +\"].\"+ chr(13)+chr(10)   \r\n\t\tNext nX\r\n\t\t*/\r\n\t\tIf !Empty(cMSG)\r\n\t\t\tAlert(cMSG)\r\n\t\t\t//AVISO(\"Cavaletes incompletos:\", cMSG , { \"Fechar\" }, 3)\r\n\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\t\tlRet := .F.\r\n\r\n\t\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\t\tReturn(lRet)\r\n\t\t\tEndIf \r\n\t\tEndIf\r\n\t\r\n\t\t/*\r\n\t\tSem Saldo\r\n\t\t*/\r\n\t\tcMSG := \"\"\r\n\t\tFor nX:=1 to Len(aCavZero)\r\n\t\t\tIf Empty(cMSG)\r\n\t\t\t\tcMSG := \"Produtos sem saldo:\" + chr(13)+chr(10) \r\n\t\t\tEndIf\t\t\t\r\n\t\t\tcMSG +=     \"  ->\" + AllTrim(aCavZero[nX][2]) + \" Cav.[\" + Alltrim(aCavZero[nX][3]) + \"] Lote[\" + Alltrim(aCavZero[nX][4]) + \"] SubLote.[\" + Alltrim(aCavZero[nX][5]) + \"]\"+ chr(13)+chr(10)   \r\n\t\tNext nX\r\n\t\t\r\n\t\tIf !Empty(cMSG)\r\n\t\t\tIF (!Empty(C5_NOTA).Or.C5_LIBEROK=='E' .And. Empty(C5_BLQ))\r\n\t\t\t\tAlert(cMSG)\r\n\t\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\t\tELse \r\n\t\t\t\tAlert(cMSG)\r\n\t\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\t\t\t\r\n\t\t\t\tlRet := .F.\r\n\r\n\t\t\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\t\t\tReturn(lRet)\r\n\t\t\t\tEndIf \r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\t\t\r\n\tEndIf\r\n\t\r\n\t/*\r\n\t****************************************************************\r\n\tConferencia se existe estes Lote/SubLotes em um PVenda salvo\r\n\t****************************************************************\r\n\t*/\r\n\tIf !IsBlind()     \r\n\t\toProcess:IncRegua1(\"[3-8] - Conferência se existe  Lote/SubLotes em um P.Venda salvo!\")\r\n\tENDIF\r\n\r\n\tFor nX := 1 To Len(aGriLSPv)\r\n\t\t \t\r\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(aGriLSPv[nX][3]) )\r\n\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec .AND. !Empty(aGriLSPv[nX][1])\r\n\t\t \tcQuery  := \" SELECT C6_NUM,C6_ITEM,C6_LOTECTL,C6_NUMLOTE ,C6_DESCRI \r\n\t\t \tcQuery  += \"   FROM SC6010 SC6 INNER JOIN SC5010 SC5 ON (C5_FILIAL = C6_FILIAL AND C5_NUM = C6_NUM)\r\n\t\t \tcQuery  += \"  WHERE SC6.D_E_L_E_T_ = ''\r\n\t\t \tcQuery  += \"    AND SC5.D_E_L_E_T_ = ''\r\n\t\t \tcQuery  += \"    AND C5_TIPO = 'N'\r\n\t\t \tcQuery  += \"    AND C6_NOTA = ''\r\n\t\t \tcQuery  += \" \tAND C6_LOTECTL = '\"+aGriLSPv[nX][1]+\"'\r\n\t\t \tcQuery  += \" \tAND C6_NUMLOTE = '\"+aGriLSPv[nX][2]+\"'\r\n\t\t \tcQuery  += \"    AND C6_NUM <> '\"+AllTrim(M->C5_NUM)+\"'\r\n\t\t \t\r\n\t\t \ttcQuery cQuery alias TRB new\r\n\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\tdbgotop()\r\n\t\t\tDo While !EOF()\r\n\t\t\t\r\n\t\t\t\tIf !aScan(aLSPvLoca,{|x|alltrim(x[1]) == AllTrim(TRB->C6_NUM) })\r\n\t\t\t\t\taAdd(aLSPvLoca,{ AllTrim(TRB->C6_NUM) , TRB->C6_ITEM,TRB->C6_LOTECTL , TRB->C6_NUMLOTE , AllTrim(TRB->C6_DESCRI) } )\r\n\t\t\t\tElse\r\n\t\t\t\t\taLSPvLoca[aScan(aLSPvLoca,{|x|alltrim(x[1]) == AllTrim(TRB->C6_NUM) })][2] := aLSPvLoca[aScan(aLSPvLoca,{|x|alltrim(x[1]) == AllTrim(TRB->C6_NUM) })][2] + \",\" + TRB->C6_ITEM\r\n\t\t\t\tEndIf\r\n\t\t\t\t\r\n\t\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\t\tdbSkip()\r\n\t\t\tEndDo\r\n\t\t\t\r\n\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\tdbCloseArea()\r\n\t\t\r\n\t\tEndIf\r\n\t\t\r\n\tNext nX\r\n\t\r\n\tcMSG := \"\"\r\n\tFor nX:=1 to Len(aLSPvLoca)\r\n\t\t\tIf Empty(cMSG)\r\n\t\t\t\tcMSG := \"Itens encontrados em outro P.Venda:\" + chr(13)+chr(10) \r\n\t\t\tEndIf\r\n\t\t\tcMSG += \"  -> P.Venda:\" + aLSPvLoca[nX][1] +\" Item:\"+ aLSPvLoca[nX][2] +\" Prod.:\" + aLSPvLoca[nX][5] + chr(13)+chr(10)   \r\n\tNext nX\r\n\t\r\n\tIf !Empty(cMSG)\r\n\t\tAlert(cMSG)\r\n\t\t//AVISO(\"Itens encontrados em outro P.Venda:\", cMSG , { \"Fechar\" }, 3)\r\n\t\t//sleep(300)\t\r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\t\r\n\t\tlRet := .F.\r\n\r\n\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\tReturn(lRet)\r\n\t\tEndIf \r\n\tEndIf\r\n\t\r\n\t/*\r\n\t*******************************************\r\n\tValidação Valores fiscais e descontos e totais\r\n\t*******************************************\r\n\t*/\r\n\tIf !IsBlind()     \r\n\t\toProcess:IncRegua1(\"[4-8] - Conferência fiscal, descontos e valores!\")\r\n\tENDIF\r\n\r\n\taDadosGrv := FCalImp(@oProcess)\r\n\t\r\n\tIf LEN(aDadosGrv)>0\r\n\t\tM->C5_XVALEXT := AllTrim(Extenso((aDadosGrv[4] + aDadosGrv[3]) ,.f.,M->C5_MOEDA,,\"3\",.t.,.f.))\r\n\t\tM->C5_XTOTAL  := (aDadosGrv[4] + aDadosGrv[3]) -  M->C5_DESCONT \r\n\t\tM->C5_XDESCON := aDadosGrv[2]  + M->C5_DESCONT \r\n\t\tM->C5_XVLRFIN := (aDadosGrv[4] + aDadosGrv[3]) -  M->C5_DESCONT \r\n\t\tM->C5_XDESPES := aDadosGrv[4]\r\n\t\t//M->C5_XSEGURO := aDadosGrv[5]\r\n\tEndIf \r\n\t\r\n\t\t\r\n\t/*\r\n\t*******************************************\r\n\tValidação do peso para Amostras \r\n\t*******************************************\r\n\t*/\r\n\tIf !IsBlind()  \r\n\t\toProcess:IncRegua1(\"[5-8] - Validação do peso para Amostras!\")\r\n\tEndIf\r\n\r\n\tcMSG := \"\"\r\n\t\r\n\tFor nX := 1 To Len(aCols)\r\n\t\r\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\r\n\t\r\n\t\t\tIf Empty(GdFieldGet(\"C6_XPESO\",nX)) .and. !GDDeleted(nX) .and. SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) == 'AM'\r\n\t\t\t\r\n\t\t\t\tIf Empty(cMSG)\r\n\t\t\t\t\tcMSG := \"Amostras sem Peso:\" + chr(13)+chr(10) \r\n\t\t\t\tEndIf\r\n\t\t\t\tcMSG += \"  -> Item do PV:\" + GdFieldGet(\"C6_ITEM\",nX) + \" Prod.:\" + AllTrim(GdFieldGet(\"C6_DESCRI\",nX)) + chr(13)+chr(10)  \r\n\t\t\t\t\t\t\t\t\r\n\t\t\tEndIf\r\n\t\t\t\r\n\t\t\tIf !GDDeleted(nX) .and. (SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) == 'AM' .Or. AllTrim(GdFieldGet(\"C6_YCLASSI\",nX)) == \"A\")\r\n\t\t\t\tM->C5_BLQ  := '1'\r\n\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"Produto Amostra! Requer aprovação.\" ,nX)\r\n\t\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(\"Produto Amostra! Requer aprovação.\") + chr(13)+chr(10)\r\n\t\t\t\tcMSG := AllTrim(cMSG) + AllTrim(\"Produto Amostra! Requer aprovação.\") + chr(13)+chr(10)\r\n\t\t\tEndIf\r\n\t\t\t\r\n\t\tEndIf\r\n\tNext nX\r\n\t\r\n\tIf M->C5_DESCONT  <> 0\r\n\t\tM->C5_BLQ  := '1'\r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(\"O Campo de desconto de indenização foi preenchido. Ped. Venda requer aprovação.\" + chr(13)+chr(10))\r\n\t\tcMSG := AllTrim(cMSG) + \"O Campo de desconto de indenização foi preenchido. Ped. Venda requer aprovação.\" + chr(13)+chr(10)\r\n\tEndIf\r\n\t\r\n\tIF !EMPTY(cMSG)\r\n\r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\t\r\n\t\tIf !IsBlind()  \r\n\t\t\tIf MsgYesNo(cMSG + chr(13)+chr(10)+ \"Deseja continuar?\" )\r\n\t\t\t\tlRet := .t.\r\n\t\t\tElse\r\n\t\t\t\tlRet := .F.\r\n\t\t\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\t\t\tReturn(lRet)\r\n\t\t\t\tEndIf \r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\r\n\tEndIf\r\n\t\r\n\t/*\r\n\t*******************************************\r\n\tValidação para não permitir salvar o pedido com chapas sem cavaletes \r\n\t*******************************************\r\n\t*/\r\n\tIf !IsBlind()\r\n\t\toProcess:IncRegua1(\"[6-8] - Chapas sem cavaletes!\")\r\n\tEndIf\r\n\r\n\tcMSG := \"\"\r\n\t\r\n\t/*\r\n\tNão validar para filial de SP \r\n\tnão validar para Pedidos de Transferencia\r\n\t*/\r\n\tIF M->C5_YTIPO <> \"TF\" .AND. SubString(CNUMEMP,1,8) == \"01010101\" .and. M->C5_TIPO <> 'B'\r\n\r\n\t\tFor nX := 1 To Len(aCols)\r\n\t\t\r\n\t\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\t\tdbSelectArea(\"SB1\")\r\n\t\t\tdbSetOrder(1)\r\n\t\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )  \r\n\t\t\t\r\n\t\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\r\n\t\t\r\n\t\t\t\tIf Empty(GdFieldGet(\"C6_YCAVALE\",nX)) .and. !GDDeleted(nX) .and. SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) == 'CH'\r\n\t\t\t\t\r\n\t\t\t\t\tIf Empty(cMSG)\r\n\t\t\t\t\t\tcMSG := \"Chapas sem cavaletes:\" + chr(13)+chr(10) \r\n\t\t\t\t\tEndIf\r\n\t\t\t\t\tcMSG += \"  -> Item do PV:\" + GdFieldGet(\"C6_ITEM\",nX) + \" Prod.:\" + AllTrim(GdFieldGet(\"C6_DESCRI\",nX)) + chr(13)+chr(10)  \r\n\t\t\t\t\t\r\n\t\t\t\tEndIf\r\n\t\t\tEndIf\r\n\t\tNext nX\r\n\t\t\r\n\t\tIf !Empty(cMSG)\r\n\t\t\tAlert(cMSG)\r\n\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)  \r\n\t\t\t\r\n\t\t\tlRet := .F.\r\n\r\n\t\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\t\tReturn(lRet)\r\n\t\t\tEndIf \r\n\t\tEndIf\r\n\r\n\tEndIf\r\n\r\n\t/*\r\n\t*******************************************\r\n\tValidação para não permitir salvar o pedido fora dos almoxarificados ou locais determinados \r\n\t*******************************************\r\n\t*/\r\n\tIf !IsBlind()\r\n\t\toProcess:IncRegua1(\"[7-8] - Almoxarifado não permitido !\")\r\n\tENDIF\r\n\r\n\tcMSG := \"\"\r\n\r\n\tFor nX := 1 To Len(aCols)\r\n\t\r\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t\t//\"0005/0006/0034/0035/0036\"\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\t\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\r\n\t\r\n\t\t\tIf !GdFieldGet(\"C6_LOCAL\",nX) $ \"03/05\"  .and. !GDDeleted(nX) .and. SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) $ 'CH/AM'\r\n\t\t\t\r\n\t\t\t\tIf Empty(cMSG)\r\n\t\t\t\t\tcMSG := \"Almoxarifado não permitido ! \" + chr(13)+chr(10) \r\n\t\t\t\tEndIf\r\n\t\t\t\tcMSG += \"  -> Item do PV:\" + GdFieldGet(\"C6_ITEM\",nX) + \" Prod.:\" + AllTrim(GdFieldGet(\"C6_DESCRI\",nX)) + chr(13)+chr(10)  \r\n\t\t\t\t\r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\tNext nX\r\n\t\r\n\tIf !Empty(cMSG)\r\n\t\tAlert(cMSG)\r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\t\r\n\t\tlRet := .F.\r\n\r\n\t\tIF lRet == .F. .and. !IsBlind()  \r\n\t\t\tReturn(lRet)\r\n\t\tEndIf \r\n\tEndIf\r\n\r\n\r\n    /*\r\n\t*******************************************\r\n\tValidação dos dados de condição de pagamento\r\n\t*******************************************\r\n\t*/\r\n\tIf !IsBlind()\r\n\t\toProcess:IncRegua1(\"[8-8] - Validação dos dados de condição de pagamento!\")\r\n\tEndIf\r\n\r\n\tM->C5_CONDPAG := u_ClintToMob(\"PG\")\r\n\r\n\tIf ! M->C5_TIPO $ \"D/B\"\r\n\t\tdbSelectArea(\"SA1\")\r\n\t\tdbSetOrder(1)\r\n\t\tIf dbSeek(xFilial(\"SA1\")+M->C5_CLIENTE+M->C5_LOJACLI)\r\n\t\t\tIf ! AllTrim(M->C5_CONDPAG) $ AllTrim(SA1->A1_XCONDPG)\r\n\r\n\t\t\t\tIf Empty(cMSG)\r\n\t\t\t\t\tcMSG := \"Pedido bloqueado! Condição de pagamento não permitida. Cond. Pag:[\"+ M->C5_CONDPAG +\"].\" + chr(13)+chr(10) \r\n\t\t\t\tEndIf\r\n\r\n\t\t\tEndIf\r\n\t\tEndIf \r\n\r\n\tEndIf\r\n\r\n\tIf !Empty(cMSG)\r\n\t\tAlert(cMSG)\r\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\tM->C5_BLQ     := \"1\"\r\n\tEndIf\r\n\t\r\n\t/*\r\n\tVALIDAÇÃO DO MOBGRAN\r\n\t*/\r\n\tIf  FunName() $ \"GROA014\" .And. INCLUI == .T.\r\n\t\t\r\n\t\tIf !Empty(M->C5_XIDMOB)\r\n\r\n\t\t\t/*\r\n\t\t\tVerifica se existe a chave no mobgran.\r\n\t\t\t*/\r\n\t\t\tcQuery  := \" SELECT * FROM ZSA010 WHERE D_E_L_E_T_ = '' AND ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\"' AND ZSA_STATUS ='ATIVA'\r\n\t\t\t\r\n\t\t\ttcQuery cQuery alias TRB new\r\n\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\tdbgotop()\r\n\t\t\t\r\n\t\t\tIf EOF() \r\n\t\t\t\tlRet := .F.\r\n\t\t\tEndIf\r\n\r\n\t\t\tIf TRB->ZSA_STATUS <> 'ATIVA'\r\n\t\t\t\tlRet := .F.\r\n\t\t\tEndIf\r\n\t\t\t\r\n\t\t\tIf lRet == .F.\r\n\t\t\t\tAlert(\"Chave não encontrada ou Status:(>>\"+ TRB->ZSA_STATUS +\"<<) no MobGran!\")\r\n\t\t\t\tReturn(lRet)\t\r\n\t\t\tEndIf\r\n\r\n\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\tdbCloseArea()\t\r\n\r\n\t\tElse\r\n\t\t\t\r\n\t\t\tlRet := .F.\r\n\t\t\tAlert(\"Chave do MobGran em branco! Favor informar um código.\")\r\n\t\t\tReturn(lRet)\r\n\r\n\t\tEndIf\r\n\r\n\tElseIf FunName() $ \"GROA013\" \r\n\t\tIf AllTrim(M->C5_XIDMOB) == '-'\r\n\t\t\tlRet := .T.\r\n\t\telse\r\n\t\t\tcQuery  := \" SELECT * FROM ZSA010 WHERE D_E_L_E_T_ = '' AND ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\"' AND ZSA_STATUS ='ATIVA'\r\n\t\t\t\r\n\t\t\ttcQuery cQuery alias TRB new\r\n\t\t\tdbSelectArea(\"TRB\")\r\n\t\t\tdbgotop()\r\n\t\t\t\r\n\t\t\tIf EOF() \r\n\t\t\t\tlRet := .F.\r\n\t\t\tEndIf\r\n\r\n\t\t\tIf TRB->ZSA_STATUS <> 'ATIVA'\r\n\t\t\t\tlRet := .F.\r\n\t\t\tEndIf\r\n\r\n\t\t\tIf lRet == .F.\r\n\t\t\t\tAlert(\"Chave não encontrada ou Status:(>>\"+ TRB->ZSA_STATUS +\"<<) no MobGran!\")\r\n\t\t\t\tReturn(lRet)\t\r\n\t\t\tEndIf\t\t\t\r\n\t\t\t\r\n\t\t\tdbSelectArea(\"TRB\") \r\n\t\t\tdbCloseArea()\t\r\n\t\tEndIf\r\n\tEndIf\r\n\r\n\t/*\r\n\tEnvio de aviso de alteração de pedidos \r\n\t*/\r\n\tIF        AllTrim(C5_XSHOWFO) = 'S';\r\n\t\t.AND. AllTrim(C5_XPENDEN) $ 'COM/LOG';\r\n\t\t.AND. AllTrim(C5_XFOLLST) = 'BOOKING SOLICITADO'\r\n\r\n\t\t/*\r\n\t\tEMAIL\r\n\t\t*/\r\n\t\tIf SC5->C5_YTIPO == \"ME\"\r\n\t\t\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\r\n\t\tElse\r\n\t\t\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003_P&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\r\n\t\tEndIf\r\n\t\t\r\n\t\tConOut(\"Gerando relatório! Ped. Venda:\" + AllTrim(SC5->C5_NUM) )\r\n\t\tsleep(300)\r\n\t\tConOut(\"Gerando e-mail! Ped. Venda:\" + AllTrim(SC5->C5_NUM) )\r\n\t\t\r\n\t\tTCSPExec(\"SP_SENDMAIL\",'ITINGA',\"backoffice.es@qualitagroup.com;bruno.lage@grupoqualita.com.br;arlindo.pelissari@grupoqualita.com.br\",'Pedido BOOKING SOLICITADO ! Código:' + SC5->C5_NUM ,'PEDIDO BOOKING SOLICITADO!'+ \"<br>\" +'CÓDIGO:' + SC5->C5_NUM + \"<br>\" ,'D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF')\r\n\t\t//TCSPExec(\"SP_SENDMAIL\",'ITINGA',\"bruno.lage@grupoqualita.com.br\",'Pedido BOOKING SOLICITADO ! Código:' + SC5->C5_NUM ,'PEDIDO BOOKING SOLICITADO!'+ \"<br>\" +'CÓDIGO:' + SC5->C5_NUM + \"<br>\" ,'D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF')\r\n\r\n\t\t//sleep(500)\r\n\r\n\t\t/*\r\n\t\tWHATSAPP\r\n\t\t*/\r\n\t\t/*\r\n\t\tU_SWENARWAP(\"5527981188913\", \"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM),\"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM)   ,\"RQ0003a\"           ,\"PDF\",\"\\RELINWEB\\RQ0003a.PDF\")\r\n\t\tsleep(500)\r\n\t\tU_SWENARWAP(\"5533984022125\", \"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM),\"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM)   ,\"RQ0003a\"           ,\"PDF\",\"\\RELINWEB\\RQ0003a.PDF\")\r\n\t\t*/\r\n\tEnd\r\n\r\n\t/*\r\n\tIntegração liberação Pedido de venda Com o Mobgran por tabela\r\n\tTABELA - ZSC\r\n\t*/\r\n\tIf Empty(M->C5_XMOTBLQ) \r\n\t\t//M->C5_XMOTBLQ := \"06 = Aguardando liberação do vendedor!\" + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\r\n\t\tM->C5_BLQ     := \"\"\r\n\t\tfTPBLQ        := .T.\r\n\tEndIf\r\n\r\n\tif (Empty(M->C5_NOTA) .OR. M->C5_NOTA == 'XXXXXXXXX' )\r\n\t\tIF (!Empty(M->C5_XIDMOB) .Or. M->C5_XIDMOB <> '-') \r\n\t\t\tu_MIntMGLib(M->C5_NUM , M->C5_XIDMOB , \"SC5\" , M->C5_XMOTBLQ , M->C5_FILIAL , M->C5_XTOTAL , fTPBLQ )\r\n\t\tEndIf\r\n\tEndIf\r\n\r\n\tConOut(\"******************************************\" )\r\n\tConOut(\"Final P.E = MT410TOK Qualitá\" )\r\n\tConOut(\"******************************************\" )\r\n\t\r\n\tSetKey(VK_F5,)\r\n\tSetKey(VK_F6,)\r\nEndIf\r\n\r\nIF (lRet == .F. .and. IsBlind()) \r\n\tlRet := .T.\r\nEndIf \r\n\r\nReturn(lRet)\r\n\r\n\r\nUser Function MIntMGLib(cPedido,XIdMobP,_cTabela, xMotBlq, cMobFilial , nXtotal , fTPBLQ)\r\n********************************************************************************************************************\r\n* /* User Integração com MobGran Liberação de pedidos por tabela ZSA ZSC */\r\n* /**/\r\n* //\r\n***\r\n\r\nLocal oJson     := JsonObject():New()\r\nLocal cCliente  := \"\"\r\nLocal cLoja     := \"\"\r\nLocal nValor    := 0\r\nLocal cCondPg   := \"\"\r\nLocal lSemFin   := .F.\r\n\r\n\t\tcQuery := \" SELECT  CAST(ZSC_RJSON AS VARCHAR(8000)) RJSON from \"+ RetSqlName(\"ZSC\")+ \" WHERE ZSC_IDMOBP = '\"+XIdMobP+\"' AND ZSC_TIPO <> 'B' AND ZSC_TIPO = '2' AND ZSC_RJSON IS NOT NULL\"\r\n\t\r\n\t\ttcQuery cQuery alias TRB_JSON new\r\n\t\tdbSelectArea(\"TRB_JSON\")\r\n\t\tdbgotop()\r\n\r\n\t\toJSon:fromJson(TRB_JSON->RJSON)\r\n\t\r\n\t\tcCliente  := iif(empty(oJson:GetJSonObject('cliente')),\"\",oJson:GetJSonObject('cliente'))\r\n\t\tcLoja     := iif(empty(oJson:GetJSonObject('loja'))   ,\"\",oJson:GetJSonObject('loja'))\r\n\r\n\t\tif !Empty(oJson:GetJSonObject('cliente'))\r\n\t\t\tnValor    := round(val(oJson:GetJSonObject('valorTotal')),2) \r\n\t\tElse\r\n\t\t\tnValor    := 0\r\n\t\tEndIf\r\n\r\n\t\tcCondPg   := iif(empty(oJson:GetJSonObject('condicaoPagamento')),\"\",oJson:GetJSonObject('condicaoPagamento'))\r\n\r\n\t\tdbSelectArea(\"TRB_JSON\") \r\n\t\tdbCloseArea()\t\r\n\t\tIf !Empty(oJson:GetJSonObject('cliente'))\r\n\t\t\tIf \tcCliente+cLoja       == m->C5_CLIENTE+m->C5_LOJACLI .And.;\r\n\t\t\t\tAllTrim(Str(nValor)) >= AllTrim(Str(nXTotal))    \t.And.;\r\n\t\t\t\tcCondPg              == m->C5_CONDPAG\r\n\r\n\t\t\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSC\")\r\n\t\t\t\tcQuery += \"    SET ZSC_TIPO = 'B'\r\n\t\t\t\tcQuery += \"  WHERE ZSC_IDMOBP  ='\"+ AllTrim(XIdMobP) +\"'\r\n\t\t\t\tcQuery += \"    AND ZSC_TIPO < '2'\r\n\t\t\t\t\r\n\t\t\t\tlSemFin:= .F.\r\n\t\t\tElse\r\n\t\t\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSC\")\r\n\t\t\t\tcQuery += \"    SET ZSC_TIPO = 'B'\r\n\t\t\t\tcQuery += \"  WHERE ZSC_IDMOBP  ='\"+ AllTrim(XIdMobP) +\"'\r\n\r\n\t\t\t\tlSemFin:= .T.\r\n\t\t\tEndIf \r\n\t\tElse\r\n\t\t\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSC\")\r\n\t\t\t\tcQuery += \"    SET ZSC_TIPO = 'B'\r\n\t\t\t\tcQuery += \"  WHERE ZSC_IDMOBP  ='\"+ AllTrim(XIdMobP) +\"'\r\n\r\n\t\t\t\tlSemFin:= .T.\t\r\n\t\tEndIf\t\r\n\t\t/*\r\n\t\tExecucao background do codigo sql\r\n\t\t*/\r\n\t\tTcSqlExec(cQuery)\r\n\r\n\t\t//regras\r\n\t\tIf fTPBLQ == .F.\r\n\t\t\tIf  RecLock(\"ZSC\",.T.)\r\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\r\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\r\n\t\t\t\t\tReplace ZSC_TIPO   With \"1\"\r\n\t\t\t\t\tReplace ZSC_MSGRET With IIF(fTPBLQ == .F. ,xMotBlq,\"\" )\r\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\r\n\t\t\t\t\tReplace ZSC_SITUAC With IIF(fTPBLQ == .F. ,\"\"    ,\"X\" )\r\n\t\t\t\t\tReplace ZSC_FLUXOM With IIF(fTPBLQ == .F. ,\"S\"    ,\"\" )\r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf \r\n\t\tEndIf\r\n\t\t//financeiro\r\n\t\tIf lSemFin \r\n\t\t\tIf  RecLock(\"ZSC\",.T.)\r\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\r\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\r\n\t\t\t\t\tReplace ZSC_TIPO   With \"2\"\r\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\r\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\r\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf \r\n\t\t\t/*\r\n\t\t\tIf  RecLock(\"ZSC\",.T.)\r\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\r\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\r\n\t\t\t\t\tReplace ZSC_TIPO   With \"3\"\r\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\r\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\r\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf \r\n\r\n\t\t\tIf  RecLock(\"ZSC\",.T.)\r\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\r\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\r\n\t\t\t\t\tReplace ZSC_TIPO   With \"4\"\r\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\r\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\r\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf \r\n\r\n\t\t\tIf  RecLock(\"ZSC\",.T.)\r\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\r\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\r\n\t\t\t\t\tReplace ZSC_TIPO   With \"5\"\r\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\r\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\r\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf \r\n\t\t\t*/\r\n\t\t\t/*\r\n\t\t\tPendencia Vendedor\r\n\t\t\t*/ \r\n\t\t\tIf  RecLock(\"ZSC\",.T.)\r\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\r\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\r\n\t\t\t\t\tReplace ZSC_TIPO   With \"6\"\r\n\t\t\t\t\tReplace ZSC_MSGRET With IIF(fTPBLQ == .t. ,xMotBlq,\"\")\r\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\r\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\r\n\t\t\t\t\tReplace ZSC_FLUXOM With IIF(fTPBLQ == .t. ,\"S\"    ,\"\")\r\n\t\t\t\tMsUnLock()\r\n\t\t\tEndIf \r\n\t\tEndIf\r\n\r\nReturn()\r\n\r\n\r\nUser Function ClintToMob(cTipo)\r\n****************************************************************************************************************\r\n* /*Gatilho C5_XIDMOB*/    \r\n*\r\n****\r\nLocal aArea     := GetArea() \r\nLocal cQuery    := \" SELECT * FROM ZSA010 WHERE D_E_L_E_T_ = '' AND ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\" ' AND ZSA_STATUS ='ATIVA'\r\nLocal cDadosRet := \"\" \r\n\r\ntcQuery cQuery alias TRBidMob new\r\ndbSelectArea(\"TRBidMob\")\r\ndbgotop()\r\n\r\nConOut(\"****PRINCIPAL**ClintToMob*************\")\r\n\r\nIf !EOF()\r\n\tIf cTipo == \"PG\"\r\n\t\tcDadosRet  := AllTrim(TRBidMob->ZSA_CPAG)\r\n\tElse\r\n\t\tcDadosRet  := AllTrim(TRBidMob->ZSA_CLIENT)\r\n\tEndIf\r\nElse\r\n\tcDadosRet := M->C5_CONDPAG\r\nEndIf\r\n\r\ndbSelectArea(\"TRBidMob\") \r\ndbCloseArea()\t\r\n\r\nRestArea(aArea)\r\n\r\nReturn(cDadosRet)\r\n\r\n                                                                       \r\nStatic Function FCalImp(oProcess) \r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\n************************************** \r\n* Calculo totais e Impostos\r\n************************************** \r\nLocal aArea     := GetArea() \r\nLocal nX        := 0 \r\n//Local nPrcTot   := 0\r\nLocal _aTotalNF := {} \r\nLocal nValDesc  := 0\r\nLocal nItem:= 0                             \r\n\r\n//IF FunName() == Alltrim(\"GROA014\")\r\n\r\n\tConOut(\"************************************\")\r\n\tConOut(\"MaFisIni\")                 \r\n\tConOut(\"************************************\")\r\n\t\r\n\t// Inicia rotina de calculo dos impostos \r\n\tMaFisIni(Iif(Empty(M->C5_CLIENT),M->C5_CLIENTE,M->C5_CLIENT),;\t// 1-Codigo Cliente/Fornecedor \r\n\t     \tM->C5_LOJAENT,;          \t\t\t\t\t\t\t\t// 2-Loja do Cliente/Fornecedor \r\n\t     \tIIf(M->C5_TIPO$\"DB\",\"F\",\"C\"),;                    \t\t// 3-C:Cliente , F:Fornecedor \r\n\t     \tM->C5_TIPO,;                    \t\t\t\t\t\t// 4-Tipo da NF \r\n\t     \tM->C5_TIPOCLI,;          \t\t\t\t\t\t\t\t// 5-Tipo do Cliente/Fornecedor \r\n\t     \tNil,; \r\n\t     \tNil,; \r\n\t     \tNil,; \r\n\t     \tNil,; \r\n\t     \t\"GROA014\") \r\n\t\r\n     If (Inclui .Or. Altera) \r\n               nItem:= 0\r\n\t   \r\n\t\t\t   ConOut(\"************************************\")\r\n\t\t\t   ConOut(\"MaFisAdd\")                                  \r\n\t\t\t   ConOut(\"************************************\") \r\n\t\t\t   \r\n\t\t\t   If !IsBlind()\r\n\t\t\t\t\toProcess:SetRegua2(len(aCols))\r\n\t\t\t   ENDIF\r\n\t\t\t   \r\n               For nX := 1 to len(aCols) \r\n                    If !GDDeleted(nX)\t\t\t\t\t\t\t//Validar se o registro nao esta deletado \r\n                         \r\n                         nItem:= nItem + 1 \t\t\t\t\t\t// Quantidade para recalcular \r\n                         \r\n                         // Adiciona dados dos produtos na rotina de calculo de impostos       \r\n                         MaFisAdd( GdFieldGet(\"C6_PRODUTO\",nX),; \r\n                                   GdFieldGet(\"C6_TES\"    ,nX),; \r\n                                   GdFieldGet(\"C6_QTDVEN\" ,nX),; \r\n                                   GdFieldGet(\"C6_PRCVEN\" ,nX),; \r\n                                   0,; //GdFieldGet(\"C6_VALDESC\",nX)\r\n                                   \"\",; \r\n                                   \"\",; \r\n                                   0,; \r\n                                   0,; \r\n                                   0,; \r\n                                   0,; \r\n                                   0,; \r\n                                   GdFieldGet(\"C6_VALOR\",nX),; \r\n                                   0,; \r\n                                   0,; \r\n                                   0)\r\n                               \r\n                         nValDesc := nValDesc + Round(GdFieldGet(\"C6_VALDESC\",nX),2)\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t If !IsBlind()  \r\n                         \toProcess:IncRegua2(\"Cavalete [\"+GdFieldGet(\"C6_YCAVALE\",nX)+\"] Lote-Chapa: \"+AllTrim(GdFieldGet(\"C6_LOTECTL\",nX))+\"-\"+GdFieldGet(\"C6_NUMLOTE\",nX)  )\r\n                         ENDIF\r\n\r\n                         //ConOut(nValDesc)\r\n                         //ConOut(nItem)\r\n                    EndIf \r\n                \r\n               Next nX                \r\n     EndIf \r\n     \r\n     /*\r\n     _nIcmsRet := 0 \r\n     For nLo:=1 To nItem           \r\n          _nIcmsRet += MaFisRet(nLo,\"LF_ICMSRET\") // Retorna valor da ST  \r\n     Next nLo       \r\n     */\r\n\t   \r\n\t aAdd(_aTotalNF,MaFisRet(,\"NF_TOTAL\"))\r\n\t aAdd(_aTotalNF,nValDesc)\r\n\t aAdd(_aTotalNF,MaFisRet(,\"NF_BASEDUP\"))\r\n \t aAdd(_aTotalNF,M->C5_DESPESA)\r\n\t //aAdd(_aTotalNF,MaFisRet(,\"NF_SEGURO\"))  \r\n\t\r\n\t MaFisEnd() \t// Encerra rotina de calculo de impostos \r\n\r\n//EndIf\r\n\r\nRestArea(aArea) \r\n\r\nReturn(_aTotalNF)\r\n\r\n\r\nUser Function GMA410MNU() \r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal aButtons := {}\r\n\r\nIF FunName() == Alltrim(\"GROA014\")\t\r\n\t//Gerando invoice\r\n\taRotina[16][1] := \"Gerar Invoice\"\r\n\taRotina[16][2] := 'Processa({|| u_MNumInv()},,\"Gravando....\")'\r\n\t\r\n\t//\"Imprime Packing List\"\r\n\t//aRotina[20][2] := \"u_RelInWeb('RQ0002','Imprime Packing List [RQ0002]','u_fParAut(2)')\"\r\n\taRotina[17][2][5][2] := \"u_RelInWeb('RQ0002','Imprime Packing List [RQ0002]','u_fParAut(2)')\"\r\n\t\r\n\t//\"Imprime Commercial Invoice\" \r\n\t//aRotina[19][2] := \"u_RelInWeb('RQ0004','Imprime Invoice (CH/AM)[RQ0004]','u_fParAut(4)')\"\r\n\taRotina[17][2][4][2] := \"u_RelInWeb('RQ0004','Imprime Invoice (CH/AM)[RQ0004]','u_fParAut(4)')\"\r\n\t\r\n\t//\"Imprime Proforma Invoice\"\r\n\t//aRotina[18][2] := \"u_RelInWeb('RQ0003','Imprime Proforma Invoice [RQ0003]','u_fParAut(2)')\"\t \r\n\taRotina[17][2][3][2] := \"u_RelInWeb('RQ0003','Imprime Proforma Invoice [RQ0003]','u_fParAut(2)')\"\r\n\t\r\n\t//aRotina[17][2] := \"U_proformaInvoice()\"//#Brittes Alterada chamada da Funcao\r\n\t//\"Imprime Pedido de Venda\"\r\n\taRotina[17][2][1][1] := \"Pre-Nota\" \r\n\taRotina[17][2][1][2] := \"u_MATR730Q()\"\r\n\t\r\n\t//\"Imprime Romaneio\"\r\n\taRotina[17][2][2][1] := \"Imprime Invoice (BLOCOS)\"\r\n\taRotina[17][2][2][2] := \"u_RelInWeb('RQ0004_BLOCK','Imprime Invoice (BLOCOS) [RQ0004_BLOCK]'    ,'u_fParAut(4)')\"\r\n\t//aadd(aRotina,{'Imprime Invoice (BLOCOS)',\"u_RelInWeb('RQ0004_BLOCK','Imprime Invoice (BLOCOS) [RQ0004_BLOCK]'    ,'u_fParAut(4)')\" , 0 , 3,0,NIL})\r\n\t\r\nElseIf FunName() == Alltrim(\"GROA013\")\r\n\r\n\taadd(aRotina,{'Imp. Packing List',\"u_RelInWeb('RQ0002_P','Imprime Packing List [RQ0002_P]'    ,'u_fParAut(2)')\" , 0 , 3,0,NIL})\r\n\taadd(aRotina,{'Imp. Proforma'    ,\"u_RelInWeb('RQ0003_P','Imprime Proforma Invoice [RQ0003_P]','u_fParAut(2)')\" , 0 , 3,0,NIL})\t\r\n\taadd(aRotina,{'Pre-Nota'    \t ,\"u_MATR730Q()\" \t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t, 0 , 3,0,NIL})\t\r\n\t\r\nEndIf\r\n\r\naadd(aRotina,{'Ajustes Gerais {P.Venda}',\"u_AjuGerais()\" , 0 , 3,0,NIL})\r\n\r\naadd(aRotina,{'Aprovação WhatsApp ',\"u_WAppAprov()\" , 0 , 3,0,NIL})\r\n\r\naadd(aRotina,{'Limpar FollowUp' ,\"u_ClearFol()\"  , 0 , 3,0,NIL})\t\r\n\r\nReturn aButtons\r\n\r\nUser Function ClearFol()\r\n****************************************************************************************************************\r\n*    // LIMPA FOLLOWUP PELO PERIODO SOMENTE OVADOS\r\n*\r\n****\r\nLocal cQuery:=\"\"\r\n\r\nPrivate aPerg := {}\r\nPrivate cPerg := \"MLIMPAFOLL\"\r\n\r\nAadd(aPerg,{cPerg,\"Data Incial  ?\"\t\t,\"D\",08,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\r\nAadd(aPerg,{cPerg,\"Data Final   ?\"\t\t,\"D\",08,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\r\n\r\nU_Testasx1(cPerg,aPerg,.T.)\r\n\r\nIf ! Pergunte(cPerg,.T.)\r\n\tReturn()\r\nEndIf\r\n\r\nIf Empty(mv_par01)\r\n\tAlert(\"Data inicial não pode ficar em branco!\")\r\n\tReturn()\r\nEndIf\r\n\r\nIf Empty(mv_par02)\r\n\tAlert(\"Data final não pode ficar em branco!\")\r\n\tReturn()\r\nEndIf\r\n\r\ncQuery :=  \"  UPDATE SC5010\r\ncQuery +=  \"    SET C5_XSHOWFO =\t'N'\r\ncQuery +=  \"  WHERE R_E_C_N_O_ IN(\r\ncQuery +=  \"  \t\t\t\t\t\tSELECT REC FROM (\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\tSELECT\t  R_E_C_N_O_ REC,\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  C5_FILIAL,\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  C5_NUM ,\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  C5_NOTA+'/'+C5_SERIE AS NF,\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  (SELECT F2_EMISSAO FROM SF2010 WHERE D_E_L_E_T_ = '' AND F2_FILIAL = C5_FILIAL AND F2_DOC = C5_NOTA AND F2_SERIE = C5_SERIE AND F2_CLIENTE = C5_CLIENTE AND F2_LOJA = C5_LOJACLI) DATA\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t  FROM SC5010 \r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t WHERE D_E_L_E_T_ = ''\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND C5_XSHOWFO IN('S')\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND C5_TIPO IN ('N')\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND C5_XVLRFIN <> 0\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND RTRIM(LTRIM(C5_XFOLLST)) IN ('OVADO','CARREGADO','FATURADO')\r\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t)TB_TEMP\r\ncQuery +=  \"  \t\t\t\t\t\t WHERE DATA BETWEEN '\"+dToS(mv_par01)+\"' AND '\"+dToS(mv_par02)+\"'\r\ncQuery +=  \"  \t\t\t\t\t\t)\r\n\r\nTcSQLExec(cQuery)\r\n\r\nAlert(\"FollowUp removidos com sucesso!\")\r\n\r\nReturn()\r\n\r\nUser Function WAppAprov()\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal cProt   := \"\"\r\n//Local cProt2  := \"\"\r\nLocal cMotiv  := \"\"\r\nLocal cQuery  := \"SELECT DISTINCT UPPER(RTRIM(LTRIM(C6_XMOTBLQ))) C6_XMOTBLQ FROM SC6010 WHERE D_E_L_E_T_ ='' AND C6_FILIAL+C6_NUM = '\" + SC5->C5_FILIAL + SC5->C5_NUM + \"' AND UPPER(RTRIM(LTRIM(C6_XMOTBLQ))) <> ''\r\n\r\n\r\ntcQuery cQuery alias TRBE new\r\ndbSelectArea(\"TRBE\")\r\ndbgotop()\r\n\r\nDo While !EOF()\r\n\t\r\n\tcMotiv := cMotiv + TRBE->C6_XMOTBLQ + chr(13)+chr(10)\r\n\r\n\tdbSelectArea(\"TRBE\") \r\n\tdbSkip()\r\nEndDo\r\n\r\ndbSelectArea(\"TRBE\") \r\ndbCloseArea()\r\n\r\nIF FunName() == Alltrim(\"GROA014\")\r\n\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\r\nElseIf FunName() == Alltrim(\"GROA013\")\r\n\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003_P&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\r\nEndIf\r\n\r\nsleep(4000)\r\n\r\n/*\r\nLimite de Credito\r\n*/\r\n//WaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0057&CLIENTES='+AllTrim(SC5->C5_CLIENTE)+AllTrim(SC5->C5_LOJACLI)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0057.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\r\n\r\n//Grupo de Faturamento Whatsapp\r\n\r\n/*\r\nTeste\r\n*/\r\n//cProt  := U_SWENARWAP(\"5551997331669\",\"Aprovação da Proforma:\" +AllTrim(SC5->C5_NUM) + chr(13)+chr(10) + \" Motivo:\" + cMotiv + chr(13)+chr(10) + \" Usuário:\" + SUBSTR(CUSUARIO,7,15), \"PROFORMA\"+AllTrim(SC5->C5_NUM),\"RQ0003\",\"PDF\",\"\\RELINWEB\\RQ0003.pdf\")\r\n\r\n/*\r\nOficial\r\n*/\r\ncProt  := U_SWENARWAP(\"5527995295180-1587589430@g.us\",\"Aprovação da Proforma:\" +AllTrim(SC5->C5_NUM) + chr(13)+chr(10) + \" Motivo:\" + cMotiv + chr(13)+chr(10) + \" Usuário:\" + SUBSTR(CUSUARIO,7,15), \"PROFORMA\"+AllTrim(SC5->C5_NUM),\"RQ0003\",\"PDF\",\"\\RELINWEB\\RQ0003.pdf\")\r\n\r\nIF cProt = \"\" .or. cProt = nil \r\n\tAlert(\"ERRO!!! O WhatsApp pode estar passando por alguma instabilidade no momento. Aguarde alguns instantes de tente novamente mais tarde!\")\r\n\tReturn()\r\nEndIf\r\n\r\nIf  RecLock(\"WAM\",.T.) \r\n\r\n\tReplace WAM_FILIAL  With \"\" \r\n\tReplace WAM_DATA    With Date()\r\n\tReplace WAM_HORA    With Time()\r\n\tReplace WAM_ID      With cProt\r\n\tReplace WAM_MSG     With \"Aprovação da Proforma:\" +AllTrim(SC5->C5_NUM) + \"Motivo:\" + cMotiv +  \"Usuário:\" + SUBSTR(CUSUARIO,7,15) + \" Cliente: \" + AllTrim(SC5->C5_XFRFORW) \r\n\t//Replace WAM_TELL    With \"5551997331669\"\r\n\t//Replace WAM_TELL    With \"5533984022125\"\r\n\tReplace WAM_INDEX   With SC5->C5_FILIAL + SC5->C5_NUM\r\n\tReplace WAM_PERG    With \"S\"\r\n\t//Replace WAM_DATAR   With \"\"\r\n\t//Replace WAM_HORAR   With \"\"\r\n\t//Replace WAM_RESPOSV With \"\"\r\n\t\r\n\tIF SubString(CNUMEMP,1,2) == \"05\"\r\n\t\tReplace WAM_EXEC    With 'ITINGA-PV'\r\n\tElse\r\n\t\tReplace WAM_EXEC    With 'QUALITA-PV'\r\n\tEndIf\r\n\t\r\n\r\n   MsUnLock()\r\nEndIf\r\n\t\t\r\nAlert(\"WhatsApp enviado com sucesso! \" + cProt)\r\n\r\nReturn()\r\n\r\n\r\nUser Function WAppResp()\r\n****************************************************************************************************************\r\n*NÃO USADO     \r\n*\r\n**** \r\nLocal cQuery  := \"SELECT TOP 1 * FROM WAM010 WHERE D_E_L_E_T_ = '' AND WAM_INDEX = '\"+SC5->C5_FILIAL + SC5->C5_NUM+\"' ORDER BY R_E_C_N_O_ DESC\"\r\n\t\t\t\t  \r\nLocal aRetMsg := \"\"\r\n\r\ntcQuery cQuery alias TRB new\r\ndbSelectArea(\"TRB\")\r\ndbgotop()\r\n\r\nIf !Empty(TRB->WAM_ID)\r\n\taRetMsg :=\tstrTokArr(U_SWREMGWAP(TRB->WAM_ID), ',' )\r\nEndIf\r\n\r\ndbSelectArea(\"TRB\") \r\ndbCloseArea()\r\n\r\nIf !\"false\" $ aRetMsg[7]\r\n\tIf (\"SIM\" $ Upper(aRetMsg[8])) .OR. ( \"APROVADO\" $ Upper(aRetMsg[8]) )\r\n\t\r\n\t \r\n\t\tRecLock(\"SC5\",.F.)\r\n\t\t\tSC5->C5_BLQ  := ''\r\n\t\tMsUnlock()\t\r\n\t\t/*\r\n\t\tdbSelectArea(\"SC6\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(SC5->C5_FILIAL + SC5->C5_NUM)\r\n\t\tWhile SC6->(!EOF()) .And. SC6->C6_FILIAL + SC6->C6_NUM == SC5->C5_FILIAL + SC5->C5_NUM\r\n\t\t                                      \r\n\t\t      MaLibDoFat(SC6->(RecNo()),SC6->C6_QTDVEN,,,.T.,.T.,.F.,.F.)\r\n\t\t\r\n\t\t   SC6->(dBSkip())\r\n\t\tEndDo\r\n\t\t*/\r\n\tEndIf\r\nElse \r\n\tAlert(\"Pedido ainda não liberado!\")\r\nEndIf\r\n\r\nReturn() \r\n\r\nUser Function AjuGerais()\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nPrivate aPerg := {}\r\nPrivate cPerg := \"AJUSGERAIS\"\r\nPrivate nOpc  := 0\r\n\r\nnOpc := Aviso(\"Atenção\",\"Estes ajustes devem ser usados somente em casos especiais! Pedido: [\"+SC5->C5_NUM+\"] .\" ,{\"Confirma\",\"Abandona\"})\t\r\n\r\nIf nOpc == 2\r\n\tReturn()\r\nEndIf\r\n                  \r\nAadd(aPerg,{cPerg,\"Alterar o peso líquido:\",\"N\",12,04,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\r\nAadd(aPerg,{cPerg,\"Alterar o peso bruto :\" ,\"N\",12,04,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\r\n\r\nAadd(aPerg,{cPerg,\"Alterar qtd volume 1:\"  ,\"N\",03,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})     \r\nAadd(aPerg,{cPerg,\"Alterar qtd Box:\"       ,\"N\",03,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\r\n\r\nU_Testasx1(cPerg,aPerg,.t.) \r\n\r\nIf ! Pergunte(cPerg,.T.)\r\n\tReturn()\r\nEndIf\r\n\r\nRecLock(\"SC5\",.F.)\r\n\tSC5->C5_PESOL    := mv_par01\r\n\tSC5->C5_PBRUTO   := mv_par02\r\n\tSC5->C5_VOLUME1  := mv_par03\r\n\tSC5->C5_VOLUME2  := mv_par04\r\nMsUnlock()\t\r\n\r\nAviso(\"Atualização:\",\"Pedido: [\"+SC5->C5_NUM+\"] atualizado com sucesso!\" ,{\"Ok\"})\r\n\r\nReturn()\r\n\r\n\r\nUser Function MNumInv()\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal cNumInvo := GetMv(\"MV_XNUMINV\")\r\nLocal cQuery   := \"\"\r\n\r\nIF EMPTY(SC5->C5_YINVOIC)\r\n\t\r\n\tProcRegua(3) \r\n\t\r\n\tPutMv(\"MV_XNUMINV\",Soma1(cNumInvo))\r\n\t\r\n\tIncProc(\"Criando Invoice:\" + cNumInvo) \r\n\tSleep( 1000 ) \r\n\t\r\n\tIncProc(\"Salvando...\" + cNumInvo)\r\n\tSleep( 1000 ) \r\n\t\r\n\tIncProc(\"Liberando....\" + cNumInvo)\r\n\tSC5->(reclock(\"SC5\", .F.))\r\n\tSC5->C5_YINVOIC := cNumInvo\t\t\t\t\t\t\t\t\t\r\n\tSC5->(msUnLock())\r\n\tSleep( 1000 )\r\n\t\r\n\tAVISO(\"Invoice\", \"Invoice gerada com sucesso! Número=\" + cNumInvo  , { \"Fechar\" }, 1)\r\n\t\r\n\t//U_GROA014A()\r\n\t//AxInclui(\"SZO\")\r\n\t\r\n\tdbSelectArea(\"ZGO\")\r\n\tdbSetOrder(1)\r\n\tIf dbSeek(xFilial(\"ZGO\") + SC5->C5_NUM + SC5->C5_CLIENTE + SC5->C5_LOJACLI)\r\n\t\tZGO->(reclock(\"ZGO\", .F.))\r\n\t\tZGO->ZGO_INVOIC := cNumInvo\t\t\t\t\t\t\t\t\t\r\n\t\tZGO->(msUnLock())\r\n\t\t//U_GROA014A()\r\n\tElse\r\n\t\tZGO->(reclock(\"ZGO\", .T.))\r\n\t\tZGO->ZGO_FILIAL := xFilial(\"ZGO\")\r\n\t\tZGO->ZGO_INVOIC := cNumInvo\t\r\n\t\tZGO->ZGO_PEDIDO := SC5->C5_NUM\r\n\t\tZGO->ZGO_CLIENT := SC5->C5_CLIENTE\r\n\t\tZGO->ZGO_LOJA\t:= SC5->C5_LOJACLI\t\t\t\t\t\t\r\n\t\tZGO->(msUnLock())\r\n\tEndIf\r\n\t\r\n\tcQuery := \"SELECT CAST(M2_DATA AS DATE) DATA, MAX(M2_MOEDA2) 'DOLAR' , MAX(M2_MOEDA3) 'EURO'\r\n\tcQuery += \"  FROM SM2010\r\n\tcQuery += \"  WHERE D_E_L_E_T_ = ''\r\n\tcQuery += \"    AND M2_DATA  = '\"+DToS(dDataBase)+\"'\r\n\tcQuery += \"   GROUP BY M2_DATA\r\n\t\r\n\tTcQuery cQuery Alias TMP_MOEDA New\r\n\tdbSelectArea(\"TMP_MOEDA\")\r\n\t\r\n\tSC5->(reclock(\"SC5\", .F.))\r\n\tSC5->C5_MENNOTA := AllTrim(SC5->C5_MENNOTA) + \" //INVOICE:\" + SC5->C5_YINVOIC + \"-\" + LEFT(DToS(dDataBase),4) +  \"  TAXA DO DOLAR R$:\" + AllTrim(STR(TMP_MOEDA->DOLAR)) + \" CNTR:\" + AllTrim(SC5->C5_XCONTAI) \r\n\tSC5->(msUnLock())\r\n\t\r\n\tdbSelectArea(\"TMP_MOEDA\")\r\n\tdbCloseArea()            \r\nElse \r\n\r\n\tAVISO(\"Invoice\", \"Já existe invoice para esse pedido! Número=\" + SC5->C5_YINVOIC  , { \"Fechar\" }, 1)\r\n\r\nEndIf\t\r\n\r\nReturn()\r\n\r\n\r\nUser Function fParAut(nTipo)\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal cRet := \"\"\r\n\r\nIf nTipo = 2\r\n\tcRet :=  \"&FILIAL=\" + AllTrim(SC5->C5_FILIAL) +\"&NUMPED=\" + AllTrim(SC5->C5_NUM) \r\nElse\r\n\tdbSelectArea(\"ZGO\")\r\n\tdbSetorder(1)\r\n\tIf dbSeek(xFilial(\"ZGO\")+AllTrim(SC5->C5_NUM))\r\n\t\tcRet := \"&FILIAL=\" + AllTrim(ZGO->ZGO_FILIAL) +\"&INVOICE=\" + AllTrim(ZGO->ZGO_INVOIC)\r\n\tElse\r\n\t\tAlert(\"Pedido de venda sem Invoice!\")\r\n\tEndIf\r\nEndIf\r\n\r\nReturn(cRet)\r\n\r\n\r\nUser Function GA410CONS() \r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal aButtons := {}\r\n\r\nSetKey(VK_F5,{||u_MCONSUTDET()})\r\nSetKey(VK_F6,{||u_GERAMSGPAD()})\r\n\r\naAdd(aButtons, {\"\", {|| u_MCONSUTDET()}, \"[F5] Consulta GrPlus\", \"[F5] Consulta GrPlus\"})\r\naAdd(aButtons, {\"\", {|| u_GERAMSGPAD()}, \"[F6] Gera Msg Padrão\", \"[F6] Gera Msg Padrão\"})\r\n\r\nReturn aButtons\r\n\r\nUser Function GERAMSGPAD()\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal cQuery   := \"\"         \r\n//Local aPeso    := {}\r\n//Local nResult  := 0     \r\n//Local cBoleto  := \"\"\r\nLocal cMsgNota := \"\"    \r\n//Local cMsgNota2:= \"\"                         \r\nLocal cNotas   := \"\"\r\nLocal aGriCavDW:= {}\r\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\r\nLocal cInCavDw := \"\"\r\nLocal nX       := 0\r\n\r\n/*\r\nMensagem foi retirada de uso conforme chamado numero 1109\r\nControle de drawback em tempo Real.\r\n*/\r\nIF TYPE(\"aCols\") == \"A\"\r\n\tFor nX := 1 To Len(aCols)\r\n\t\tdbSelectArea(\"SB1\")\r\n\t\tdbSetOrder(1)\r\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec \r\n\t\t\tIf !GDDeleted(nX) .and. LEFT(GdFieldGet(\"C6_LOTECTL\",nX),2)=='DW'\r\n\t\t\t\tIf Empty(aScan(aGriCavDW,GdFieldGet(\"C6_LOTECTL\",nX)) )\r\n\t\t\t\t\taAdd(aGriCavDW , GdFieldGet(\"C6_LOTECTL\",nX)  )\r\n\t\t\t\tEndIf\r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\tNext nX\r\n\tIf !Empty(aGriCavDW)\r\n\t\tFor nX := 1 To Len(aGriCavDW)\t\t\r\n\t\t\taGriCavDW[nX] := LEFT(AllTrim(aGriCavDW[nX]),8)\r\n\t\t\tcInCavDw := cInCavDw +  \"'\"+AllTrim(aGriCavDW[nX])+\"',\"\r\n\t\tNext nX\r\n\t\tcInCavDw := Left(cInCavDw,Len(cInCavDw)-1)\r\n\tEndIf\r\n\t\r\n\r\n\tIf !Empty(cInCavDw)\r\n\t\t\r\n\t\tcQuery := \" SELECT DISTINCT DOC ,\r\n\t\tcQuery += \" \t\t\t\tEMISSAO\r\n\t\tcQuery += \"   FROM(\r\n \t\tcQuery += \" \t SELECT\r\n \t\tcQuery += \" \t\t\tLOTE,\r\n\t\tcQuery += \" \t\t\tIIF(EMISSAO<>'',EMISSAO,ISNULL((SELECT TOP 1 D1_EMISSAO FROM SD1010 WHERE D_E_L_E_T_ = '' AND D1_LOTECTL = LEFT(LOTE, LEN(RTRIM(LTRIM(LOTE)))-1) AND LEFT(D1_COD,2) = 'BL'),'')) EMISSAO,\r\n \t\tcQuery += \" \t\t\tIIF(DOC<>'',DOC,ISNULL((SELECT TOP 1 D1_DOC FROM SD1010 WHERE D_E_L_E_T_ = '' AND D1_LOTECTL = LEFT(LOTE, LEN(RTRIM(LTRIM(LOTE)))-1) AND LEFT(D1_COD,2) = 'BL'),'')) DOC\r\n \t\tcQuery += \" \t   FROM (\r\n \t\tcQuery += \" \t\t\tSELECT\tLOTE,\r\n \t\tcQuery += \" \t\t\t\t\tIIF(FORNECE<>'000011','', DOC) DOC,\r\n \t\tcQuery += \" \t\t\t\t\tEMISSAO,\r\n\t\tcQuery += \" \t\t\t\t\tD1_SERIE,\r\n \t\tcQuery += \" \t\t\t\t\tFORNECE\r\n \t\tcQuery += \" \t\t\t\t\tFROM (\t\r\n \t\tcQuery += \" \t\t\t\t\t\t\tSELECT DISTINCT D1_LOTECTL LOTE, \t\t\t\t\r\n \t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_DOC DOC,\r\n\t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_EMISSAO EMISSAO, \r\n \t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_SERIE,\r\n \t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_FORNECE  FORNECE\r\n \t\tcQuery += \" \t\t\t\t\t\t\tFROM SD1010 \r\n \t\tcQuery += \" \t\t\t\t\t\t\tWHERE D_E_L_E_T_ = '' \r\n \t\tcQuery += \" \t\t\t\t\t\t\tAND D1_LOTECTL IN (\"+cInCavDw+\")\r\n \t\tcQuery += \" \t\t\t\t\t\t )TB_TEMP\r\n \t\tcQuery += \" \t\t  )TAB_TEMP\r\n \t\tcQuery += \" \t)TAB_TEMP_FIM\r\n \t\tcQuery += \" WHERE DOC <> ''\r\n\t\t\r\n\t\tTcQuery cQuery Alias TMP_NOTA New\r\n\t\tdbSelectArea(\"TMP_NOTA\")\r\n\t\t\r\n\t\tDo While !EOF()\r\n\t\t\r\n\t\t\tcNotas := cNotas + AllTrim(TMP_NOTA->DOC) + \"-\" + dtoc(STOd(TMP_NOTA->EMISSAO))+ \" ,\"  \r\n\t\t\r\n\t\t\tdbSelectArea(\"TMP_NOTA\")\r\n\t\t\tdbSkip()\r\n\t\tEndDo\r\n\t\t\r\n\t\tdbSelectArea(\"TMP_NOTA\")\r\n\t\tdbCloseArea()\r\n\t\r\n\t\t//cMsgNota += \"ESTA NOTA FISCAL CONTEM INSUMOS IMPORTADOS ADQUIRIDOS DE ITINGA MINERACAO LTDA. PELA NF:\"+cNOtas+\" AMPARADO PELO REGIME DRAWBACK INTEGRADO - MODALIDADE SUSPENSAO, TIPO INTERMEDIARIO ATO CONCESSÓRIO Nº 20190019344 DE 08/05/2019.///\"   \r\n\tEndIf\r\n\t\r\n\tcQuery := \"SELECT CAST(M2_DATA AS DATE) DATA, MAX(M2_MOEDA2) 'DOLAR' , MAX(M2_MOEDA3) 'EURO'\r\n\tcQuery += \"  FROM SM2010\r\n\tcQuery += \"  WHERE D_E_L_E_T_ = ''\r\n\tcQuery += \"    AND M2_DATA  = '\"+DToS(dDataBase)+\"'\r\n\tcQuery += \"  GROUP BY M2_DATA \r\n\t\r\n\tTcQuery cQuery Alias TMP_MOEDA New\r\n\tdbSelectArea(\"TMP_MOEDA\")\r\n\t\r\n\tcMsgNota += \"INVOICE:\" + AllTrim(M->C5_YINVOIC) + \"-\" + LEFT(DToS(dDataBase),4) +  \"  TAXA DO DOLAR R$:\" + AllTrim(STR(TMP_MOEDA->DOLAR)) + \" CNTR:\" + AllTrim(M->C5_XCONTAI) + \" LACRE:\" + AllTrim(M->C5_XSEAL)\r\n\t\t        \r\n\tdbSelectArea(\"TMP_MOEDA\")\r\n\tdbCloseArea()                       \r\n\t\r\n\tIf !Empty(m->C5_MENNOTA)\r\n\t\tIf MsgYesNo(\"O campo [C5_MENNOTA], já possui informção. Deseja subistituir a mensagem original?\" )\r\n\t\t\tm->C5_MENNOTA := memoline(AllTrim(cMsgNota),254,1,,.T.)\r\n\t\t\tm->C5_MSG2    := memoline(AllTrim(cMsgNota),254,2,,.T.)\r\n\t\tEndIf\t\t\r\n\tElse\r\n\t\tm->C5_MENNOTA := memoline(AllTrim(cMsgNota),254,1,,.T.)\r\n\t\tm->C5_MSG2    := memoline(AllTrim(cMsgNota),254,2,,.T.)\r\n\tEndIf\r\n\t\r\nElse\r\n\r\n\tSetKey(VK_F5,)\r\n\tSetKey(VK_F6,)\r\n\r\nEndIf\r\n\r\nReturn\r\n\r\nStatic Function MAltVlrAut(cNumItem,cNumChapa) \r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal nEdit1\t := 0\r\nLocal oEdit1\r\n\r\nLocal nEdit2\t := 0\r\nLocal oEdit2\r\n\r\nLocal nEdit3\t := SA1->A1_INFDESC\r\nLocal oEdit3\r\n\r\n//Local nEdit4\t := 0\r\n//Local oEdit4\r\n\r\nLocal lNExec     := .F.\r\nLocal lNDele     := .F.\r\n\r\nLocal nX         := 0\r\n\r\n// Variaveis Private da Funcao\r\nPrivate _oDlgVlr\t\t\t\t// Dialog Principal\r\n\r\n// Variaveis que definem a Acao do Formulario                    \r\nDEFINE MSDIALOG _oDlgVlr TITLE \" ITEM \" + cNumItem   FROM u_MGETTELA(223),u_MGETTELA(173) TO u_MGETTELA(359),u_MGETTELA(520) PIXEL\r\n\r\n\t// Cria as Groups do Sistema\r\n\t@ u_MGETTELA(003),u_MGETTELA(005) TO u_MGETTELA(044),u_MGETTELA(168) LABEL \"\" PIXEL OF _oDlgVlr\r\n\r\n\t// Cria Componentes Padroes do Sistema\r\n\t@ u_MGETTELA(010),u_MGETTELA(008) Say \"Valor Negociado:\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t@ u_MGETTELA(010),u_MGETTELA(050) MsGet oEdit1 Var nEdit1            Size u_MGETTELA(35)  ,u_MGETTELA(009) picture(\"@E 9,999,999.99999\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t\r\n\t@ u_MGETTELA(010),u_MGETTELA(085) Say \"Desconto padrão: {%}\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t@ u_MGETTELA(010),u_MGETTELA(130) MsGet oEdit3 Var nEdit3            Size u_MGETTELA(35) ,u_MGETTELA(009) when(.f.) picture(\"@E 99.99\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t\r\n\t@ u_MGETTELA(028),u_MGETTELA(008) Say \"Novo desconto: {%}\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t@ u_MGETTELA(028),u_MGETTELA(050) MsGet oEdit2 Var nEdit2            Size u_MGETTELA(35) ,u_MGETTELA(009) picture(\"@E 99.99999\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t\r\n\t//@ u_MGETTELA(028),u_MGETTELA(085) Say \"Desconto: {Vlr}\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t//@ u_MGETTELA(028),u_MGETTELA(130) MsGet oEdit4 Var nEdit4            Size u_MGETTELA(35) ,u_MGETTELA(009) picture(\"@E 9999.99\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\t\r\n\t@ u_MGETTELA(047),u_MGETTELA(131) Button \"Ok\" \t\tSize u_MGETTELA(037),u_MGETTELA(012)  ACTION( lNExec := .T. , Close(_oDlgVlr))  PIXEL OF _oDlgVlr\r\n\t//@ u_MGETTELA(047),u_MGETTELA(085) Button \"Deletar\" \tSize u_MGETTELA(037),u_MGETTELA(012)  ACTION( lNDele := .T. , Close(_oDlgVlr))  PIXEL OF _oDlgVlr\r\n\t//@ u_MGETTELA(050),u_MGETTELA(007) Say \"O valor irá subistituir todas as chapas do cavalete! \"  Size u_MGETTELA(113),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\r\n\r\nACTIVATE MSDIALOG _oDlgVlr CENTERED\r\n\r\n\r\nIf lNDele\r\n\tFor nX := 1 To Len(aCols)\r\n\t\tIf AllTrim(GdFieldGet(\"C6_YCAVALE\",nX)) == AllTrim(cNumCav)\t\t\t\r\n\t\t\t aCols[nX][Len(aHeader)+1] := .T.\r\n\t\tEndIf\r\n\tNext nX\r\nEndIf\r\n\r\nIf lNExec\r\n\t\r\n\tIf !Empty(nEdit1) .Or. !Empty(nEdit2)\r\n\t\tFor nX := 1 To Len(aCols)\r\n\t\t\r\n\t\t\tIf !Empty(nEdit1)\r\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\r\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_PRUNIT\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX) //C6_PRUNIT 23/09/2019\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\r\n\t\t\t\tEndIf\r\n\t\t\tElse\r\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\r\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\r\n\t\t\t\t\t\t//GdFieldPut(\"C6_PRUNIT\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX) //C6_PRUNIT 23/09/2019\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\r\n\t\t\t\tEndIf\r\n\t\t\tEndIf\r\n\t\tNext nX\r\n\tEndIf\r\n\t\r\n\t/*\r\n\tIf !Empty(nEdit1) .Or. !Empty(nEdit2) .Or. !Empty(nEdit4)\r\n\t\tFor nX := 1 To Len(aCols)\r\n\t\t\tIf Empty(nEdit4 )\r\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\r\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_PRUNIT\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX) //C6_PRUNIT 23/09/2019\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\r\n\t\t\t\tEndIf\r\n\t\t\tElse \r\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//nEdit4 := round(nEdit4 / cNumChapa,2)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tnEdit2 := (nEdit4*100)/GdFieldGet(\"C6_VALOR\",nX)  \r\n\t\t\t\t\r\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\r\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\r\n\t\t\t\tEndIf\r\n\t\t\tEndIf\r\n\t\tNext nX\r\n\tElse\r\n\t\tIf !Empty(nEdit3)\r\n\t\t\t\r\n\t\t\t//For nX := 1 To Len(aCols)\r\n\t\t\t//\tIf AllTrim(GdFieldGet(\"C6_YCAVALE\",nX)) == AllTrim(cNumCav)\t\t\t\r\n\t\t\t//\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit3,nX)\r\n\t\t\t//\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCREF\",nX) ,nEdit1) * nEdit3) /100,2),nX)\r\n\t\t\t//\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,GdFieldGet(\"C6_PRCREF\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCREF\",nX) ,nEdit1) * nEdit2) /100   ,nX)\r\n\t\t\t//\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\r\n\t\t\t//\tEndIf\r\n\t\t\t//Next nX\r\n\t\t\t\r\n\t\tEndIf\r\n\tEndIf\r\n\t*/\r\n\t \r\nEndIf\r\n\r\n\r\nReturn \r\n\r\n\r\nUser Function MCONSUTDET()\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\n// Variaveis Locais da Função\r\nLocal cEdit1\t := Space(100)\r\nLocal cEdit2\t := Space(100)\r\nLocal cEdit3\t := Space(100)\r\nLocal oEdit1\r\nLocal oEdit2\r\nLocal oEdit3\r\n\r\nLocal nX         := 0\r\n\r\n// Variaveis Private da Funcão\r\nPrivate _oDlg\t  // Dialog Principal\r\n\r\n// Variaveis que definem a Acao do Formulario\r\nPrivate VISUAL := .F.                        \r\nPrivate INCLUI := .F.                        \r\nPrivate ALTERA := .F.                        \r\nPrivate DELETA := .F.        \r\n\r\n// Privates das ListBoxes\r\nPrivate aListBox1 := {}\r\nPrivate oListBox1\r\nPrivate aFlist   := {}\r\n\r\n/*\r\nInicializando Variaveis \r\n*/\r\n\r\niF TYPE(\"aCols\") == \"A\"\r\n\r\n\tIF !(M-> C5_TIPO $ \"D,B\")   //Se for nota de devolucao\r\n\t\tcEdit1  := Posicione(\"SA1\",1,XFilial(\"SA1\")+M->C5_CLIENTE+M->C5_LOJACLI,\"A1_NOME\")                   // Retorna o nome do Cliente\r\n\tELSE\r\n\t\tcEdit1  := POSICIONE(\"SA2\",1,XFILIAL(\"SA2\")+M->C5_CLIENTE+M->C5_LOJACLI,\"A2_NOME\")\t\t\t\t\t // Retorna o nome do Fornecedor      \r\n\tENDIF\r\n\tcEdit2 := Posicione(\"SE4\",1,XFilial(\"SE4\")+M->C5_CONDPAG,\"E4_DESCRI\") \r\n\tcEdit3 := Posicione(\"SA3\",1,XFilial(\"SA3\")+M->C5_VEND1,\"A3_NOME\") \r\n\t\r\n\tDEFINE MSDIALOG _oDlg TITLE \"CONSULTA DETALHADA GRPLUS\" FROM u_MGETTELA(333),u_MGETTELA(275) TO u_MGETTELA(734),u_MGETTELA(795) PIXEL\r\n\t\r\n\t// Cria Componentes Padroes do Sistema\r\n\t@ u_MGETTELA(006),u_MGETTELA(005) Say \"NOME DO CLIENTE:\" Size u_MGETTELA(042),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlg\r\n\t@ u_MGETTELA(006),u_MGETTELA(052) MsGet oEdit1 Var cEdit1 when(.f.) Size u_MGETTELA(200),u_MGETTELA(009) COLOR CLR_BLACK PIXEL OF _oDlg\r\n\t@ u_MGETTELA(021),u_MGETTELA(006) Say \"COND. PAGAMENTO:\" Size u_MGETTELA(046),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlg\r\n\t@ u_MGETTELA(021),u_MGETTELA(052) MsGet oEdit2 Var cEdit2 when(.f.) Size u_MGETTELA(057),u_MGETTELA(009) COLOR CLR_BLACK PIXEL OF _oDlg\r\n\t@ u_MGETTELA(021),u_MGETTELA(114) Say \"NOME VENDEDOR:\" Size u_MGETTELA(055),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlg\r\n\t@ u_MGETTELA(021),u_MGETTELA(165) MsGet oEdit3 Var cEdit3 when(.f.) Size u_MGETTELA(087),u_MGETTELA(009) COLOR CLR_BLACK PIXEL OF _oDlg\r\n\t@ u_MGETTELA(180),u_MGETTELA(215) Button \"OK\"  Size u_MGETTELA(037),u_MGETTELA(012) ACTION(Close(_oDlg)) PIXEL OF _oDlg\r\n\t\r\n\t@ u_MGETTELA(035),u_MGETTELA(006) ListBox oListBox1 Fields ;\r\n\t\tHEADER \"ITEM\",\"CAVALETE\",\"P.LIQUIDO\",\"P.BRUTO\",\"QTD CHAPAS\",\"QTD RECORTE/AMOSTRAS\";\r\n\t\tSize u_MGETTELA(247),u_MGETTELA(140) Of _oDlg Pixel;\r\n\t\tColSizes 05,80,50,50,50,20\r\n\r\n\t\toListBox1:bLDblClick := {||  iif(fLibFunc(aFlist[oListBox1:nAT,01])==.t., MAltVlrAut(aFlist[oListBox1:nAT,01],aFlist[oListBox1:nAT,04]) , Alert(\"Produto oferta não pode ser alterado!\") )  }\r\n\r\n\t// Chamadas das ListBox do Sistema\r\n\tfListBox1()\r\n\t\r\n\tFor nX := 1 To Len(aFlist)\r\n\t\tIf AllTrim(aFlist[nX][1]) == AllTrim(GdFieldGet(\"C6_ITEM\",n))\r\n\t\t\t//oListBox1:Select(nX)\r\n\t\t\t//oListBox1:bLine := { || aFlist[ oListBox1:nX ] }\r\n\t\t\toListBox1:nAt := Nx\r\n\t\tEndIf\r\n\tNext Nx\r\n\t\r\n\tACTIVATE MSDIALOG _oDlg CENTERED \r\n\r\nElse\r\n\r\n\t//Alert(\"ok\")\r\n\tSetKey(VK_F5,)\r\n\tSetKey(VK_F6,)\r\nEndIf\r\n\r\nReturn(.T.)\r\n\r\nStatic Function fLibFunc(cNumItem)\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\nLocal nX   := 0\r\nLocal lRet := .T.\r\n\r\nFor nX := 1 To Len(aCols)\r\n\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\r\n\t\tIF GdFieldGet(\"C6_XOFERTA\",nX) == \"S\"\t\r\n\t\t\tlRet := .F.\r\n\t\tEndIf\r\n\tEndIf\r\nNext nX\r\n\r\nReturn(lRet)\r\n\r\nStatic Function fListBox1()\r\n****************************************************************************************************************\r\n*    \r\n*\r\n****\r\n//Local nPos   := 0\r\nLocal nTotBr   := 0\r\nLocal nTotLQ   := 0\r\nLocal nTotCh   := 0\r\n//Local nTotDF := 0\r\nLocal nTotAM   := 0\r\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\r\nLocal nx       := 0\r\n\r\noListBox1:SetArray(aFlist)\r\n\r\n/*\r\nPreenche o dados de peso bruto e peso liquido por cavaletes\r\n e quantidade de chapas\r\n*/\r\nFor nX := 1 To Len(aCols)\r\n\r\n\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \r\n\t//\"0005/0006/0034/0035/0036\"\r\n\tdbSelectArea(\"SB1\")\r\n\tdbSetOrder(1)\r\n\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\r\n\t\r\n\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\r\n\t\tIf !GDDeleted(nX) \r\n\t\t\t/*\r\n\t\t\tIf !aScan(aFlist,{|x|alltrim(x[1]) == GdFieldGet(\"C6_YCAVALE\",nX)  })\t\t\r\n\t\t\t\tAadd(aFlist,{GdFieldGet(\"C6_YCAVALE\",nX) ,;\r\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOLQ\"))    ,;\r\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOBR\"))  ,;\r\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0, fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YQTDBD\") ),;\r\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_QTDVEN\",nX),0 )  })\r\n\t\t\tElse\r\n\t\t\t\tnPos := aScan(aFlist,{|x|alltrim(x[1])==GdFieldGet(\"C6_YCAVALE\",nX) })\r\n\t\t\t \taFlist[nPos][2] := aFlist[nPos][2] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOLQ\"))\r\n\t\t\t \taFlist[nPos][3] := aFlist[nPos][3] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX),fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOBR\"))\r\n\t\t\t \taFlist[nPos][4] := aFlist[nPos][4] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0, fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YQTDBD\") )\r\n\t\t\t \taFlist[nPos][5] := aFlist[nPos][5] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_QTDVEN\",nX), IIF(AllTrim(GdFieldGet(\"C6_YCLASSI\",nX))==\"A\" .AND. Empty(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))),1,0 )) //\r\n\t\t\tEndIf\r\n\t\t\t*/\r\n\t\t\t\r\n\t\t\tAadd(aFlist,{GdFieldGet(\"C6_ITEM\",nX) ,;\r\n\t\t\t\t\t\t GdFieldGet(\"C6_YCAVALE\",nX) ,; \r\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),GdFieldGet(\"C6_PRODUTO\",nX),GdFieldGet(\"C6_LOCAL\",nX),\"B8_YPESOLQ\"))    ,;\r\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),GdFieldGet(\"C6_PRODUTO\",nX),GdFieldGet(\"C6_LOCAL\",nX),\"B8_YPESOBR\"))  ,;\r\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0, fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),GdFieldGet(\"C6_PRODUTO\",nX),GdFieldGet(\"C6_LOCAL\",nX),\"B8_YQTDBD\") ),;\r\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_QTDVEN\",nX),0 )  })\r\n\t\t\t\r\n\t\tEndIf\r\n\tElse \r\n\t\r\n\t//IIF(AllTrim(GdFieldGet(\"C6_YCLASSI\",nX))==\"A\" .AND. Empyt(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))),1,0)\r\n\t\r\n\tAadd(aFlist,{     \"-\",;\r\n\t\t\t\t\t  \"-\",;\r\n\t\t\t\t \t   0 ,;\r\n\t\t\t\t       0 ,;\r\n\t\t\t\t       0 ,;\r\n\t\t\t\t       0  })\r\n\t\r\n\tEndIf\r\nNext Nx\r\n\r\nIf Len(aFlist)>0\r\n\tFor nX := 1 To Len(aFlist)\r\n\t\tIf Alltrim(aFlist[nX][2]) = \"\"\r\n\t\t\taFlist[nX][2] := \"RECORTES\" \r\n\t\tEndIf\r\n\tNext Nx\r\n\t\r\n\tFor nX := 1 To Len(aFlist)\r\n\t\tnTotLQ := nTotLQ + aFlist[nX][3]\r\n\t\tnTotBr := nTotBr + aFlist[nX][4]\r\n\t\tnTotCh := nTotCh + aFlist[nX][5]\r\n\t\tnTotAM := nTotAM + aFlist[nX][6]\r\n\tNext Nx\r\n\t\r\n\tAadd(aFlist,{\"---------\",\"--------------------------------------------\",\"----------------------------------\",\"----------------------------------\",\"----------------------------------\",\"------------------------------------------\"})\r\n\tAadd(aFlist,{\"(=)\",\"  Total:\",nTotLQ,nTotBr,nTotCh,nTotAM})\r\n\tAadd(aFlist,{\"(=)\",\"  Weigth Limit: \"+ AllTrim(Str(M->C5_XWLIMIT)),M->C5_XWLIMIT - nTotLQ  ,M->C5_XWLIMIT - nTotBr,\"\",\"\"})\r\nEndIf\r\n\r\noListBox1:bLine := {|| {;\r\n\t\t\t\t\taFlist[oListBox1:nAT,01],;\r\n\t\t\t\t\taFlist[oListBox1:nAT,02],;\r\n\t\t\t\t\taFlist[oListBox1:nAT,03],;\r\n\t\t\t\t\taFlist[oListBox1:nAT,04],;\r\n\t\t\t\t\taFlist[oListBox1:nAT,05],;\r\n\t\t\t\t\taFlist[oListBox1:nAT,06]}}\r\n\t\r\nReturn        \r\n           \r\n\r\nStatic Function fPqLotSub(cLote,cSubLote,cCodProd,cCodLocal,cTipRet)\r\n****************************************************************************************************************\r\n*    //fPqCvlt(GdFieldGet(\"C6_YCAVALE\",nX)) -- quantiade de cavaletes amostras\r\n*    //\r\n****\r\nLocal nVlrRest := 0\r\n\r\ncQuery  := \" SELECT \"+ cTipRet +\" VLRET\"\r\ncQuery  += \"   FROM SB8010 \r\ncQuery  += \"  WHERE D_E_L_E_T_ = ''\r\ncQuery  += \"    AND B8_LOTECTL = '\"+ AllTrim(cLote)     +\"' \r\ncQuery  += \"    AND B8_NUMLOTE = '\"+ AllTrim(cSubLote)  +\"'\r\ncQuery  += \"    AND B8_PRODUTO = '\"+ AllTrim(cCodProd)  +\"'\r\ncQuery  += \"    AND B8_LOCAL   = '\"+ AllTrim(cCodLocal) +\"'\r\ncQuery  += \"    AND B8_SALDO <> 0\r\n\r\ntcQuery cQuery alias TRB new\r\ndbSelectArea(\"TRB\")\r\ndbgotop()\r\n\r\nnVlrRest := TRB->VLRET\r\n\r\ndbSelectArea(\"TRB\") \r\ndbCloseArea()\r\n\r\nReturn nVlrRest\r\n\r\n\r\nStatic Function fPqCvlt(cCavalete)\r\n****************************************************************************************************************\r\n*    //fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOBR\")\r\n*    \r\n****\r\nLocal nVlrRest := 0\r\n\r\ncQuery  := \" SELECT COUNT(*) AS VLR_CONT\r\ncQuery  += \"    FROM SB8010 \r\ncQuery  += \"   WHERE D_E_L_E_T_ = ''\r\ncQuery  += \"     AND B8_YCAVALE = '\"+AllTrim(cCavalete)+\"'\r\ncQuery  += \"     AND B8_YCLASSI = 'A'\r\ncQuery  += \"     AND B8_SALDO <> 0\r\n\r\ntcQuery cQuery alias TRB new\r\ndbSelectArea(\"TRB\")\r\ndbgotop()\r\n\r\nnVlrRest := TRB->VLR_CONT\r\n\r\ndbSelectArea(\"TRB\") \r\ndbCloseArea()\r\n\r\nReturn nVlrRest\r\n\r\n\r\nUser Function MINFORFIN(dSetDate,cSetCodPG)\r\n****************************************************************************************************************\r\n*    //Informações Financeiras \r\n*    \r\n****\r\nPrivate _oInforFin\t\t\t\t// Dialog Principal\r\n                       \r\nPrivate oPG    := LoadBitmap(GetResources(), \"BR_VERMELHO\")\r\nPrivate oNPG   := LoadBitmap(GetResources(), \"BR_VERDE\")\r\nPrivate oNADA  := LoadBitmap(GetResources(), \"BR_CINZA\")\r\n\r\n// Privates das ListBoxes\r\nPrivate aListBoxFin := {}\r\nPrivate oListBoxFin\r\n\r\nDEFINE MSDIALOG _oInforFin TITLE \"Informações Financeiras\" FROM u_MGETTELA(178),u_MGETTELA(181) TO u_MGETTELA(403),u_MGETTELA(967) PIXEL\r\n\r\n\t// Cria Componentes Padroes do Sistema\r\n\t@ u_MGETTELA(093),u_MGETTELA(308) Button \"Cancelar\" Size u_MGETTELA(037),u_MGETTELA(012) ACTION(Close(_oInforFin)) PIXEL OF _oInforFin\r\n\t@ u_MGETTELA(093),u_MGETTELA(351) Button \"Salvar\" Size u_MGETTELA(037),u_MGETTELA(012)   ACTION(fSaveDtBl(),Close(_oInforFin)) PIXEL OF _oInforFin\r\n\r\n\t\t@ u_MGETTELA(003),u_MGETTELA(005) ListBox oListBoxFin Fields ;\r\n\t\tHEADER \"\",\"RECNO\",\"PREFIXO\",\"NUMERO\",\"TIPO\",\"PARCELA\",\"VALOR\",\"EMISSAO NF\",\"VENCIMENTO\",\"DATA BAIXA\",\"VENCIMENTO B/L\",\"VENCIMENTO B/L REAL\" ;\r\n\t\tSize u_MGETTELA(383),u_MGETTELA(088) Of _oInforFin Pixel;\r\n\t\tColSizes 08,20,40,40,40,40,40,40,40,40,50,40\r\n\t\t\r\n\t\t//oListBoxFin:bLDblClick := {||  MAltVlrAut(aFlist[oListBoxFin:nAT,01]) } alterar a função\r\n\t\t\r\n\r\n\t// Chamadas das ListBox do Sistema\r\n\tfListFin1(dSetDate,cSetCodPG)\r\n\r\nACTIVATE MSDIALOG _oInforFin CENTERED \r\n\r\nReturn(.T.)\r\n\r\n\r\nStatic Function fSaveDtBl()\r\n****************************************************************************************************************\r\n* //\r\n* //\r\n* \r\n****\r\nLocal lGravou  := .F.\r\nLocal cCodTitu := \"\"\r\nLocal nX       := 0\r\n\r\nFor nX:=1 to Len(aListBoxFin)\r\n\tIf !Empty(aListBoxFin[nX][12])\r\n\t\t\r\n\t\tdbSelectArea(\"SE1\")\r\n\t\tdbGoto(aListBoxFin[nX][2]) \r\n\t\tSE1->(reclock(\"SE1\", .F.))\r\n\t\t\tSE1->E1_VENCTO  := aListBoxFin[nX][11] \r\n\t\t\tSE1->E1_VENCREA := aListBoxFin[nX][12]\r\n\t\tSE1->(msUnLock())\r\n\t\t\r\n\t\tlGravou:=.T.\r\n\t\tcCodTitu := cCodTitu + aListBoxFin[nX][04]+\"-\"+aListBoxFin[nX][06]+ \" | \" + chr(13)+chr(10) \r\n\t\t\r\n\tEndIf\r\nNext nX\r\n\r\nIf lGravou\r\n\tAVISO(\"Títulos gravados com sucesso:\", cCodTitu , { \"Fechar\" }, 3)\r\nEndIF\r\n\r\nReturn()\r\n\r\nStatic Function fListFin1(dSetDate,cSetCodPG)\r\n****************************************************************************************************************\r\n* //\r\n* //\r\n* \r\n****\r\nLocal cQuery  := \"\"\r\n//Local aTPAVA  := {}\r\nLocal aRetAva := \"\"\r\n\r\ndbSelectArea(\"SF2\")\r\ndbSetOrder(2)\r\nIF dbSeek(xFilial(\"SF2\") + M->C5_CLIENTE + M->C5_LOJACLI + M->C5_NOTA + M->C5_SERIE + \"N\")\r\n\r\n\taTPadv := Condicao(M->C5_XVLRFIN,cSetCodPG,,SF2->F2_EMISSAO,) //FSepCond(M->C5_XVLRFIN,cSetCodPG,SF2->F2_EMISSAO)\r\n\r\n\tdbSelectArea(\"SE4\")\r\n\tdbSetOrder(1)\r\n\tIf dbSeek(xFilial(\"SE4\")+ cSetCodPG )\r\n\t\taRetAva := strtokarr (AllTrim(SE4->E4_TPAVA), \",\")\r\n\tEndIf\r\n\r\n\tIf Len(aRetAva) <> 0\r\n\t\tIf Len(aRetAva) <> Len(aTPadv)\r\n\t\t\tAlert(\"Verifique a condição de pagamento: (\" + AllTrim(cSetCodPG) + \"). O campo tp. avançado está diferente das quantidade de parcelas.\" )\r\n\t\tEndIf\r\n\tEndIf\r\n\r\n\tcQuery := \" \tSELECT\tR_E_C_N_O_ RECNO, \r\n\tcQuery += \" \t\t\tE1_FILIAL,\r\n\tcQuery += \" \t\t\tE1_PREFIXO,\r\n\tcQuery += \" \t\t\tE1_TIPO,\r\n\tcQuery += \" \t\t\tE1_NUM,\r\n\tcQuery += \" \t\t\tE1_PARCELA,\r\n\tcQuery += \" \t\t\tE1_EMISSAO,\r\n\tcQuery += \" \t\t\tE1_VENCREA,\r\n\tcQuery += \" \t\t\tE1_BAIXA,\r\n\tcQuery += \" \t\t\tE1_VALOR\r\n\tcQuery += \" \t  FROM SE1010 \r\n\tcQuery += \" \t WHERE E1_NUM     = '\"+M->C5_NOTA+\"'\r\n\tcQuery += \" \t   AND D_E_L_E_T_ = ''\r\n\t//cQuery += \" \t   AND E1_BAIXA   = ''\r\n\tcQuery += \" \t   AND E1_EMISSAO = '\"+dtoS(SF2->F2_EMISSAO)+\"'\r\n\tcQuery += \" \t   AND E1_TIPO IN ('NF')\r\n\tcQuery += \" \t   AND E1_CLIENTE = '\"+M->C5_CLIENTE+\"'\r\n\tcQuery += \" \t   AND E1_LOJA    = '\"+M->C5_LOJACLI+\"'\r\n\tcQuery += \" \t   AND E1_SERIE   = '\"+M->C5_SERIE+\"' \r\n\r\n\tTcQuery cQuery Alias TMP_FIM New\r\n\tdbSelectArea(\"TMP_FIM\")\r\n\t\r\n\tnPosAt := 0\r\n\tcTipoAvan := \"\"\r\n\t\r\n\tDo While !EOF()\r\n\t\r\n\t\tnPosAt := nPosAt + 1\r\n\t\tIf Len(aRetAva)<>0\r\n\t\t\tcTipoAvan := aRetAva[nPosAt] \r\n\t\t\t\r\n\t\t\tIf AllTrim(cTipoAvan) <> \"A\"\r\n\t\t\t\taTPadv := Condicao(M->C5_XVLRFIN,cSetCodPG,,dSetDate+1,)\r\n\t\t\tEndIf\r\n\t\tEndIf\r\n\t\t\r\n\t\tAadd(aListBoxFin,{\tiif(!Empty(aRetAva),IIF(EMPTY(TMP_FIM->E1_BAIXA),oNPG,oPG),oNADA),;\r\n\t\t\t\t\t\t\tTMP_FIM->RECNO,;\r\n\t\t\t\t\t\t\tTMP_FIM->E1_PREFIXO,;\r\n\t\t\t\t\t\t\tTMP_FIM->E1_NUM,;\r\n\t\t\t\t\t\t\tTMP_FIM->E1_TIPO,;\r\n\t\t\t\t\t\t\tTMP_FIM->E1_PARCELA,;\r\n\t\t\t\t\t\t\tTMP_FIM->E1_VALOR,;\r\n\t\t\t\t\t\t\tStoD(TMP_FIM->E1_EMISSAO),;\r\n\t\t\t\t\t\t\tStoD(TMP_FIM->E1_VENCREA),;\r\n\t\t\t\t\t\t\tStoD(TMP_FIM->E1_BAIXA),;\r\n\t\t\t\t\t\t\tiif(!Empty(aRetAva),IIf(Empty(TMP_FIM->E1_BAIXA), aTPadv[nPosAt][1]             ,sToD(\"\") ),sToD(\"\")),;\r\n\t\t\t\t\t\t\tiif(!Empty(aRetAva),IIf(Empty(TMP_FIM->E1_BAIXA), DataValida(aTPadv[nPosAt][1]) ,sToD(\"\") ),sToD(\"\"));\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\r\n\t\tdbSelectArea(\"TMP_FIM\")\r\n\t\tdbSkip()\r\n\tEndDo\r\n\t\r\n\tdbSelectArea(\"TMP_FIM\")\r\n\tdbCloseArea()\r\n\r\n\tif Empty(aListBoxFin)\r\n\t\r\n\t\tAadd(aListBoxFin,{\t\toNADA,;\r\n\t\t\t\t\t\t\t\t\"\",;\r\n\t\t\t\t\t\t\t\t\"\",;\r\n\t\t\t\t\t\t\t\t\"\",;\r\n\t\t\t\t\t\t\t\t\"\",;\r\n\t\t\t\t\t\t\t\t\"\",;\r\n\t\t\t\t\t\t\t\t\"\",;\r\n\t\t\t\t\t\t\t\tStoD(\"\"),;\r\n\t\t\t\t\t\t\t\tStoD(\"\"),;\r\n\t\t\t\t\t\t\t\tStoD(\"\"),;\r\n\t\t\t\t\t\t\t\tStoD(\"\"),;\r\n\t\t\t\t\t\t\t\tsToD(\"\");\r\n\t\t\t\t\t\t\t\t})\r\n\t\r\n\tEndIf \r\n\r\n\toListBoxFin:SetArray(aListBoxFin)\r\n\t\r\n\toListBoxFin:bLine := {|| {;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,01],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,02],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,03],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,04],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,05],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,06],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,07],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,08],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,09],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,10],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,11],;\r\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,12]}}\r\n\t\r\n\r\nEndIf\r\n\r\nReturn()\r\n"}}}
Content-Length: 104873
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"git:/d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode/06_FATURAMENTO_NOVO_COMERCIAL/MT410TOK.prw?%7B%22path%22%3A%22d%3A%5C%5CTOTVS%2012%5C%5CMicrosiga%5C%5CProtheus%5C%5CProjetoVSCode%5C%5C06_FATURAMENTO_NOVO_COMERCIAL%5C%5CMT410TOK.prw%22%2C%22ref%22%3A%22~%22%7D","languageId":"advpl","version":1,"text":"#INCLUDE \"rwmake.ch\"\n#INCLUDE \"protheus.ch\"\n#INCLUDE \"topconn.ch\"\n\n/*\nPrograma ...: MT410TOK.Prw\nUso ........: Validação do pedido de vendas\nData .......: 26/04/2019\nFeito por ..: Bruno Lage Ferreira \n\nMV_NDESCTP - DESCONTO NO PREÇO DE LISTA E UNITARIO\nNOVO\n*/\n\nUser Function MT410TOK()\n****************************************************************************************************************\n*   /* Programa para validar o pedido de venda tabela de preço de chapas - Qualitá */\n*\n****\nLocal   lRet      := .T.\nLocal   oProcess\nLocal   nOpc      := PARAMIXB[1]\nLocal   cQuery    := \"\"\nDefault lEnd      := .F.\n\n\nIf SubString(CNUMEMP,1,2) == \"01\" .And. (INCLUI == .T. .Or. nOpc == 1 .OR. ALTERA == .T.) .AND. (FUNNAME() <> \"GROA001\")\n\n\ta410Recalc()\n\n\toProcess := MsNewProcess():New({|lEnd| lRet := MValidPedV(@oProcess, @lEnd,@lRet) },\"Validando dados..\",\"Lendo Registros do Pedido de Vendas\",.T.) \n\tIf !IsBlind()     \n\t\tIf nOpc == 1 \n\t\t\tIf !Empty(M->C5_XIDMOB)\n\t\t\t\t\n\t\t\t\tcQuery := \"SELECT MAX(ZSA_IDMOB) ID FROM ZSA010 WHERE D_E_L_E_T_ =\t'' AND  ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\"'\"\n\t\t\t\ttcQuery cQuery alias TRB_EMOB new\n\t\t\t\tdbSelectArea(\"TRB_EMOB\")\n\t\t\t\tdbgotop()\n\n\t\t\t\tIf !EMPTY(TRB_EMOB->ID)\n\t\t\t\t\tAlert(\"Este P.Venda deve ser excluído pelo MogGran!\")\n\t\t\t\t\tdbSelectArea(\"TRB_EMOB\") \n\t\t\t\t\tdbCloseArea()\n\t\t\t\t\tReturn(.f.)\n\t\t\t\tEndIf\n\n\t\t\t\tdbSelectArea(\"TRB_EMOB\") \n\t\t\t\tdbCloseArea()\n\n\t\t\tEndIF\n\t\tEndIf\n\t\toProcess:Activate()\n\telse\n\t\tlRet := MValidPedV(nil, @lEnd,@lRet)\n\tEndIf\nEndIf\n\nReturn(lRet)\n\nUser Function M410LIOK()\n****************************************************************************************************************\n*    Libera ou bloquea linha do pedido de venda \n*\n****\nLocal lRet   := .T.\nLocal cQuery := \"\"\n\n/*\nLinhaOk\n*/\nIf SubString(CNUMEMP,1,2) == \"01\" \n\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",n))) ,1,2) $ 'BL' .AND. u_MTSOEST(GdFieldGet(\"C6_TES\",n)) \n\t\tIf Empty(GdFieldGet(\"C6_LOTECTL\",n))\n\t\t\tAlert(\"ERRO! BLOCO SEM LOTE!\")\n\t\t\tlRet := .F.\n\t\tEndIf\n\tEndIf\n\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",n))) ,1,2) $ 'CH' .AND. (Empty(GdFieldGet(\"C6_LOTECTL\",n)) .OR. Empty(GdFieldGet(\"C6_NUMLOTE\",n)))  \n\t\tAlert(\"ERRO! CHAPA COM LOTE OU SUB-LOTE EM BRANCO!\")\n\t\tlRet := .F.\n\tEndIf\nEndIf\n\n\n/*\nValida mobGran\n*/\ncQuery  := \" SELECT ZSA_PRCDES FROM ZSA010\ncQuery  += \"  WHERE D_E_L_E_T_ = ''\ncQuery  += \"  AND ZSA_PRCDES <> 0\n//cQuery  += \"  AND ZSA_STATUS = 'ATIVA'\ncQuery  += \"  AND ZSA_IDMOBP = '\"+ AllTrim(M->C5_XIDMOB)                    +\"'\ncQuery  += \"  AND ZSA_NUMCAV = '\"+ AllTrim(GdFieldGet(\"C6_YCAVALE\",n))      +\"'\ncQuery  += \"  AND ZSA_PROD   = '\"+ AllTrim(GdFieldGet(\"C6_PRODUTO\",n))      +\"'\ncQuery  += \"  AND ZSA_CLASSI = '\"+ AllTrim(GdFieldGet(\"C6_YCLASSI\",n))      +\"'\ncQuery  += \"  AND ZSA_LOTE   = '\"+ AllTrim(GdFieldGet(\"C6_LOTECTL\",n))      +\"'\n\ntcQuery cQuery alias TRB new\ndbSelectArea(\"TRB\")\ndbgotop()\n\nIf !EMPTY(TRB->ZSA_PRCDES)\n\tGdFieldPut(\"C6_XOFERTA\",'S')\nEndIf\n\ndbSelectArea(\"TRB\") \ndbCloseArea()\n\n\nReturn(lRet)\n\nUser Function MTSOEST(cCodTes)\n****************************************************************************************************************\n*    Libera ou bloquea linha do pedido de venda \n*\n****\nLocal lRet := .F.\n\ndbSelectArea(\"SF4\")\ndbSetOrder(1)\ndbSeek(xFilial(\"SF4\") + cCodTes)\n\nIf SF4->F4_ESTOQUE == \"S\"\n\tlRet := .T.\n\tConOut(\"MTSOEST\" +\"|\"+ cCodTes +\"|\"+ \".T.\" )\nElse\n\tConOut(\"MTSOEST\" +\"|\"+ cCodTes +\"|\"+ \".F.\" )\n\tlRet := .F.\nEndIf\n\nReturn(lRet)\n\nUser Function GM410FIM()\n****************************************************************************************************************\n*    Libera ou bloquea pedido de venda M410STTS \n*\n****\nLocal lLibBlq  := .F.\nLocal lCalcPeso:= .F.\nLocal cQuery   := \"\"\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\nlOCAL nX       := 0\n\nIf SubString(CNUMEMP,1,2) == \"01\"  .AND. (FUNNAME() <> \"GROA001\")\n\tFor nX := 1 To Len(aCols)\n\t\tIf !Empty(GdFieldGet(\"C6_XMOTBLQ\",nX)) .OR. !Empty(M->C5_XMOTBLQ)\n\t\t\tlLibBlq   := .T.\n\t\tEndIf\n\t\t\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\t\t\n\t\t\tlCalcPeso := .T.\n\t\tEndIf\n\tNext nX\n\t\n\tIf lLibBlq   \n\t\tRecLock(\"SC5\",.F.)\n\t\t\tSC5->C5_BLQ  := '1'\n\t\tMsUnlock()\t\n\tEndif\n\n\tIf  M->C5_TIPO $ \"D/B\"\n\t\tRecLock(\"SC5\",.F.)\n\t\t\tSC5->C5_BLQ  := ''\n\t\tMsUnlock()\t\n\tEndIf \n\n\tIf lCalcPeso\n\t\n\t\t//Soma dos pesos brutos e liquido\n\t\tcQuery   := \" SELECT\tROUND(SUM(B8_YPESOLQ) + SUM(PESO_AMOSTRAS),3) PLQ, \n\t\tcQuery   += \" \t\t    ROUND(SUM(B8_YPESOBR) + SUM(PESO_AMOSTRAS),3) PBR \n\t\tcQuery   += \" FROM (\n\t\tcQuery   += \" SELECT\t\tISNULL(ZGO.ZGO_INVOIC,'') AS ZGO_INVOIC, \n\t\tcQuery   += \" \t\t\tTAB_PROFORMA.* FROM (\n\t\tcQuery   += \" \t\t\t SELECT\tRTRIM(LTRIM(C5_NUM)) AS C5_NUM,\n\t\tcQuery   += \" \t\t\t\t\tYEAR(CAST(C5_EMISSAO AS DATE) )ANO,\n\t\tcQuery   += \" \t\t\t\t\tCAST(C5_EMISSAO AS DATE) AS C5_EMISSAO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_NOME)) AS A1_NOME,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_END)) AS A1_END,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_BAIRRO)) AS A1_BAIRRO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDI)) AS A1_DDI,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDD)) AS A1_DDD,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_TEL)) AS A1_TEL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_CONTATO)) AS A1_CONTATO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A3_NOME)) AS A3_NOME,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(YA_PAIS_I)) AS YA_PAIS_I,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XSEAL)) AS C5_XSEAL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XBOOKIN)) AS C5_XBOOKIN,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVESSEL)) AS C5_XVESSEL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XCONTAI)) AS C5_XCONTAI,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTARE)) AS C5_XTARE,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPO)) AS C5_XPO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_LOTECTL)) AS C6_LOTECTL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_NUMLOTE)) AS C6_NUMLOTE,\n\t\tcQuery   += \" \t\t\t\t\tC6_CF,\n\t\tcQuery   += \" \t\t\t\t\tC6_XPESO AS PESO_AMOSTRAS,\n\t\tcQuery   += \" \t\t\t\t\tC6_YESPLIQ * 100 AS C6_YESPLIQ,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(B5_YCEMEIN)) AS C6_DESCRI, \n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_DESCRI))  AS C6_DESCRI_P, \n\t\tcQuery   += \" \t\t\t\t\tIIF(RTRIM(LTRIM(C6_YCAVALE))='','-',RTRIM(LTRIM(C6_YCAVALE)))  AS C6_YCAVALE,\n\t\tcQuery   += \" \t\t\t\t\tC6_PRCVEN,\n\t\tcQuery   += \" \t\t\t\t\tROUND(C6_PRCVEN / 10.764,2) AS PRCVEN_SQFT,\n\t\tcQuery   += \" \t\t\t\t\tC5_XVLRFIN AS VALOR_FINANCEIRO,\n\t\tcQuery   += \" \t\t\t\t\tC6_QTDVEN,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_NUMLOTE<>'',1,0) AS QTD_CHAPAS,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',0,C6_QTDVEN) AS QTD_TOTAL_FATURAR,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='M2',C6_QTDVEN,0) AS QTD_TOTAL_M2,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='PC',C6_QTDVEN,0) AS QTD_TOTAL_PC,\n\t\tcQuery   += \" \t\t\t\t\tC6_UM,\n\t\tcQuery   += \" \t\t\t\t\tC6_UNSVEN,\n\t\tcQuery   += \" \t\t\t\t\tC6_VALOR,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',C6_VALOR,0) AS SAMPLE_DESC,\n\t\tcQuery   += \" \t\t\t\t\tC6_VALDESC,\n\t\tcQuery   += \" \t\t\t\t\tC6_YCOMLIQ,\n\t\tcQuery   += \" \t\t\t\t\tC6_YALTLIQ,\n\t\tcQuery   += \" \t\t\t\t\tC6_YTOTLIQ,\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOLQ FROM SB8010 WHERE D_E_L_E_T_ = '' AND C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO AND B8_LOCAL = C6_LOCAL) ,0) AS  B8_YPESOLQ,\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOBR FROM SB8010 WHERE D_E_L_E_T_ = '' AND C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO AND B8_LOCAL = C6_LOCAL) ,0) AS  B8_YPESOBR,\n\t\tcQuery   += \" \t\t\t\t\tC5_XTESALE,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVALEXT)) AS C5_XVALEXT,\n\t\tcQuery   += \" \t\t\t\t\tUPPER(ISNULL(CONVERT(VARCHAR(MAX), CONVERT(VARBINARY(MAX), C5_YOBSEXT)),'')) AS C5_YOBSEXT,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESING))  AS E4_DESING,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESCRI))  AS E4_DESPOR,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPORTLO)) AS C5_XPORTLO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTPCONT)) AS C5_XTPCONT,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XINSURA)) AS C5_XINSURA,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFIMDES)) AS C5_XFIMDES,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFRFORW)) AS C5_XFRFORW,\n\t\tcQuery   += \" \t\t\t\t\tC5_XWLIMIT,\n\t\tcQuery   += \" \t\t\t\t\tCASE \n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'S' THEN 'STANDARD'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'C' THEN 'COMMERCIAL'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'P' THEN 'PREMIUM'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = '' AND C6_CF='7949' THEN 'SAMPLE'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = ''  THEN '' \n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'A' THEN 'SAMPLE'\n\t\tcQuery   += \" \t\t\t\t\tEND C6_YCLASSI,\n\t\tcQuery   += \" \t\t\t\t\tC5_XTOTAL,\n\t\tcQuery   += \" \t\t\t\t\tC5_XDESCON,\n\t\tcQuery   += \" \t\t\t\t\tC5_XPDESTI,\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT B8_LOTEFOR FROM SB8010 WHERE D_E_L_E_T_ = '' AND B8_LOTECTL = C6_LOTECTL AND B8_NUMLOTE = '' AND SUBSTRING(B8_PRODUTO,1,2) ='BL' ),'') AS LOTE_FORNECEDOR\n\t\tcQuery   += \" \t\t\t FROM SC6010 SC6 INNER JOIN SC5010 SC5\n\t\tcQuery   += \" \t\t\t\t   ON (C6_FILIAL = C5_FILIAL AND C6_NUM = C5_NUM )\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA1010 SA1\n\t\tcQuery   += \" \t\t\t\t   ON (A1_COD = C5_CLIENTE AND A1_LOJA = C5_LOJACLI )\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SYA010 SYA\n\t\tcQuery   += \" \t\t\t\t   ON (A1_PAIS = YA_CODGI)\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA3010\n\t\tcQuery   += \" \t\t\t\t   ON (A1_VEND=A3_COD)\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SB5010 SB5\n\t\tcQuery   += \" \t\t\t\t   ON (C6_PRODUTO = B5_COD)\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SE4010 SE4\n\t\tcQuery   += \" \t\t\t\t   ON (E4_CODIGO = C5_CONDPAG)\n\t\tcQuery   += \" \t\t\t WHERE SC6.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SC5.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SA1.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SYA.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SB5.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SE4.D_E_L_E_T_ = ''\n\t\t//cQuery   += \" \t\t\t   AND SC5.C5_BLQ <> '1'\n\t\tcQuery   += \" \t\t\t   AND C5_NUM = '\"+SC5->C5_NUM+\"'\n\t\tcQuery   += \" )TAB_PROFORMA\n\t\tcQuery   += \" \t FULL OUTER JOIN ZGO010 ZGO\n\t\tcQuery   += \" \t   ON (C5_NUM = ZGO_PEDIDO)\n\t\tcQuery   += \" WHERE C5_NUM <> ''\n\t\tcQuery   += \"   AND ISNULL(ZGO_INVOIC,'') LIKE '%%'\n\t\tcQuery   += \" )TB_PESO\n\t\t                                                          \n\t\ttcQuery cQuery alias TRB new\n\t\tdbSelectArea(\"TRB\")\n\t\tdbgotop()\n\t\t\n\t\tIF !M->C5_TIPO $ \"D/B\" .And. LEFT(AllTrim(GdFieldGet(\"C6_PRODUTO\",1)),2) <> 'BL'\n\t\t\tIF !EOF()\n\t\t\t\tdbSelectArea(\"SC5\")\t\t\n\t\t\t\tIf RecLock(\"SC5\",.f.)\n\t\t\t\t\tReplace SC5->C5_PESOL  With TRB->PLQ\n\t\t\t\t\tReplace SC5->C5_PBRUTO With TRB->PBR\n\t\t\t\t\t/*\n\t\t\t\t\tIF TRB->PLQ > SC5->C5_PBRUTO \n\t\t\t\t\t\tAlert(\"Peso bruto esta menor que peso líquido. Favor corrigir!\")\n\t\t\t\t\t\tReplace SC5->C5_PBRUTO With 0\n\t\t\t\t\tEndIf\n\t\t\t\t\t*/\n\t\t\t\t\tMsUnLock()\n\t\t\t\tEndIf\t\n\t\t\tEndIf\n\t\tEndIf\t\t\t\t\n\t\tdbSelectArea(\"TRB\") \n\t\tdbCloseArea()\n\t\t\n\t\t//Soma da quantidade de bandos\n\t\tcQuery   := \" SELECT COUNT(*) QTD FROM (\n\t\tcQuery   += \" SELECT DISTINCT C6_YCAVALE FROM (\n\t\tcQuery   += \" SELECT\t\tISNULL(ZGO.ZGO_INVOIC,'') AS ZGO_INVOIC, \n\t\tcQuery   += \" \t\t\tTAB_PROFORMA.* FROM (\n\t\tcQuery   += \" \t\t\t SELECT\tRTRIM(LTRIM(C5_NUM)) AS C5_NUM,\n\t\tcQuery   += \" \t\t\t\t\tYEAR(CAST(C5_EMISSAO AS DATE) )ANO,\n\t\tcQuery   += \" \t\t\t\t\tCAST(C5_EMISSAO AS DATE) AS C5_EMISSAO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_NOME)) AS A1_NOME,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_END)) AS A1_END,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_BAIRRO)) AS A1_BAIRRO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDI)) AS A1_DDI,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDD)) AS A1_DDD,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_TEL)) AS A1_TEL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_CONTATO)) AS A1_CONTATO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A3_NOME)) AS A3_NOME,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(YA_PAIS_I)) AS YA_PAIS_I,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XSEAL)) AS C5_XSEAL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XBOOKIN)) AS C5_XBOOKIN,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVESSEL)) AS C5_XVESSEL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XCONTAI)) AS C5_XCONTAI,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTARE)) AS C5_XTARE,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPO)) AS C5_XPO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_LOTECTL)) AS C6_LOTECTL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_NUMLOTE)) AS C6_NUMLOTE,\n\t\tcQuery   += \" \t\t\t\t\tC6_CF,\n\t\tcQuery   += \" \t\t\t\t\tC6_XPESO AS PESO_AMOSTRAS,\n\t\tcQuery   += \" \t\t\t\t\tC6_YESPLIQ * 100 AS C6_YESPLIQ,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(B5_YCEMEIN)) AS C6_DESCRI, \n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_DESCRI))  AS C6_DESCRI_P, \n\t\tcQuery   += \" \t\t\t\t\tIIF(RTRIM(LTRIM(C6_YCAVALE))='','-',RTRIM(LTRIM(C6_YCAVALE)))  AS C6_YCAVALE,\n\t\tcQuery   += \" \t\t\t\t\tC6_PRCVEN,\n\t\tcQuery   += \" \t\t\t\t\tROUND(C6_PRCVEN / 10.764,2) AS PRCVEN_SQFT,\n\t\tcQuery   += \" \t\t\t\t\tC5_XVLRFIN AS VALOR_FINANCEIRO,\n\t\tcQuery   += \" \t\t\t\t\tC6_QTDVEN,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_NUMLOTE<>'',1,0) AS QTD_CHAPAS,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',0,C6_QTDVEN) AS QTD_TOTAL_FATURAR,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='M2',C6_QTDVEN,0) AS QTD_TOTAL_M2,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='PC',C6_QTDVEN,0) AS QTD_TOTAL_PC,\n\t\tcQuery   += \" \t\t\t\t\tC6_UM,\n\t\tcQuery   += \" \t\t\t\t\tC6_UNSVEN,\n\t\tcQuery   += \" \t\t\t\t\tC6_VALOR,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',C6_VALOR,0) AS SAMPLE_DESC,\n\t\tcQuery   += \" \t\t\t\t\tC6_VALDESC,\n\t\tcQuery   += \" \t\t\t\t\tC6_YCOMLIQ,\n\t\tcQuery   += \" \t\t\t\t\tC6_YALTLIQ,\n\t\tcQuery   += \" \t\t\t\t\tC6_YTOTLIQ,\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOLQ FROM SB8010 WHERE D_E_L_E_T_ = '' AND  C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO) ,0) AS  B8_YPESOLQ,\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOBR FROM SB8010 WHERE D_E_L_E_T_ = '' AND C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO) ,0) AS  B8_YPESOBR,\n\t\tcQuery   += \" \t\t\t\t\tC5_XTESALE,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVALEXT)) AS C5_XVALEXT,\n\t\tcQuery   += \" \t\t\t\t\tUPPER(ISNULL(CONVERT(VARCHAR(MAX), CONVERT(VARBINARY(MAX), C5_YOBSEXT)),'')) AS C5_YOBSEXT,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESING))  AS E4_DESING,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESCRI))  AS E4_DESPOR,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPORTLO)) AS C5_XPORTLO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTPCONT)) AS C5_XTPCONT,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XINSURA)) AS C5_XINSURA,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFIMDES)) AS C5_XFIMDES,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFRFORW)) AS C5_XFRFORW,\n\t\tcQuery   += \" \t\t\t\t\tC5_XWLIMIT,\n\t\tcQuery   += \" \t\t\t\t\tCASE \n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'S' THEN 'STANDARD'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'C' THEN 'COMMERCIAL'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'P' THEN 'PREMIUM'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = '' AND C6_CF='7949' THEN 'SAMPLE'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = ''  THEN '' \n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'A' THEN 'SAMPLE'\n\t\tcQuery   += \" \t\t\t\t\tEND C6_YCLASSI,\n\t\tcQuery   += \" \t\t\t\t\tC5_XTOTAL,\n\t\tcQuery   += \" \t\t\t\t\tC5_XDESCON,\n\t\tcQuery   += \" \t\t\t\t\tC5_XPDESTI,\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT B8_LOTEFOR FROM SB8010 WHERE D_E_L_E_T_ = '' AND B8_LOTECTL = C6_LOTECTL AND B8_NUMLOTE = '' AND SUBSTRING(B8_PRODUTO,1,2) ='BL' ),'') AS LOTE_FORNECEDOR\n\t\tcQuery   += \" \t\t\t FROM SC6010 SC6 INNER JOIN SC5010 SC5\n\t\tcQuery   += \" \t\t\t\t   ON (C6_FILIAL = C5_FILIAL AND C6_NUM = C5_NUM )\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA1010 SA1\n\t\tcQuery   += \" \t\t\t\t   ON (A1_COD = C5_CLIENTE AND A1_LOJA = C5_LOJACLI )\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SYA010 SYA\n\t\tcQuery   += \" \t\t\t\t   ON (A1_PAIS = YA_CODGI)\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA3010\n\t\tcQuery   += \" \t\t\t\t   ON (A1_VEND=A3_COD)\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SB5010 SB5\n\t\tcQuery   += \" \t\t\t\t   ON (C6_PRODUTO = B5_COD)\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SE4010 SE4\n\t\tcQuery   += \" \t\t\t\t   ON (E4_CODIGO = C5_CONDPAG)\n\t\tcQuery   += \" \t\t\t WHERE SC6.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SC5.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SA1.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SYA.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SB5.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SE4.D_E_L_E_T_ = ''\n\t  //cQuery   += \"              --AND SC5.C5_BLQ <> '1'\n\t\tcQuery   += \" \t\t\t   AND C5_NUM = '\"+SC5->C5_NUM+\"'\n\t\tcQuery   += \" \n\t\tcQuery   += \" )TAB_PROFORMA\n\t\tcQuery   += \" \t FULL OUTER JOIN ZGO010 ZGO\n\t\tcQuery   += \" \t   ON (C5_NUM = ZGO_PEDIDO)\n\t\tcQuery   += \" WHERE C5_NUM <> ''\n\t   //cQuery  += \"   --AND ISNULL(ZGO_INVOIC,'') LIKE '%'+@INVOICE+'%'\n\t\tcQuery   += \" )TB_TOTAL_CAV\n\t\tcQuery   += \" WHERE C6_YCAVALE <> '-'\n\t\tcQuery   += \" )TB_QTD_CAV\n\t\t\n\t\t\n\t\ttcQuery cQuery alias TRB new\n\t\tdbSelectArea(\"TRB\")\n\t\tdbgotop()\n\t\t\n\t\tIF !EOF()\n\t\t\tdbSelectArea(\"SC5\")\t\t\n\t\t\tIf RecLock(\"SC5\",.f.)\n\t\t\t\tReplace SC5->C5_VOLUME1  With TRB->QTD  \n\t\t\t\tMsUnLock()\n\t\t\tEndIf\t\n\t\tEndIf\n\t\t\t\t\t\t\n\t\tdbSelectArea(\"TRB\") \n\t\tdbCloseArea()\n\t\t\n\t\tIf RecLock(\"SC5\",.f.)\n\t\t\tIF SC5->C5_VOLUME1 == 0\n\t\t\t\tSC5->C5_VOLUME1 := 1\n\t\t\tEndIf\n\t\t\tMsUnLock()\n\t\tEndIf\t\n\t\t\n\tEndIf\n\nEndIf\n\nReturn()\n\n/*\nUser Function MDesTot()\n****************************************************************************************************************\n*    Programa dar o desconto  \n*\n****\nLocal nValorTemp := 0\n\nFor nX := 1 To Len(aCols)\n\t\tGdFieldPut(\"C6_DESCONT\",M->C5_DESC1,nX) \nNext nX\n\nReturn(.T.) \n*/\n\nStatic Function MValidPedV(oProcess, lEnd,lRet)\n****************************************************************************************************************\n*   /* Programa para validar o pedido de venda tabela de preço de chapas - Qualitá */\n*\n****\nLocal cQuery := \"\"\n\nLocal nPosCava := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_YCAVALE\"}) //Cavalete\nLocal nPosLOTE := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_LOTECTL\"}) //SubLote\nLocal nPosSUBL := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_NUMLOTE\"}) //Lote\nLocal nPosLOCA := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_LOCAL\"  }) //Lote\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\n\nLocal fTPBLQ   := .F.\n\nLocal aMsgPrc  := {}\nLoca  nX       := 0\n\nIf !IsBlind()     \n\toProcess:SetRegua1(8)\nEndIf\n\n/*\nSomente para Qualitá\n*/\nConOut(FUNNAME())\nIf SubString(CNUMEMP,1,2) == \"01\" .And. (INCLUI == .T. .Or. ALTERA == .T.) .AND. (FUNNAME() <> \"GROA001\")\n\n\n\tM->C5_XMOTBLQ := \"\"\n\n\t/*\n\tSomente para Mercado Externo\n\tValidação mercado interno campos FollowUp\n\t*/\n\tIf M->C5_YTIPO $ \"ME/MI\"\n\t\tIF M->C5_XSHOWFO == \"S\"\n\t\t\tIf Empty(M->C5_XFOLLST) .Or. Empty(M->C5_XPENDEN) .Or. Empty(M->C5_XDTLIBF)\n\t\t\t\tAlert(\"FollowUp='SIM'! O P.Venda não pode ser salvo sem as informações de Pendência/Situação/Data de Liberação. \")\t\n\t\t\t\tReturn(.F.)\n\t\t\tEndIf\n\t\tEndIf\n\tEndIf\n\n\tcDesMoed := \"\"\n\toFont := TFont():New('Arial Black',,-18,.T.)\n\t\n\tIf     M->C5_MOEDA == 1\n\t\tcDesMoed := \"1 - (R$)   R E A L\"\n\tElseIf M->C5_MOEDA == 2\n\t\tcDesMoed := \"2 - ($)    D O L A R\"\n\tElseIf M->C5_MOEDA == 3\n\t\tcDesMoed := \"3 - (€)    E U R O\"\n\tEndIf\n\t\n\tIf !IsBlind()     \n\t\tDEFINE MSDIALOG _oDlgMoeda TITLE \"Moeda\" FROM u_MGETTELA(178),u_MGETTELA(181) TO u_MGETTELA(342),u_MGETTELA(577) PIXEL\n\t\t\t// Cria as Groups do Sistema\n\t\t\t@ u_MGETTELA(001),u_MGETTELA(003) TO u_MGETTELA(062),u_MGETTELA(195) LABEL \"\" PIXEL OF _oDlgMoeda\n\t\t\n\t\t\t// Cria Componentes Padroes do Sistema\n\t\t\t@ u_MGETTELA(009),u_MGETTELA(010) Say \"Pedido sendo salvo na moeda:\" Size u_MGETTELA(075),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgMoeda\n\t\t\t@ u_MGETTELA(033),u_MGETTELA(078) Say cDesMoed \t\t\t\t\t\t Size u_MGETTELA(090),u_MGETTELA(080) COLOR CLR_HMAGENTA FONT oFont PIXEL OF _oDlgMoeda\n\t\t\t@ u_MGETTELA(064),u_MGETTELA(156) Button \"OK\" ACTION(Close(_oDlgMoeda)) Size u_MGETTELA(037),u_MGETTELA(012) PIXEL OF _oDlgMoeda\n\t\tACTIVATE MSDIALOG _oDlgMoeda CENTERED \n\tEndIf\n\n\tConOut(\"******************************************\" )\n\tConOut(\"Inicio P.E = MT410TOK Qualitá\" )\n\tConOut(\"******************************************\" )\t\n\t/*\n\t****************************************************************\n\tConferencia da tabela de preço com o desconto cadastrado por classificação comercial\n\t****************************************************************\n\t*/\n\tdbSelectArea(\"SA1\")\n\tdbSetOrder(1)\n\tdbSeek(xFilial(\"SA1\") + M->C5_CLIENTE + M->C5_LOJACLI )\n\t\n\tIf !Empty(SA1->A1_INFDESC)\n\t\tAlert(\"Aviso! Este cliente possui um desconto padrão! Verifique sempre pela tela [F5].\")\n\tEndIf\n\t\n\tIF M->C5_TIPO $ \"D\"\n\t\tReturn(.T.)\n\tEndIf\n\t\n\tIf !IsBlind()     \n\t\toProcess:IncRegua1(\"[1-8] - Conferência da tabela de preço com o desconto cadastrado!\")  \n\tEndIf\n\n\tFor nX := 1 To Len(aCols)\n\t\t/*\n\t\tRegra geral de tabela de preços \n\t\t*/\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t//\"0005/0006/0034/0035/0036\"\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\t\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\t\t\t\n\t\t\tIf Empty(SA1->A1_TABELA)\n\n\t\t\t\tIf Empty(GdFieldGet(\"C6_YCLASSI\",nX))\n\t\t\t\t\tcClassif := \"P\"\n\t\t\t\tElse\n\t\t\t\t\tcClassif := AllTrim(GdFieldGet(\"C6_YCLASSI\",nX))\n\t\t\t\tEndIf\n\n\t\t\t\tIf GdFieldGet(\"C6_XOFERTA\",nX) == 'N'\n\n\t\t\t\t\tcQuery  := \" SELECT DA1_CODTAB,DA0_DESCRI,DA0_DESGER ,DA1_PRCVEN , CASE WHEN DA1_PERDES=0  THEN 1 WHEN DA1_PERDES<>0 THEN DA1_PERDES END  DA1_PERDES \n\t\t\t\t\tcQuery  += \"   FROM DA0010 DA0 \n\t\t\t\t\tcQuery  += \"        INNER JOIN DA1010 DA1 \n\t\t\t\t\tcQuery  += \" ON (DA0_CODTAB = DA1_CODTAB)\n\t\t\t\t\t\n\t\t\t\t\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) <> 'AM'\n\t\t\t\t\t\tcQuery  += \"  WHERE DA0_YCLASS IN ('\"+ cClassif +\"')\n\t\t\t\t\t\tcQuery  += \"    AND DA1_CODPRO = '\" + AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\"\t\t\n\t\t\t\t\tElse\n\t\t\t\t\t\tcQuery  += \"  WHERE DA1_CODPRO = '\" + AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\"\t\n\t\t\t\t\tEndIf\n\t\t\t\t\t\t\t\n\t\t\t\t\tIF !EMPTY(SA1->A1_MULTTAB)\n\t\t\t\t\t\tcQuery  += \"    AND DA0_CODTAB IN (\"+AllTrim(SA1->A1_MULTTAB)+\")\"\n\t\t\t\t\tELSE\n\t\t\t\t\t\tcQuery  += \"    AND DA0_CODTAB IN ('000','001','002','003')\n\t\t\t\t\tEndIf\n\t\t\t\t\tcQuery  += \"    AND DA0.D_E_L_E_T_ = ''\n\t\t\t\t\tcQuery  += \"    AND DA1.D_E_L_E_T_ = ''\n\t\t\t\t\t\n\t\t\t\t\ttcQuery cQuery alias TRB new\n\t\t\t\t\tdbSelectArea(\"TRB\")\n\t\t\t\t\tdbgotop()\n\t\t\t\t\t\n\t\t\t\t\tIf Empty(TRB->DA1_PRCVEN) .and. !GDDeleted(nX) \n\t\t\t\t\t\tAlert(\"[C6_PRCVEN] - Tabela de preço não encontrada! Linha:(\" + Alltrim(str(nX)) +\") Confira a classif. do produto ou Mult.Tabelas preços no Cad. Cliente.\" )\n\t\t\t\t\t\tlRet := .F. \n\t\t\t\t\t\t//sleep(300)\t\n\t\t\t\t\t\tM->C5_BLQ  := '1'\n\t\t\t\t\tEndIf\n\t\t\t\t\t\n\t\t\t\t\t//If GdFieldGet(\"C6_PRCVEN\",nX) <  IIF(cClassif==\"P\",((TRB->DA1_PRCVEN - TRB->DA0_DESGER)),((TRB->DA1_PRCVEN * TRB->DA0_DESGER))) .and. !GDDeleted(nX)\n\t\t\t\t\tIf GdFieldGet(\"C6_PRCVEN\",nX) <  IIF(cClassif==\"P\",((TRB->DA1_PRCVEN - TRB->DA0_DESGER)),((TRB->DA1_PRCVEN))) .and. !GDDeleted(nX)\n\t\t\t\t\t\t//aAdd(aMsgPrc,\"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + Alltrim(str(nX))+\" Tabela de Preço:\" + AllTrim(TRB->DA1_CODTAB) + \"-\"+ AllTrim(TRB->DA0_DESCRI))  \n\t\t\t\t\t\taAdd(aMsgPrc,\"Cavalete:\"+GdFieldGet(\"C6_YCAVALE\",nX)+\" Tabela de Preço:\" + AllTrim(TRB->DA1_CODTAB) + \"-\"+ AllTrim(TRB->DA0_DESCRI) )\n\t\t\t\t\t\t//lRet := .F.\n\t\t\t\t\t\tConOut(\"******************************************\")\n\t\t\t\t\t\tConOut(\"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + Alltrim(str(nX)))\n\t\t\t\t\t\tConOut(\"******************************************\")\n\t\t\t\t\t\t//sleep(300)\n\t\t\t\t\t\tM->C5_BLQ  := '1'\t\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"PREÇO MENOR QUE A TABELA DE PREÇO:\"+ AllTrim(TRB->DA1_CODTAB),nX)\t\n\t\t\t\t\tELSE\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\n\t\t\t\t\tEndIf\n\n\t\t\t\t\tGdFieldPut(\"C6_PRCREF\",TRB->DA1_PRCVEN,nX)\n\t\t\t\t\t\n\t\t\t\t\tdbSelectArea(\"TRB\") \n\t\t\t\t\tdbCloseArea()\n\t\t\t\telse\n\t\t\t\t\tM->C5_BLQ  := ''\n\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\n\t\t\t\tEndIf\n\n\t\t\t\tIF lRet == .F. .And. !IsBlind()  \n\t\t\t\t\tReturn(lRet) \n\t\t\t\tEndIf\n\t\t\tElse\n\t\t\t\t/*\n\t\t\t\tUsado para definir uma tabela de preço especifica para o cliente\n\t\t\t\t*/\n\t\t\t\tIf GdFieldGet(\"C6_XOFERTA\",nX) == 'N'\n\t\t\t\t\n\t\t\t\t\tcQuery  := \" SELECT DA1_CODTAB,DA0_DESCRI,DA0_DESGER,DA1_PRCVEN , CASE WHEN DA1_PERDES=0  THEN 1 WHEN DA1_PERDES<>0 THEN DA1_PERDES END  DA1_PERDES\n\t\t\t\t\tcQuery  += \"   FROM DA0010 DA0 \n\t\t\t\t\tcQuery  += \"        INNER JOIN DA1010 DA1 \n\t\t\t\t\tcQuery  += \" ON (DA0_CODTAB = DA1_CODTAB)\n\t\t\t\t\t\n\t\t\t\t\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) <> 'AM'\n\t\t\t\t\t\tcQuery  += \"  WHERE DA1_CODTAB IN ('\"+ M->C5_TABELA +\"')\n\t\t\t\t\t\tcQuery  += \"    AND DA1_CODPRO = '\"+AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\n\t\t\t\t\tElse\n\t\t\t\t\t\t//TABELA PADRÃO DE AMOSTRAS\n\t\t\t\t\t\tcQuery  += \"  WHERE DA1_CODPRO = '\"+AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\n\t\t\t\t\t\tcQuery  += \"    AND DA0_CODTAB IN ('000')\n\t\t\t\t\tEndIf-\n\t\t\t\n\t\t\t\t\tcQuery  += \"    AND DA0.D_E_L_E_T_ = ''\n\t\t\t\t\tcQuery  += \"    AND DA1.D_E_L_E_T_ = ''\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\ttcQuery cQuery alias TRB new\n\t\t\t\t\tdbSelectArea(\"TRB\")\n\t\t\t\t\tdbgotop()\n\t\t\t\t\t\n\t\t\t\t\tIf Empty(TRB->DA1_PRCVEN) .and. !GDDeleted(nX)\n\t\t\t\t\t\tAlert(\"[C6_PRCVEN] - Tabela de preço não encontrada! Linha:(\" + Alltrim(str(nX)) +\") Confira a classif. do produto ou Mult.Tabelas preços no Cad. Cliente.\" )\n\t\t\t\t\t\tlRet := .F.\n\t\t\t\t\t\t//sleep(300)\n\t\t\t\t\t\tM->C5_BLQ  := '1'\n\t\t\t\t\tEndIf\n\t\t\t\t\t\n\t\t\t\t\tIf GdFieldGet(\"C6_PRCVEN\",nX) <  TRB->DA1_PRCVEN .and. !GDDeleted(nX)\n\t\t\t\t\t\taAdd(aMsgPrc,\"Cavalete:\"+GdFieldGet(\"C6_YCAVALE\",nX)+\" Tabela de Preço:\" + AllTrim(TRB->DA1_CODTAB) + \"-\"+ AllTrim(TRB->DA0_DESCRI) ) \n\t\t\t\t\t\t//lRet := .F.\n\t\t\t\t\t\tConOut(\"******************************************\" )\n\t\t\t\t\t\tConOut(\"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + Alltrim(str(nX)))\n\t\t\t\t\t\tConOut(\"******************************************\" )\n\t\t\t\t\t\t//sleep(300)\t\n\t\t\t\t\t\tM->C5_BLQ  := '1'\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"Preço menor que a tabela:\"+ AllTrim(TRB->DA1_CODTAB),nX)\t\n\t\t\t\t\tELSE\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\n\t\t\t\t\tEndIf\n\n\t\t\t\t\tGdFieldPut(\"C6_PRCREF\",TRB->DA1_PRCVEN,nX)\n\t\t\t\t\t\n\t\t\t\t\tdbSelectArea(\"TRB\") \n\t\t\t\t\tdbCloseArea()\n\t\t\t\tElse\n\t\t\t\t\tM->C5_BLQ  := ''\n\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\n\t\t\t\tEndIf\n\n\t\t\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\t\t\tReturn(lRet) \n\t\t\t\tEndIf\n\t\t\t\n\t\t\tEndIf\n\t\t\t\t\n\t\tEndIf\n\tNext nX\n\t\n\tcMSG := \"\"\n\t\n\tFor nX:=1 to Len(aMsgPrc)\n\t\t\tIf Empty(cMSG)\n\t\t\t\tcMSG := \"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + chr(13)+chr(10) \n\t\t\tEndIf\n\t\t\tcMSG += aMsgPrc[nX] + chr(13)+chr(10)   \n\tNext nX\n\t\n\t\n\tIf !Empty(cMSG)\n\t\tAlert(cMSG)  \n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\tEndIf\n\t\n\t\n\t/*\n\t***************************************************************************************\n\tVerifica o erro do saldo no cavalete e no pedido \n\t***************************************************************************************\n\t\n\tnQtdPedVend := 0\n\t\n\tFor nX := 1 To Len(aCols)\n\t\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\n\t\tnQtdPedVend := GdFieldGet(\"C6_QTDVEN\",nX))\n\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec \n\t\t\tIf !GDDeleted(nX)\n\t\t\t\t\n\t\t\tEndIf\n\t\tEndIf\n\t\t\n\tNext nX\n\t*/\n\t\n\tConOut(\"******************************************\" )\n\tConOut(\"P.E = MT410TOK Qualitá Validação de cavaletes\" )\n\tConOut(\"******************************************\" )\n\n\t/*\n\t****************************************************************\n\tConferencia do cavaletes duplicados no proprio pedido \n\t****************************************************************\n\t*/\n\taNumCav \t:= {}\t\t\n\taTodCav \t:= {}\n    aGriCav \t:= {}\n    aGriCavDup \t:= {}\n    aGriLSPv    := {}\n    aLSPvLoca   := {}\t\n    aCavZero    := {}\n    aNumCavPro  := {}\n\taCavBenef   := {}\n    \n\tFor nX := 1 To Len(aCols)\n\t\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t//\"0005/0006/0034/0035/0036\"\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\t\n\t\t//ALERT(SB1->B1_COD +\"||\"+ SB1->B1_GRUPO)\n\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec \n\t\n\t\t\tIf !Empty(GdFieldGet(\"C6_YCAVALE\",nX)) .and. !GDDeleted(nX) \n\t\t\t\tIf Empty( aScan(aNumCav,GdFieldGet(\"C6_YCAVALE\",nX)) )\n\t\t\t\t \taAdd(aNumCav   ,GdFieldGet(\"C6_YCAVALE\",nX))\n\t\t\t\t \taAdd(aNumCavPro,{GdFieldGet(\"C6_YCAVALE\",nX),GdFieldGet(\"C6_PRODUTO\",nX)})\n\t\t\t\tEndIf\n\t\t\tEndIf\n\t\t\tIf !GDDeleted(nX)\n\t\t\t\tIf Empty(aScan(aGriCav,AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) + GdFieldGet(\"C6_YCAVALE\",nX) + GdFieldGet(\"C6_LOTECTL\",nX) + GdFieldGet(\"C6_NUMLOTE\",nX)) )\n\t\t\t\t\taAdd(aGriCav , AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) + GdFieldGet(\"C6_YCAVALE\",nX) + GdFieldGet(\"C6_LOTECTL\",nX) + GdFieldGet(\"C6_NUMLOTE\",nX)  )\n\t\t\t\t\taAdd(aGriLSPv, {GdFieldGet(\"C6_LOTECTL\",nX) , GdFieldGet(\"C6_NUMLOTE\",nX) , AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))} )\n\t\t\t\tElse\n\t\t\t\t\tIF LEFT(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)),2)<>'AM'\n\t\t\t\t\t\taAdd(aGriCavDup, AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+GdFieldGet(\"C6_YCAVALE\",nX) + GdFieldGet(\"C6_LOTECTL\",nX) + GdFieldGet(\"C6_NUMLOTE\",nX)  )\n\t\t\t\t\tEndIf\n\t\t\t\tEndIf\n\t\t\tEndIf\n\t\t\t\n\t\tEndIf\n\t\t\n\tNext nX\n\t\n\tcMSG := \"\"\n\tFor nX:=1 to Len(aGriCavDup)\n\t\t\tIf Empty(cMSG)\n\t\t\t\tcMSG := \"Duplicados no pedido atual:\" + chr(13)+chr(10) \n\t\t\tEndIf\n\t\t\tcMSG += \"O item: \" + aGriCavDup[nX] + chr(13)+chr(10)   \n\tNext nX\n\t\n\tIf !Empty(cMSG)\n\t\tAlert(cMSG)\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\tlRet := .F.\n\t\t\n\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\tReturn(lRet) \n\t\tEndIf\n\tEndIf\n\t\n\t/*\n\t****************************************************************\n\tConferencia se todos os itens do cavales estao completos (Se estiverem em cavaletes)\n\tCavalete apagado por completo\n\tA mesma rotina confere se existe produtos sem saldo.\n\t****************************************************************\n\t*/\n\tIf !IsBlind()     \n\t\toProcess:IncRegua1(\"[2-8] - Teste de cavales completos,apagados e sem saldo!\")\n\tEndIf\n\n\t/*\n\tSOMENTE SE O PEDIDO NAO ESTIVER FATURADO \n\t*/\n\tIF LEN(AllTrim(M->C5_NOTA)) <> 9\n\t\n\t\t/*\n\t\tVALIDAÇÃO DO CAMPO DA ULTIMA ATUALIZAÇÃO DO FOLLOWUP\n\t\t*/\n\t\tM->C5_XULDTAU := DDATABASE\n\n\t\tFor nX := 1 To Len(aNumCavPro)\n\t\t\n\t\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t\t//\"0005/0006/0034/0035/0036\"\n\t\t\tdbSelectArea(\"SB1\")\n\t\t\tdbSetOrder(1)\n\t\t\tdbSeek(xFilial(\"SB1\")+ aNumCavPro[nX][2] )\n\t\t\t\n\t\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\n\t\t\n\t\t\t \tcQuery  := \"  SELECT B8_PRODUTO,B1_DESC,B8_YCAVALE,B8_LOTECTL,B8_NUMLOTE,B8_YCAVALE+B8_LOTECTL+B8_NUMLOTE+B8_LOCAL CHAVE,B8_LOCAL,B8_SALDO \n\t\t\t \tcQuery  += \"    FROM SB8010 SB8 INNER JOIN SB1010 SB1 ON (B8_PRODUTO = B1_COD)\n\t\t\t \tcQuery  += \"   WHERE SB8.D_E_L_E_T_ = ''\n\t\t\t \tcQuery  += \"     AND SB1.D_E_L_E_T_ = ''\n\t\t\t \tcQuery  += \"     AND B8_YCAVALE = '\"+aNumCavPro[nX][1]+\"'\n\t\t\t \tcQuery  += \"     AND B8_PRODUTO = '\"+aNumCavPro[nX][2]+\"'\n\t\t\t \tcQuery  += \"     AND B8_ORIGLAN = 'BD'\n\t\t\t \tcQuery  += \"     AND B8_SALDO   <> 0\n\t\t\t \t\n\t\t\t \ttcQuery cQuery alias TRB new\n\t\t\t\tdbSelectArea(\"TRB\")\n\t\t\t\tdbgotop()\n\t\t\t\tDo While !EOF()\n\t\t\t\t\n\t\t\t\t\t/*\n\t\t\t\t\tcavaletes incompletos\n\t\t\t\t\t*/\n\t\t\t\t\tIF !aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE })  \n\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE , TRB->B8_LOCAL} )\n\t\t\t\t\tElse\n\t\t\t\t\t\tif GDDeleted(aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE }))\n\t\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE,TRB->B8_LOCAL} )\n\t\t\t\t\t\tEndIf \n\t\t\t\t\tEndIf\n\t\t\t\t\t\n\t\t\t\t\t/*\n\t\t\t\t\tSem Saldo\n\t\t\t\t\t*/\n\t\t\t\t\tIf TRB->B8_SALDO == 0  \n\t\t\t\t\t\taAdd(aCavZero,{ TRB->CHAVE ,AllTrim(TRB->B8_PRODUTO)+\"-\"+ AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE, TRB->B8_LOCAL} )\n\t\t\t\t\tEndIf\n\t\t\t\t\t\n\t\t\t\t\tdbSelectArea(\"TRB\") \n\t\t\t\t\tdbSkip()\n\t\t\t\tEndDo\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\tCavalete apagado\n\t\t\t\t*/\n\t\t\t\tdbSelectArea(\"TRB\")\n\t\t\t\tdbgotop()\n\t\t\t\tIf EOF() .And.  !Empty(aNumCav[nX])\n\t\t\t\t\n\t\t\t\t\tIF !aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE })  \n\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE, TRB->B8_LOCAL} )\n\t\t\t\t\tElse\n\t\t\t\t\t\tif GDDeleted(aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE }))\n\t\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE , TRB->B8_LOCAL} )\n\t\t\t\t\t\tEndIf \n\t\t\t\t\tEndIf\n\t\t\t\t\t\n\t\t\t\tEndIf\n\n\t\t\t\tdbSelectArea(\"TRB\") \n\t\t\t\tdbCloseArea()\n\t\t\tEndIf\n\n\n\t\t\t/*\n\t\t\tCavalete em beneficiamento não pode \n\t\t\tProibe\n\t\t\t*/\n\t\t\tIf aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] }) <> 0 .AND. M->C5_TIPO = 'B'\n\t\t\t\taAdd(aCavBenef,{ aNumCavPro[nX][1] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][3] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][5] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][10] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][36] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][24]} )\n\t\t\tEndIf\n\t\t\t\n\t\tNext nX\n\n\n\t\tcMSG := \"\"\n\n\t\t/*\n\t\tBeneficiamento\n\t\t*/\t\t\n\t\tFor nX:=1 to Len(aCavBenef)\n\t\t\tIf Empty(cMSG)\n\t\t\t\tcMSG := \"Pedido de Beneficiamento com cavaletes:\" + chr(13)+chr(10) \n\t\t\tEndIf\t\t\t\n\t\t\tcMSG +=     \"  ->\" + AllTrim(aCavBenef[nX][2]) + \" Cav.[\" + Alltrim(aCavBenef[nX][3]) + \"] Lote[\" + Alltrim(aCavBenef[nX][4]) + \"] SubLote[\" + Alltrim(aCavBenef[nX][5]) + \"] Local [\"+ Alltrim(aCavBenef[nX][6]) +\"].\"+ chr(13)+chr(10)   \n\t\tNext nX\n\n\t\t/*\n\t\tIncompletos/Apagado\n\t\t\n\t\tFor nX:=1 to Len(aTodCav)\n\t\t\tIf Empty(cMSG)\n\t\t\t\tcMSG := \"Cavaletes incompletos/Apagado:\" + chr(13)+chr(10) \n\t\t\tEndIf\t\t\t\n\t\t\tcMSG +=     \"  ->\" + AllTrim(aTodCav[nX][2]) + \" Cav.[\" + Alltrim(aTodCav[nX][3]) + \"] Lote[\" + Alltrim(aTodCav[nX][4]) + \"] SubLote[\" + Alltrim(aTodCav[nX][5]) + \"] Local [\"+ Alltrim(aTodCav[nX][6]) +\"].\"+ chr(13)+chr(10)   \n\t\tNext nX\n\t\t*/\n\t\tIf !Empty(cMSG)\n\t\t\tAlert(cMSG)\n\t\t\t//AVISO(\"Cavaletes incompletos:\", cMSG , { \"Fechar\" }, 3)\n\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\t\tlRet := .F.\n\n\t\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\t\tReturn(lRet)\n\t\t\tEndIf \n\t\tEndIf\n\t\n\t\t/*\n\t\tSem Saldo\n\t\t*/\n\t\tcMSG := \"\"\n\t\tFor nX:=1 to Len(aCavZero)\n\t\t\tIf Empty(cMSG)\n\t\t\t\tcMSG := \"Produtos sem saldo:\" + chr(13)+chr(10) \n\t\t\tEndIf\t\t\t\n\t\t\tcMSG +=     \"  ->\" + AllTrim(aCavZero[nX][2]) + \" Cav.[\" + Alltrim(aCavZero[nX][3]) + \"] Lote[\" + Alltrim(aCavZero[nX][4]) + \"] SubLote.[\" + Alltrim(aCavZero[nX][5]) + \"]\"+ chr(13)+chr(10)   \n\t\tNext nX\n\t\t\n\t\tIf !Empty(cMSG)\n\t\t\tIF (!Empty(C5_NOTA).Or.C5_LIBEROK=='E' .And. Empty(C5_BLQ))\n\t\t\t\tAlert(cMSG)\n\t\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\t\tELse \n\t\t\t\tAlert(cMSG)\n\t\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\t\t\t\n\t\t\t\tlRet := .F.\n\n\t\t\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\t\t\tReturn(lRet)\n\t\t\t\tEndIf \n\t\t\tEndIf\n\t\tEndIf\n\t\t\n\tEndIf\n\t\n\t/*\n\t****************************************************************\n\tConferencia se existe estes Lote/SubLotes em um PVenda salvo\n\t****************************************************************\n\t*/\n\tIf !IsBlind()     \n\t\toProcess:IncRegua1(\"[3-8] - Conferência se existe  Lote/SubLotes em um P.Venda salvo!\")\n\tENDIF\n\n\tFor nX := 1 To Len(aGriLSPv)\n\t\t \t\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t//\"0005/0006/0034/0035/0036\"\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(aGriLSPv[nX][3]) )\n\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec .AND. !Empty(aGriLSPv[nX][1])\n\t\t \tcQuery  := \" SELECT C6_NUM,C6_ITEM,C6_LOTECTL,C6_NUMLOTE ,C6_DESCRI \n\t\t \tcQuery  += \"   FROM SC6010 SC6 INNER JOIN SC5010 SC5 ON (C5_FILIAL = C6_FILIAL AND C5_NUM = C6_NUM)\n\t\t \tcQuery  += \"  WHERE SC6.D_E_L_E_T_ = ''\n\t\t \tcQuery  += \"    AND SC5.D_E_L_E_T_ = ''\n\t\t \tcQuery  += \"    AND C5_TIPO = 'N'\n\t\t \tcQuery  += \"    AND C6_NOTA = ''\n\t\t \tcQuery  += \" \tAND C6_LOTECTL = '\"+aGriLSPv[nX][1]+\"'\n\t\t \tcQuery  += \" \tAND C6_NUMLOTE = '\"+aGriLSPv[nX][2]+\"'\n\t\t \tcQuery  += \"    AND C6_NUM <> '\"+AllTrim(M->C5_NUM)+\"'\n\t\t \t\n\t\t \ttcQuery cQuery alias TRB new\n\t\t\tdbSelectArea(\"TRB\")\n\t\t\tdbgotop()\n\t\t\tDo While !EOF()\n\t\t\t\n\t\t\t\tIf !aScan(aLSPvLoca,{|x|alltrim(x[1]) == AllTrim(TRB->C6_NUM) })\n\t\t\t\t\taAdd(aLSPvLoca,{ AllTrim(TRB->C6_NUM) , TRB->C6_ITEM,TRB->C6_LOTECTL , TRB->C6_NUMLOTE , AllTrim(TRB->C6_DESCRI) } )\n\t\t\t\tElse\n\t\t\t\t\taLSPvLoca[aScan(aLSPvLoca,{|x|alltrim(x[1]) == AllTrim(TRB->C6_NUM) })][2] := aLSPvLoca[aScan(aLSPvLoca,{|x|alltrim(x[1]) == AllTrim(TRB->C6_NUM) })][2] + \",\" + TRB->C6_ITEM\n\t\t\t\tEndIf\n\t\t\t\t\n\t\t\t\tdbSelectArea(\"TRB\") \n\t\t\t\tdbSkip()\n\t\t\tEndDo\n\t\t\t\n\t\t\tdbSelectArea(\"TRB\") \n\t\t\tdbCloseArea()\n\t\t\n\t\tEndIf\n\t\t\n\tNext nX\n\t\n\tcMSG := \"\"\n\tFor nX:=1 to Len(aLSPvLoca)\n\t\t\tIf Empty(cMSG)\n\t\t\t\tcMSG := \"Itens encontrados em outro P.Venda:\" + chr(13)+chr(10) \n\t\t\tEndIf\n\t\t\tcMSG += \"  -> P.Venda:\" + aLSPvLoca[nX][1] +\" Item:\"+ aLSPvLoca[nX][2] +\" Prod.:\" + aLSPvLoca[nX][5] + chr(13)+chr(10)   \n\tNext nX\n\t\n\tIf !Empty(cMSG)\n\t\tAlert(cMSG)\n\t\t//AVISO(\"Itens encontrados em outro P.Venda:\", cMSG , { \"Fechar\" }, 3)\n\t\t//sleep(300)\t\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\t\n\t\tlRet := .F.\n\n\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\tReturn(lRet)\n\t\tEndIf \n\tEndIf\n\t\n\t/*\n\t*******************************************\n\tValidação Valores fiscais e descontos e totais\n\t*******************************************\n\t*/\n\tIf !IsBlind()     \n\t\toProcess:IncRegua1(\"[4-8] - Conferência fiscal, descontos e valores!\")\n\tENDIF\n\n\taDadosGrv := FCalImp(@oProcess)\n\t\n\tIf LEN(aDadosGrv)>0\n\t\tM->C5_XVALEXT := AllTrim(Extenso((aDadosGrv[4] + aDadosGrv[3]) ,.f.,M->C5_MOEDA,,\"3\",.t.,.f.))\n\t\tM->C5_XTOTAL  := (aDadosGrv[4] + aDadosGrv[3]) -  M->C5_DESCONT \n\t\tM->C5_XDESCON := aDadosGrv[2]  + M->C5_DESCONT \n\t\tM->C5_XVLRFIN := (aDadosGrv[4] + aDadosGrv[3]) -  M->C5_DESCONT \n\t\tM->C5_XDESPES := aDadosGrv[4]\n\t\t//M->C5_XSEGURO := aDadosGrv[5]\n\tEndIf \n\t\n\t\t\n\t/*\n\t*******************************************\n\tValidação do peso para Amostras \n\t*******************************************\n\t*/\n\tIf !IsBlind()  \n\t\toProcess:IncRegua1(\"[5-8] - Validação do peso para Amostras!\")\n\tEndIf\n\n\tcMSG := \"\"\n\t\n\tFor nX := 1 To Len(aCols)\n\t\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t//\"0005/0006/0034/0035/0036\"\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\n\t\n\t\t\tIf Empty(GdFieldGet(\"C6_XPESO\",nX)) .and. !GDDeleted(nX) .and. SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) == 'AM'\n\t\t\t\n\t\t\t\tIf Empty(cMSG)\n\t\t\t\t\tcMSG := \"Amostras sem Peso:\" + chr(13)+chr(10) \n\t\t\t\tEndIf\n\t\t\t\tcMSG += \"  -> Item do PV:\" + GdFieldGet(\"C6_ITEM\",nX) + \" Prod.:\" + AllTrim(GdFieldGet(\"C6_DESCRI\",nX)) + chr(13)+chr(10)  \n\t\t\t\t\t\t\t\t\n\t\t\tEndIf\n\t\t\t\n\t\t\tIf !GDDeleted(nX) .and. (SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) == 'AM' .Or. AllTrim(GdFieldGet(\"C6_YCLASSI\",nX)) == \"A\")\n\t\t\t\tM->C5_BLQ  := '1'\n\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"Produto Amostra! Requer aprovação.\" ,nX)\n\t\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(\"Produto Amostra! Requer aprovação.\") + chr(13)+chr(10)\n\t\t\t\tcMSG := AllTrim(cMSG) + AllTrim(\"Produto Amostra! Requer aprovação.\") + chr(13)+chr(10)\n\t\t\tEndIf\n\t\t\t\n\t\tEndIf\n\tNext nX\n\t\n\tIf M->C5_DESCONT  <> 0\n\t\tM->C5_BLQ  := '1'\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(\"O Campo de desconto de indenização foi preenchido. Ped. Venda requer aprovação.\" + chr(13)+chr(10))\n\t\tcMSG := AllTrim(cMSG) + \"O Campo de desconto de indenização foi preenchido. Ped. Venda requer aprovação.\" + chr(13)+chr(10)\n\tEndIf\n\t\n\tIF !EMPTY(cMSG)\n\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\t\n\t\tIf !IsBlind()  \n\t\t\tIf MsgYesNo(cMSG + chr(13)+chr(10)+ \"Deseja continuar?\" )\n\t\t\t\tlRet := .t.\n\t\t\tElse\n\t\t\t\tlRet := .F.\n\t\t\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\t\t\tReturn(lRet)\n\t\t\t\tEndIf \n\t\t\tEndIf\n\t\tEndIf\n\n\tEndIf\n\t\n\t/*\n\t*******************************************\n\tValidação para não permitir salvar o pedido com chapas sem cavaletes \n\t*******************************************\n\t*/\n\tIf !IsBlind()\n\t\toProcess:IncRegua1(\"[6-8] - Chapas sem cavaletes!\")\n\tEndIf\n\n\tcMSG := \"\"\n\t\n\t/*\n\tNão validar para filial de SP \n\tnão validar para Pedidos de Transferencia\n\t*/\n\tIF M->C5_YTIPO <> \"TF\" .AND. SubString(CNUMEMP,1,8) == \"01010101\" .and. M->C5_TIPO <> 'B'\n\n\t\tFor nX := 1 To Len(aCols)\n\t\t\n\t\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t\t//\"0005/0006/0034/0035/0036\"\n\t\t\tdbSelectArea(\"SB1\")\n\t\t\tdbSetOrder(1)\n\t\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )  \n\t\t\t\n\t\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\n\t\t\n\t\t\t\tIf Empty(GdFieldGet(\"C6_YCAVALE\",nX)) .and. !GDDeleted(nX) .and. SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) == 'CH'\n\t\t\t\t\n\t\t\t\t\tIf Empty(cMSG)\n\t\t\t\t\t\tcMSG := \"Chapas sem cavaletes:\" + chr(13)+chr(10) \n\t\t\t\t\tEndIf\n\t\t\t\t\tcMSG += \"  -> Item do PV:\" + GdFieldGet(\"C6_ITEM\",nX) + \" Prod.:\" + AllTrim(GdFieldGet(\"C6_DESCRI\",nX)) + chr(13)+chr(10)  \n\t\t\t\t\t\n\t\t\t\tEndIf\n\t\t\tEndIf\n\t\tNext nX\n\t\t\n\t\tIf !Empty(cMSG)\n\t\t\tAlert(cMSG)\n\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)  \n\t\t\t\n\t\t\tlRet := .F.\n\n\t\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\t\tReturn(lRet)\n\t\t\tEndIf \n\t\tEndIf\n\n\tEndIf\n\n\t/*\n\t*******************************************\n\tValidação para não permitir salvar o pedido fora dos almoxarificados ou locais determinados \n\t*******************************************\n\t*/\n\tIf !IsBlind()\n\t\toProcess:IncRegua1(\"[7-8] - Almoxarifado não permitido !\")\n\tENDIF\n\n\tcMSG := \"\"\n\n\tFor nX := 1 To Len(aCols)\n\t\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t//\"0005/0006/0034/0035/0036\"\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\n\t\n\t\t\tIf !GdFieldGet(\"C6_LOCAL\",nX) $ \"03/05\"  .and. !GDDeleted(nX) .and. SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) $ 'CH/AM'\n\t\t\t\n\t\t\t\tIf Empty(cMSG)\n\t\t\t\t\tcMSG := \"Almoxarifado não permitido ! \" + chr(13)+chr(10) \n\t\t\t\tEndIf\n\t\t\t\tcMSG += \"  -> Item do PV:\" + GdFieldGet(\"C6_ITEM\",nX) + \" Prod.:\" + AllTrim(GdFieldGet(\"C6_DESCRI\",nX)) + chr(13)+chr(10)  \n\t\t\t\t\n\t\t\tEndIf\n\t\tEndIf\n\tNext nX\n\t\n\tIf !Empty(cMSG)\n\t\tAlert(cMSG)\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\t\n\t\tlRet := .F.\n\n\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\tReturn(lRet)\n\t\tEndIf \n\tEndIf\n\n\n    /*\n\t*******************************************\n\tValidação dos dados de condição de pagamento\n\t*******************************************\n\t*/\n\tIf !IsBlind()\n\t\toProcess:IncRegua1(\"[8-8] - Validação dos dados de condição de pagamento!\")\n\tEndIf\n\n\tM->C5_CONDPAG := u_ClintToMob(\"PG\")\n\n\tIf ! M->C5_TIPO $ \"D/B\"\n\t\tdbSelectArea(\"SA1\")\n\t\tdbSetOrder(1)\n\t\tIf dbSeek(xFilial(\"SA1\")+M->C5_CLIENTE+M->C5_LOJACLI)\n\t\t\tIf ! AllTrim(M->C5_CONDPAG) $ AllTrim(SA1->A1_XCONDPG)\n\n\t\t\t\tIf Empty(cMSG)\n\t\t\t\t\tcMSG := \"Pedido bloqueado! Condição de pagamento não permitida. Cond. Pag:[\"+ M->C5_CONDPAG +\"].\" + chr(13)+chr(10) \n\t\t\t\tEndIf\n\n\t\t\tEndIf\n\t\tEndIf \n\n\tEndIf\n\n\tIf !Empty(cMSG)\n\t\tAlert(cMSG)\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\tM->C5_BLQ     := \"1\"\n\tEndIf\n\t\n\t/*\n\tVALIDAÇÃO DO MOBGRAN\n\t*/\n\tIf  FunName() $ \"GROA014\" .And. INCLUI == .T.\n\t\t\n\t\tIf !Empty(M->C5_XIDMOB)\n\n\t\t\t/*\n\t\t\tVerifica se existe a chave no mobgran.\n\t\t\t*/\n\t\t\tcQuery  := \" SELECT * FROM ZSA010 WHERE D_E_L_E_T_ = '' AND ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\"' AND ZSA_STATUS ='ATIVA'\n\t\t\t\n\t\t\ttcQuery cQuery alias TRB new\n\t\t\tdbSelectArea(\"TRB\")\n\t\t\tdbgotop()\n\t\t\t\n\t\t\tIf EOF() \n\t\t\t\tlRet := .F.\n\t\t\tEndIf\n\n\t\t\tIf TRB->ZSA_STATUS <> 'ATIVA'\n\t\t\t\tlRet := .F.\n\t\t\tEndIf\n\t\t\t\n\t\t\tIf lRet == .F.\n\t\t\t\tAlert(\"Chave não encontrada ou Status:(>>\"+ TRB->ZSA_STATUS +\"<<) no MobGran!\")\n\t\t\t\tReturn(lRet)\t\n\t\t\tEndIf\n\n\t\t\tdbSelectArea(\"TRB\") \n\t\t\tdbCloseArea()\t\n\n\t\tElse\n\t\t\t\n\t\t\tlRet := .F.\n\t\t\tAlert(\"Chave do MobGran em branco! Favor informar um código.\")\n\t\t\tReturn(lRet)\n\n\t\tEndIf\n\n\tElseIf FunName() $ \"GROA013\" \n\t\tIf AllTrim(M->C5_XIDMOB) == '-'\n\t\t\tlRet := .T.\n\t\telse\n\t\t\tcQuery  := \" SELECT * FROM ZSA010 WHERE D_E_L_E_T_ = '' AND ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\"' AND ZSA_STATUS ='ATIVA'\n\t\t\t\n\t\t\ttcQuery cQuery alias TRB new\n\t\t\tdbSelectArea(\"TRB\")\n\t\t\tdbgotop()\n\t\t\t\n\t\t\tIf EOF() \n\t\t\t\tlRet := .F.\n\t\t\tEndIf\n\n\t\t\tIf TRB->ZSA_STATUS <> 'ATIVA'\n\t\t\t\tlRet := .F.\n\t\t\tEndIf\n\n\t\t\tIf lRet == .F.\n\t\t\t\tAlert(\"Chave não encontrada ou Status:(>>\"+ TRB->ZSA_STATUS +\"<<) no MobGran!\")\n\t\t\t\tReturn(lRet)\t\n\t\t\tEndIf\t\t\t\n\t\t\t\n\t\t\tdbSelectArea(\"TRB\") \n\t\t\tdbCloseArea()\t\n\t\tEndIf\n\tEndIf\n\n\t/*\n\tEnvio de aviso de alteração de pedidos \n\t*/\n\tIF        AllTrim(C5_XSHOWFO) = 'S';\n\t\t.AND. AllTrim(C5_XPENDEN) $ 'COM/LOG';\n\t\t.AND. AllTrim(C5_XFOLLST) = 'BOOKING SOLICITADO'\n\n\t\t/*\n\t\tEMAIL\n\t\t*/\n\t\tIf SC5->C5_YTIPO == \"ME\"\n\t\t\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\n\t\tElse\n\t\t\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003_P&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\n\t\tEndIf\n\t\t\n\t\tConOut(\"Gerando relatório! Ped. Venda:\" + AllTrim(SC5->C5_NUM) )\n\t\tsleep(300)\n\t\tConOut(\"Gerando e-mail! Ped. Venda:\" + AllTrim(SC5->C5_NUM) )\n\t\t\n\t\tTCSPExec(\"SP_SENDMAIL\",'ITINGA',\"backoffice.es@qualitagroup.com;bruno.lage@grupoqualita.com.br;arlindo.pelissari@grupoqualita.com.br\",'Pedido BOOKING SOLICITADO ! Código:' + SC5->C5_NUM ,'PEDIDO BOOKING SOLICITADO!'+ \"<br>\" +'CÓDIGO:' + SC5->C5_NUM + \"<br>\" ,'D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF')\n\t\t//TCSPExec(\"SP_SENDMAIL\",'ITINGA',\"bruno.lage@grupoqualita.com.br\",'Pedido BOOKING SOLICITADO ! Código:' + SC5->C5_NUM ,'PEDIDO BOOKING SOLICITADO!'+ \"<br>\" +'CÓDIGO:' + SC5->C5_NUM + \"<br>\" ,'D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF')\n\n\t\t//sleep(500)\n\n\t\t/*\n\t\tWHATSAPP\n\t\t*/\n\t\t/*\n\t\tU_SWENARWAP(\"5527981188913\", \"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM),\"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM)   ,\"RQ0003a\"           ,\"PDF\",\"\\RELINWEB\\RQ0003a.PDF\")\n\t\tsleep(500)\n\t\tU_SWENARWAP(\"5533984022125\", \"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM),\"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM)   ,\"RQ0003a\"           ,\"PDF\",\"\\RELINWEB\\RQ0003a.PDF\")\n\t\t*/\n\tEnd\n\n\t/*\n\tIntegração liberação Pedido de venda Com o Mobgran por tabela\n\tTABELA - ZSC\n\t*/\n\tIf Empty(M->C5_XMOTBLQ) \n\t\t//M->C5_XMOTBLQ := \"06 = Aguardando liberação do vendedor!\" + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\tM->C5_BLQ     := \"\"\n\t\tfTPBLQ        := .T.\n\tEndIf\n\n\tif (Empty(M->C5_NOTA) .OR. M->C5_NOTA == 'XXXXXXXXX' )\n\t\tIF (!Empty(M->C5_XIDMOB) .Or. M->C5_XIDMOB <> '-') \n\t\t\tu_MIntMGLib(M->C5_NUM , M->C5_XIDMOB , \"SC5\" , M->C5_XMOTBLQ , M->C5_FILIAL , M->C5_XTOTAL , fTPBLQ )\n\t\tEndIf\n\tEndIf\n\n\tConOut(\"******************************************\" )\n\tConOut(\"Final P.E = MT410TOK Qualitá\" )\n\tConOut(\"******************************************\" )\n\t\n\tSetKey(VK_F5,)\n\tSetKey(VK_F6,)\nEndIf\n\nIF (lRet == .F. .and. IsBlind()) \n\tlRet := .T.\nEndIf \n\nReturn(lRet)\n\n\nUser Function MIntMGLib(cPedido,XIdMobP,_cTabela, xMotBlq, cMobFilial , nXtotal , fTPBLQ)\n********************************************************************************************************************\n* /* User Integração com MobGran Liberação de pedidos por tabela ZSA ZSC */\n* /**/\n* //\n***\n\nLocal oJson     := JsonObject():New()\nLocal cCliente  := \"\"\nLocal cLoja     := \"\"\nLocal nValor    := 0\nLocal cCondPg   := \"\"\nLocal lSemFin   := .F.\n\n\t\tcQuery := \" SELECT  CAST(ZSC_RJSON AS VARCHAR(8000)) RJSON from \"+ RetSqlName(\"ZSC\")+ \" WHERE ZSC_IDMOBP = '\"+XIdMobP+\"' AND ZSC_TIPO <> 'B' AND ZSC_TIPO = '2' AND ZSC_RJSON IS NOT NULL\"\n\t\n\t\ttcQuery cQuery alias TRB_JSON new\n\t\tdbSelectArea(\"TRB_JSON\")\n\t\tdbgotop()\n\n\t\toJSon:fromJson(TRB_JSON->RJSON)\n\t\n\t\tcCliente  := iif(empty(oJson:GetJSonObject('cliente')),\"\",oJson:GetJSonObject('cliente'))\n\t\tcLoja     := iif(empty(oJson:GetJSonObject('loja'))   ,\"\",oJson:GetJSonObject('loja'))\n\n\t\tif !Empty(oJson:GetJSonObject('cliente'))\n\t\t\tnValor    := round(val(oJson:GetJSonObject('valorTotal')),2) \n\t\tElse\n\t\t\tnValor    := 0\n\t\tEndIf\n\n\t\tcCondPg   := iif(empty(oJson:GetJSonObject('condicaoPagamento')),\"\",oJson:GetJSonObject('condicaoPagamento'))\n\n\t\tdbSelectArea(\"TRB_JSON\") \n\t\tdbCloseArea()\t\n\t\tIf !Empty(oJson:GetJSonObject('cliente'))\n\t\t\tIf \tcCliente+cLoja       == m->C5_CLIENTE+m->C5_LOJACLI .And.;\n\t\t\t\tAllTrim(Str(nValor)) >= AllTrim(Str(nXTotal))    \t.And.;\n\t\t\t\tcCondPg              == m->C5_CONDPAG\n\n\t\t\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSC\")\n\t\t\t\tcQuery += \"    SET ZSC_TIPO = 'B'\n\t\t\t\tcQuery += \"  WHERE ZSC_IDMOBP  ='\"+ AllTrim(XIdMobP) +\"'\n\t\t\t\tcQuery += \"    AND ZSC_TIPO < '2'\n\t\t\t\t\n\t\t\t\tlSemFin:= .F.\n\t\t\tElse\n\t\t\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSC\")\n\t\t\t\tcQuery += \"    SET ZSC_TIPO = 'B'\n\t\t\t\tcQuery += \"  WHERE ZSC_IDMOBP  ='\"+ AllTrim(XIdMobP) +\"'\n\n\t\t\t\tlSemFin:= .T.\n\t\t\tEndIf \n\t\tElse\n\t\t\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSC\")\n\t\t\t\tcQuery += \"    SET ZSC_TIPO = 'B'\n\t\t\t\tcQuery += \"  WHERE ZSC_IDMOBP  ='\"+ AllTrim(XIdMobP) +\"'\n\n\t\t\t\tlSemFin:= .T.\t\n\t\tEndIf\t\n\t\t/*\n\t\tExecucao background do codigo sql\n\t\t*/\n\t\tTcSqlExec(cQuery)\n\n\t\t//regras\n\t\tIf fTPBLQ == .F.\n\t\t\tIf  RecLock(\"ZSC\",.T.)\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\n\t\t\t\t\tReplace ZSC_TIPO   With \"1\"\n\t\t\t\t\tReplace ZSC_MSGRET With IIF(fTPBLQ == .F. ,xMotBlq,\"\" )\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\n\t\t\t\t\tReplace ZSC_SITUAC With IIF(fTPBLQ == .F. ,\"\"    ,\"X\" )\n\t\t\t\t\tReplace ZSC_FLUXOM With IIF(fTPBLQ == .F. ,\"S\"    ,\"\" )\n\t\t\t\tMsUnLock()\n\t\t\tEndIf \n\t\tEndIf\n\t\t//financeiro\n\t\tIf lSemFin \n\t\t\tIf  RecLock(\"ZSC\",.T.)\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\n\t\t\t\t\tReplace ZSC_TIPO   With \"2\"\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\n\t\t\t\tMsUnLock()\n\t\t\tEndIf \n\t\t\t\n\t\t\tIf  RecLock(\"ZSC\",.T.)\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\n\t\t\t\t\tReplace ZSC_TIPO   With \"3\"\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\n\t\t\t\tMsUnLock()\n\t\t\tEndIf \n\n\t\t\tIf  RecLock(\"ZSC\",.T.)\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\n\t\t\t\t\tReplace ZSC_TIPO   With \"4\"\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\n\t\t\t\tMsUnLock()\n\t\t\tEndIf \n\n\t\t\tIf  RecLock(\"ZSC\",.T.)\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\n\t\t\t\t\tReplace ZSC_TIPO   With \"5\"\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\n\t\t\t\tMsUnLock()\n\t\t\tEndIf \n\n\t\t\t/*\n\t\t\tPendencia Vendedor\n\t\t\t*/ \n\t\t\tIf  RecLock(\"ZSC\",.T.)\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\n\t\t\t\t\tReplace ZSC_TIPO   With \"6\"\n\t\t\t\t\tReplace ZSC_MSGRET With IIF(fTPBLQ == .t. ,xMotBlq,\"\")\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\n\t\t\t\t\tReplace ZSC_FLUXOM With IIF(fTPBLQ == .t. ,\"S\"    ,\"\")\n\t\t\t\tMsUnLock()\n\t\t\tEndIf \n\t\tEndIf\n\nReturn()\n\n\nUser Function ClintToMob(cTipo)\n****************************************************************************************************************\n* /*Gatilho C5_XIDMOB*/    \n*\n****\nLocal aArea     := GetArea() \nLocal cQuery    := \" SELECT * FROM ZSA010 WHERE D_E_L_E_T_ = '' AND ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\" ' AND ZSA_STATUS ='ATIVA'\nLocal cDadosRet := \"\" \n\ntcQuery cQuery alias TRBidMob new\ndbSelectArea(\"TRBidMob\")\ndbgotop()\n\nConOut(\"****PRINCIPAL**ClintToMob*************\")\n\nIf !EOF()\n\tIf cTipo == \"PG\"\n\t\tcDadosRet  := AllTrim(TRBidMob->ZSA_CPAG)\n\tElse\n\t\tcDadosRet  := AllTrim(TRBidMob->ZSA_CLIENT)\n\tEndIf\nElse\n\tcDadosRet := M->C5_CONDPAG\nEndIf\n\ndbSelectArea(\"TRBidMob\") \ndbCloseArea()\t\n\nRestArea(aArea)\n\nReturn(cDadosRet)\n\n                                                                       \nStatic Function FCalImp(oProcess) \n****************************************************************************************************************\n*    \n*\n****\n************************************** \n* Calculo totais e Impostos\n************************************** \nLocal aArea     := GetArea() \nLocal nX        := 0 \n//Local nPrcTot   := 0\nLocal _aTotalNF := {} \nLocal nValDesc  := 0\nLocal nItem:= 0                             \n\n//IF FunName() == Alltrim(\"GROA014\")\n\n\tConOut(\"************************************\")\n\tConOut(\"MaFisIni\")                 \n\tConOut(\"************************************\")\n\t\n\t// Inicia rotina de calculo dos impostos \n\tMaFisIni(Iif(Empty(M->C5_CLIENT),M->C5_CLIENTE,M->C5_CLIENT),;\t// 1-Codigo Cliente/Fornecedor \n\t     \tM->C5_LOJAENT,;          \t\t\t\t\t\t\t\t// 2-Loja do Cliente/Fornecedor \n\t     \tIIf(M->C5_TIPO$\"DB\",\"F\",\"C\"),;                    \t\t// 3-C:Cliente , F:Fornecedor \n\t     \tM->C5_TIPO,;                    \t\t\t\t\t\t// 4-Tipo da NF \n\t     \tM->C5_TIPOCLI,;          \t\t\t\t\t\t\t\t// 5-Tipo do Cliente/Fornecedor \n\t     \tNil,; \n\t     \tNil,; \n\t     \tNil,; \n\t     \tNil,; \n\t     \t\"GROA014\") \n\t\n     If (Inclui .Or. Altera) \n               nItem:= 0\n\t   \n\t\t\t   ConOut(\"************************************\")\n\t\t\t   ConOut(\"MaFisAdd\")                                  \n\t\t\t   ConOut(\"************************************\") \n\t\t\t   \n\t\t\t   If !IsBlind()\n\t\t\t\t\toProcess:SetRegua2(len(aCols))\n\t\t\t   ENDIF\n\t\t\t   \n               For nX := 1 to len(aCols) \n                    If !GDDeleted(nX)\t\t\t\t\t\t\t//Validar se o registro nao esta deletado \n                         \n                         nItem:= nItem + 1 \t\t\t\t\t\t// Quantidade para recalcular \n                         \n                         // Adiciona dados dos produtos na rotina de calculo de impostos       \n                         MaFisAdd( GdFieldGet(\"C6_PRODUTO\",nX),; \n                                   GdFieldGet(\"C6_TES\"    ,nX),; \n                                   GdFieldGet(\"C6_QTDVEN\" ,nX),; \n                                   GdFieldGet(\"C6_PRCVEN\" ,nX),; \n                                   0,; //GdFieldGet(\"C6_VALDESC\",nX)\n                                   \"\",; \n                                   \"\",; \n                                   0,; \n                                   0,; \n                                   0,; \n                                   0,; \n                                   0,; \n                                   GdFieldGet(\"C6_VALOR\",nX),; \n                                   0,; \n                                   0,; \n                                   0)\n                               \n                         nValDesc := nValDesc + Round(GdFieldGet(\"C6_VALDESC\",nX),2)\n\t\t\t\t\t\t \n\t\t\t\t\t\t If !IsBlind()  \n                         \toProcess:IncRegua2(\"Cavalete [\"+GdFieldGet(\"C6_YCAVALE\",nX)+\"] Lote-Chapa: \"+AllTrim(GdFieldGet(\"C6_LOTECTL\",nX))+\"-\"+GdFieldGet(\"C6_NUMLOTE\",nX)  )\n                         ENDIF\n\n                         //ConOut(nValDesc)\n                         //ConOut(nItem)\n                    EndIf \n                \n               Next nX                \n     EndIf \n     \n     /*\n     _nIcmsRet := 0 \n     For nLo:=1 To nItem           \n          _nIcmsRet += MaFisRet(nLo,\"LF_ICMSRET\") // Retorna valor da ST  \n     Next nLo       \n     */\n\t   \n\t aAdd(_aTotalNF,MaFisRet(,\"NF_TOTAL\"))\n\t aAdd(_aTotalNF,nValDesc)\n\t aAdd(_aTotalNF,MaFisRet(,\"NF_BASEDUP\"))\n \t aAdd(_aTotalNF,M->C5_DESPESA)\n\t //aAdd(_aTotalNF,MaFisRet(,\"NF_SEGURO\"))  \n\t\n\t MaFisEnd() \t// Encerra rotina de calculo de impostos \n\n//EndIf\n\nRestArea(aArea) \n\nReturn(_aTotalNF)\n\n\nUser Function GMA410MNU() \n****************************************************************************************************************\n*    \n*\n****\nLocal aButtons := {}\n\nIF FunName() == Alltrim(\"GROA014\")\t\n\t//Gerando invoice\n\taRotina[16][1] := \"Gerar Invoice\"\n\taRotina[16][2] := 'Processa({|| u_MNumInv()},,\"Gravando....\")'\n\t\n\t//\"Imprime Packing List\"\n\t//aRotina[20][2] := \"u_RelInWeb('RQ0002','Imprime Packing List [RQ0002]','u_fParAut(2)')\"\n\taRotina[17][2][5][2] := \"u_RelInWeb('RQ0002','Imprime Packing List [RQ0002]','u_fParAut(2)')\"\n\t\n\t//\"Imprime Commercial Invoice\" \n\t//aRotina[19][2] := \"u_RelInWeb('RQ0004','Imprime Invoice (CH/AM)[RQ0004]','u_fParAut(4)')\"\n\taRotina[17][2][4][2] := \"u_RelInWeb('RQ0004','Imprime Invoice (CH/AM)[RQ0004]','u_fParAut(4)')\"\n\t\n\t//\"Imprime Proforma Invoice\"\n\t//aRotina[18][2] := \"u_RelInWeb('RQ0003','Imprime Proforma Invoice [RQ0003]','u_fParAut(2)')\"\t \n\taRotina[17][2][3][2] := \"u_RelInWeb('RQ0003','Imprime Proforma Invoice [RQ0003]','u_fParAut(2)')\"\n\t\n\t//aRotina[17][2] := \"U_proformaInvoice()\"//#Brittes Alterada chamada da Funcao\n\t//\"Imprime Pedido de Venda\"\n\taRotina[17][2][1][1] := \"Pre-Nota\" \n\taRotina[17][2][1][2] := \"u_MATR730Q()\"\n\t\n\t//\"Imprime Romaneio\"\n\taRotina[17][2][2][1] := \"Imprime Invoice (BLOCOS)\"\n\taRotina[17][2][2][2] := \"u_RelInWeb('RQ0004_BLOCK','Imprime Invoice (BLOCOS) [RQ0004_BLOCK]'    ,'u_fParAut(4)')\"\n\t//aadd(aRotina,{'Imprime Invoice (BLOCOS)',\"u_RelInWeb('RQ0004_BLOCK','Imprime Invoice (BLOCOS) [RQ0004_BLOCK]'    ,'u_fParAut(4)')\" , 0 , 3,0,NIL})\n\t\nElseIf FunName() == Alltrim(\"GROA013\")\n\n\taadd(aRotina,{'Imp. Packing List',\"u_RelInWeb('RQ0002_P','Imprime Packing List [RQ0002_P]'    ,'u_fParAut(2)')\" , 0 , 3,0,NIL})\n\taadd(aRotina,{'Imp. Proforma'    ,\"u_RelInWeb('RQ0003_P','Imprime Proforma Invoice [RQ0003_P]','u_fParAut(2)')\" , 0 , 3,0,NIL})\t\n\taadd(aRotina,{'Pre-Nota'    \t ,\"u_MATR730Q()\" \t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t, 0 , 3,0,NIL})\t\n\t\nEndIf\n\naadd(aRotina,{'Ajustes Gerais {P.Venda}',\"u_AjuGerais()\" , 0 , 3,0,NIL})\n\naadd(aRotina,{'Aprovação WhatsApp ',\"u_WAppAprov()\" , 0 , 3,0,NIL})\n\naadd(aRotina,{'Limpar FollowUp' ,\"u_ClearFol()\"  , 0 , 3,0,NIL})\t\n\nReturn aButtons\n\nUser Function ClearFol()\n****************************************************************************************************************\n*    // LIMPA FOLLOWUP PELO PERIODO SOMENTE OVADOS\n*\n****\nLocal cQuery:=\"\"\n\nPrivate aPerg := {}\nPrivate cPerg := \"MLIMPAFOLL\"\n\nAadd(aPerg,{cPerg,\"Data Incial  ?\"\t\t,\"D\",08,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\nAadd(aPerg,{cPerg,\"Data Final   ?\"\t\t,\"D\",08,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\n\nU_Testasx1(cPerg,aPerg,.T.)\n\nIf ! Pergunte(cPerg,.T.)\n\tReturn()\nEndIf\n\nIf Empty(mv_par01)\n\tAlert(\"Data inicial não pode ficar em branco!\")\n\tReturn()\nEndIf\n\nIf Empty(mv_par02)\n\tAlert(\"Data final não pode ficar em branco!\")\n\tReturn()\nEndIf\n\ncQuery :=  \"  UPDATE SC5010\ncQuery +=  \"    SET C5_XSHOWFO =\t'N'\ncQuery +=  \"  WHERE R_E_C_N_O_ IN(\ncQuery +=  \"  \t\t\t\t\t\tSELECT REC FROM (\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\tSELECT\t  R_E_C_N_O_ REC,\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  C5_FILIAL,\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  C5_NUM ,\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  C5_NOTA+'/'+C5_SERIE AS NF,\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  (SELECT F2_EMISSAO FROM SF2010 WHERE D_E_L_E_T_ = '' AND F2_FILIAL = C5_FILIAL AND F2_DOC = C5_NOTA AND F2_SERIE = C5_SERIE AND F2_CLIENTE = C5_CLIENTE AND F2_LOJA = C5_LOJACLI) DATA\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t  FROM SC5010 \ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t WHERE D_E_L_E_T_ = ''\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND C5_XSHOWFO IN('S')\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND C5_TIPO IN ('N')\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND C5_XVLRFIN <> 0\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND RTRIM(LTRIM(C5_XFOLLST)) IN ('OVADO','CARREGADO','FATURADO')\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t)TB_TEMP\ncQuery +=  \"  \t\t\t\t\t\t WHERE DATA BETWEEN '\"+dToS(mv_par01)+\"' AND '\"+dToS(mv_par02)+\"'\ncQuery +=  \"  \t\t\t\t\t\t)\n\nTcSQLExec(cQuery)\n\nAlert(\"FollowUp removidos com sucesso!\")\n\nReturn()\n\nUser Function WAppAprov()\n****************************************************************************************************************\n*    \n*\n****\nLocal cProt   := \"\"\n//Local cProt2  := \"\"\nLocal cMotiv  := \"\"\nLocal cQuery  := \"SELECT DISTINCT UPPER(RTRIM(LTRIM(C6_XMOTBLQ))) C6_XMOTBLQ FROM SC6010 WHERE D_E_L_E_T_ ='' AND C6_FILIAL+C6_NUM = '\" + SC5->C5_FILIAL + SC5->C5_NUM + \"' AND UPPER(RTRIM(LTRIM(C6_XMOTBLQ))) <> ''\n\n\ntcQuery cQuery alias TRBE new\ndbSelectArea(\"TRBE\")\ndbgotop()\n\nDo While !EOF()\n\t\n\tcMotiv := cMotiv + TRBE->C6_XMOTBLQ + chr(13)+chr(10)\n\n\tdbSelectArea(\"TRBE\") \n\tdbSkip()\nEndDo\n\ndbSelectArea(\"TRBE\") \ndbCloseArea()\n\nIF FunName() == Alltrim(\"GROA014\")\n\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\nElseIf FunName() == Alltrim(\"GROA013\")\n\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003_P&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\nEndIf\n\nsleep(4000)\n\n/*\nLimite de Credito\n*/\n//WaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0057&CLIENTES='+AllTrim(SC5->C5_CLIENTE)+AllTrim(SC5->C5_LOJACLI)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0057.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\n\n//Grupo de Faturamento Whatsapp\n\n/*\nTeste\n*/\n//cProt  := U_SWENARWAP(\"5551997331669\",\"Aprovação da Proforma:\" +AllTrim(SC5->C5_NUM) + chr(13)+chr(10) + \" Motivo:\" + cMotiv + chr(13)+chr(10) + \" Usuário:\" + SUBSTR(CUSUARIO,7,15), \"PROFORMA\"+AllTrim(SC5->C5_NUM),\"RQ0003\",\"PDF\",\"\\RELINWEB\\RQ0003.pdf\")\n\n/*\nOficial\n*/\ncProt  := U_SWENARWAP(\"5527995295180-1587589430@g.us\",\"Aprovação da Proforma:\" +AllTrim(SC5->C5_NUM) + chr(13)+chr(10) + \" Motivo:\" + cMotiv + chr(13)+chr(10) + \" Usuário:\" + SUBSTR(CUSUARIO,7,15), \"PROFORMA\"+AllTrim(SC5->C5_NUM),\"RQ0003\",\"PDF\",\"\\RELINWEB\\RQ0003.pdf\")\n\nIF cProt = \"\" .or. cProt = nil \n\tAlert(\"ERRO!!! O WhatsApp pode estar passando por alguma instabilidade no momento. Aguarde alguns instantes de tente novamente mais tarde!\")\n\tReturn()\nEndIf\n\nIf  RecLock(\"WAM\",.T.) \n\n\tReplace WAM_FILIAL  With \"\" \n\tReplace WAM_DATA    With Date()\n\tReplace WAM_HORA    With Time()\n\tReplace WAM_ID      With cProt\n\tReplace WAM_MSG     With \"Aprovação da Proforma:\" +AllTrim(SC5->C5_NUM) + \"Motivo:\" + cMotiv +  \"Usuário:\" + SUBSTR(CUSUARIO,7,15) + \" Cliente: \" + AllTrim(SC5->C5_XFRFORW) \n\t//Replace WAM_TELL    With \"5551997331669\"\n\t//Replace WAM_TELL    With \"5533984022125\"\n\tReplace WAM_INDEX   With SC5->C5_FILIAL + SC5->C5_NUM\n\tReplace WAM_PERG    With \"S\"\n\t//Replace WAM_DATAR   With \"\"\n\t//Replace WAM_HORAR   With \"\"\n\t//Replace WAM_RESPOSV With \"\"\n\t\n\tIF SubString(CNUMEMP,1,2) == \"05\"\n\t\tReplace WAM_EXEC    With 'ITINGA-PV'\n\tElse\n\t\tReplace WAM_EXEC    With 'QUALITA-PV'\n\tEndIf\n\t\n\n   MsUnLock()\nEndIf\n\t\t\nAlert(\"WhatsApp enviado com sucesso! \" + cProt)\n\nReturn()\n\n\nUser Function WAppResp()\n****************************************************************************************************************\n*NÃO USADO     \n*\n**** \nLocal cQuery  := \"SELECT TOP 1 * FROM WAM010 WHERE D_E_L_E_T_ = '' AND WAM_INDEX = '\"+SC5->C5_FILIAL + SC5->C5_NUM+\"' ORDER BY R_E_C_N_O_ DESC\"\n\t\t\t\t  \nLocal aRetMsg := \"\"\n\ntcQuery cQuery alias TRB new\ndbSelectArea(\"TRB\")\ndbgotop()\n\nIf !Empty(TRB->WAM_ID)\n\taRetMsg :=\tstrTokArr(U_SWREMGWAP(TRB->WAM_ID), ',' )\nEndIf\n\ndbSelectArea(\"TRB\") \ndbCloseArea()\n\nIf !\"false\" $ aRetMsg[7]\n\tIf (\"SIM\" $ Upper(aRetMsg[8])) .OR. ( \"APROVADO\" $ Upper(aRetMsg[8]) )\n\t\n\t \n\t\tRecLock(\"SC5\",.F.)\n\t\t\tSC5->C5_BLQ  := ''\n\t\tMsUnlock()\t\n\t\t/*\n\t\tdbSelectArea(\"SC6\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(SC5->C5_FILIAL + SC5->C5_NUM)\n\t\tWhile SC6->(!EOF()) .And. SC6->C6_FILIAL + SC6->C6_NUM == SC5->C5_FILIAL + SC5->C5_NUM\n\t\t                                      \n\t\t      MaLibDoFat(SC6->(RecNo()),SC6->C6_QTDVEN,,,.T.,.T.,.F.,.F.)\n\t\t\n\t\t   SC6->(dBSkip())\n\t\tEndDo\n\t\t*/\n\tEndIf\nElse \n\tAlert(\"Pedido ainda não liberado!\")\nEndIf\n\nReturn() \n\nUser Function AjuGerais()\n****************************************************************************************************************\n*    \n*\n****\nPrivate aPerg := {}\nPrivate cPerg := \"AJUSGERAIS\"\nPrivate nOpc  := 0\n\nnOpc := Aviso(\"Atenção\",\"Estes ajustes devem ser usados somente em casos especiais! Pedido: [\"+SC5->C5_NUM+\"] .\" ,{\"Confirma\",\"Abandona\"})\t\n\nIf nOpc == 2\n\tReturn()\nEndIf\n                  \nAadd(aPerg,{cPerg,\"Alterar o peso líquido:\",\"N\",12,04,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\nAadd(aPerg,{cPerg,\"Alterar o peso bruto :\" ,\"N\",12,04,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\n\nAadd(aPerg,{cPerg,\"Alterar qtd volume 1:\"  ,\"N\",03,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})     \nAadd(aPerg,{cPerg,\"Alterar qtd Box:\"       ,\"N\",03,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\n\nU_Testasx1(cPerg,aPerg,.t.) \n\nIf ! Pergunte(cPerg,.T.)\n\tReturn()\nEndIf\n\nRecLock(\"SC5\",.F.)\n\tSC5->C5_PESOL    := mv_par01\n\tSC5->C5_PBRUTO   := mv_par02\n\tSC5->C5_VOLUME1  := mv_par03\n\tSC5->C5_VOLUME2  := mv_par04\nMsUnlock()\t\n\nAviso(\"Atualização:\",\"Pedido: [\"+SC5->C5_NUM+\"] atualizado com sucesso!\" ,{\"Ok\"})\n\nReturn()\n\n\nUser Function MNumInv()\n****************************************************************************************************************\n*    \n*\n****\nLocal cNumInvo := GetMv(\"MV_XNUMINV\")\nLocal cQuery   := \"\"\n\nIF EMPTY(SC5->C5_YINVOIC)\n\t\n\tProcRegua(3) \n\t\n\tPutMv(\"MV_XNUMINV\",Soma1(cNumInvo))\n\t\n\tIncProc(\"Criando Invoice:\" + cNumInvo) \n\tSleep( 1000 ) \n\t\n\tIncProc(\"Salvando...\" + cNumInvo)\n\tSleep( 1000 ) \n\t\n\tIncProc(\"Liberando....\" + cNumInvo)\n\tSC5->(reclock(\"SC5\", .F.))\n\tSC5->C5_YINVOIC := cNumInvo\t\t\t\t\t\t\t\t\t\n\tSC5->(msUnLock())\n\tSleep( 1000 )\n\t\n\tAVISO(\"Invoice\", \"Invoice gerada com sucesso! Número=\" + cNumInvo  , { \"Fechar\" }, 1)\n\t\n\t//U_GROA014A()\n\t//AxInclui(\"SZO\")\n\t\n\tdbSelectArea(\"ZGO\")\n\tdbSetOrder(1)\n\tIf dbSeek(xFilial(\"ZGO\") + SC5->C5_NUM + SC5->C5_CLIENTE + SC5->C5_LOJACLI)\n\t\tZGO->(reclock(\"ZGO\", .F.))\n\t\tZGO->ZGO_INVOIC := cNumInvo\t\t\t\t\t\t\t\t\t\n\t\tZGO->(msUnLock())\n\t\t//U_GROA014A()\n\tElse\n\t\tZGO->(reclock(\"ZGO\", .T.))\n\t\tZGO->ZGO_FILIAL := xFilial(\"ZGO\")\n\t\tZGO->ZGO_INVOIC := cNumInvo\t\n\t\tZGO->ZGO_PEDIDO := SC5->C5_NUM\n\t\tZGO->ZGO_CLIENT := SC5->C5_CLIENTE\n\t\tZGO->ZGO_LOJA\t:= SC5->C5_LOJACLI\t\t\t\t\t\t\n\t\tZGO->(msUnLock())\n\tEndIf\n\t\n\tcQuery := \"SELECT CAST(M2_DATA AS DATE) DATA, MAX(M2_MOEDA2) 'DOLAR' , MAX(M2_MOEDA3) 'EURO'\n\tcQuery += \"  FROM SM2010\n\tcQuery += \"  WHERE D_E_L_E_T_ = ''\n\tcQuery += \"    AND M2_DATA  = '\"+DToS(dDataBase)+\"'\n\tcQuery += \"   GROUP BY M2_DATA\n\t\n\tTcQuery cQuery Alias TMP_MOEDA New\n\tdbSelectArea(\"TMP_MOEDA\")\n\t\n\tSC5->(reclock(\"SC5\", .F.))\n\tSC5->C5_MENNOTA := AllTrim(SC5->C5_MENNOTA) + \" //INVOICE:\" + SC5->C5_YINVOIC + \"-\" + LEFT(DToS(dDataBase),4) +  \"  TAXA DO DOLAR R$:\" + AllTrim(STR(TMP_MOEDA->DOLAR)) + \" CNTR:\" + AllTrim(SC5->C5_XCONTAI) \n\tSC5->(msUnLock())\n\t\n\tdbSelectArea(\"TMP_MOEDA\")\n\tdbCloseArea()            \nElse \n\n\tAVISO(\"Invoice\", \"Já existe invoice para esse pedido! Número=\" + SC5->C5_YINVOIC  , { \"Fechar\" }, 1)\n\nEndIf\t\n\nReturn()\n\n\nUser Function fParAut(nTipo)\n****************************************************************************************************************\n*    \n*\n****\nLocal cRet := \"\"\n\nIf nTipo = 2\n\tcRet :=  \"&FILIAL=\" + AllTrim(SC5->C5_FILIAL) +\"&NUMPED=\" + AllTrim(SC5->C5_NUM) \nElse\n\tdbSelectArea(\"ZGO\")\n\tdbSetorder(1)\n\tIf dbSeek(xFilial(\"ZGO\")+AllTrim(SC5->C5_NUM))\n\t\tcRet := \"&FILIAL=\" + AllTrim(ZGO->ZGO_FILIAL) +\"&INVOICE=\" + AllTrim(ZGO->ZGO_INVOIC)\n\tElse\n\t\tAlert(\"Pedido de venda sem Invoice!\")\n\tEndIf\nEndIf\n\nReturn(cRet)\n\n\nUser Function GA410CONS() \n****************************************************************************************************************\n*    \n*\n****\nLocal aButtons := {}\n\nSetKey(VK_F5,{||u_MCONSUTDET()})\nSetKey(VK_F6,{||u_GERAMSGPAD()})\n\naAdd(aButtons, {\"\", {|| u_MCONSUTDET()}, \"[F5] Consulta GrPlus\", \"[F5] Consulta GrPlus\"})\naAdd(aButtons, {\"\", {|| u_GERAMSGPAD()}, \"[F6] Gera Msg Padrão\", \"[F6] Gera Msg Padrão\"})\n\nReturn aButtons\n\nUser Function GERAMSGPAD()\n****************************************************************************************************************\n*    \n*\n****\nLocal cQuery   := \"\"         \n//Local aPeso    := {}\n//Local nResult  := 0     \n//Local cBoleto  := \"\"\nLocal cMsgNota := \"\"    \n//Local cMsgNota2:= \"\"                         \nLocal cNotas   := \"\"\nLocal aGriCavDW:= {}\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\nLocal cInCavDw := \"\"\nLocal nX       := 0\n\n/*\nMensagem foi retirada de uso conforme chamado numero 1109\nControle de drawback em tempo Real.\n*/\nIF TYPE(\"aCols\") == \"A\"\n\tFor nX := 1 To Len(aCols)\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec \n\t\t\tIf !GDDeleted(nX) .and. LEFT(GdFieldGet(\"C6_LOTECTL\",nX),2)=='DW'\n\t\t\t\tIf Empty(aScan(aGriCavDW,GdFieldGet(\"C6_LOTECTL\",nX)) )\n\t\t\t\t\taAdd(aGriCavDW , GdFieldGet(\"C6_LOTECTL\",nX)  )\n\t\t\t\tEndIf\n\t\t\tEndIf\n\t\tEndIf\n\tNext nX\n\tIf !Empty(aGriCavDW)\n\t\tFor nX := 1 To Len(aGriCavDW)\t\t\n\t\t\taGriCavDW[nX] := LEFT(AllTrim(aGriCavDW[nX]),8)\n\t\t\tcInCavDw := cInCavDw +  \"'\"+AllTrim(aGriCavDW[nX])+\"',\"\n\t\tNext nX\n\t\tcInCavDw := Left(cInCavDw,Len(cInCavDw)-1)\n\tEndIf\n\t\n\n\tIf !Empty(cInCavDw)\n\t\t\n\t\tcQuery := \" SELECT DISTINCT DOC ,\n\t\tcQuery += \" \t\t\t\tEMISSAO\n\t\tcQuery += \"   FROM(\n \t\tcQuery += \" \t SELECT\n \t\tcQuery += \" \t\t\tLOTE,\n\t\tcQuery += \" \t\t\tIIF(EMISSAO<>'',EMISSAO,ISNULL((SELECT TOP 1 D1_EMISSAO FROM SD1010 WHERE D_E_L_E_T_ = '' AND D1_LOTECTL = LEFT(LOTE, LEN(RTRIM(LTRIM(LOTE)))-1) AND LEFT(D1_COD,2) = 'BL'),'')) EMISSAO,\n \t\tcQuery += \" \t\t\tIIF(DOC<>'',DOC,ISNULL((SELECT TOP 1 D1_DOC FROM SD1010 WHERE D_E_L_E_T_ = '' AND D1_LOTECTL = LEFT(LOTE, LEN(RTRIM(LTRIM(LOTE)))-1) AND LEFT(D1_COD,2) = 'BL'),'')) DOC\n \t\tcQuery += \" \t   FROM (\n \t\tcQuery += \" \t\t\tSELECT\tLOTE,\n \t\tcQuery += \" \t\t\t\t\tIIF(FORNECE<>'000011','', DOC) DOC,\n \t\tcQuery += \" \t\t\t\t\tEMISSAO,\n\t\tcQuery += \" \t\t\t\t\tD1_SERIE,\n \t\tcQuery += \" \t\t\t\t\tFORNECE\n \t\tcQuery += \" \t\t\t\t\tFROM (\t\n \t\tcQuery += \" \t\t\t\t\t\t\tSELECT DISTINCT D1_LOTECTL LOTE, \t\t\t\t\n \t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_DOC DOC,\n\t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_EMISSAO EMISSAO, \n \t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_SERIE,\n \t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_FORNECE  FORNECE\n \t\tcQuery += \" \t\t\t\t\t\t\tFROM SD1010 \n \t\tcQuery += \" \t\t\t\t\t\t\tWHERE D_E_L_E_T_ = '' \n \t\tcQuery += \" \t\t\t\t\t\t\tAND D1_LOTECTL IN (\"+cInCavDw+\")\n \t\tcQuery += \" \t\t\t\t\t\t )TB_TEMP\n \t\tcQuery += \" \t\t  )TAB_TEMP\n \t\tcQuery += \" \t)TAB_TEMP_FIM\n \t\tcQuery += \" WHERE DOC <> ''\n\t\t\n\t\tTcQuery cQuery Alias TMP_NOTA New\n\t\tdbSelectArea(\"TMP_NOTA\")\n\t\t\n\t\tDo While !EOF()\n\t\t\n\t\t\tcNotas := cNotas + AllTrim(TMP_NOTA->DOC) + \"-\" + dtoc(STOd(TMP_NOTA->EMISSAO))+ \" ,\"  \n\t\t\n\t\t\tdbSelectArea(\"TMP_NOTA\")\n\t\t\tdbSkip()\n\t\tEndDo\n\t\t\n\t\tdbSelectArea(\"TMP_NOTA\")\n\t\tdbCloseArea()\n\t\n\t\t//cMsgNota += \"ESTA NOTA FISCAL CONTEM INSUMOS IMPORTADOS ADQUIRIDOS DE ITINGA MINERACAO LTDA. PELA NF:\"+cNOtas+\" AMPARADO PELO REGIME DRAWBACK INTEGRADO - MODALIDADE SUSPENSAO, TIPO INTERMEDIARIO ATO CONCESSÓRIO Nº 20190019344 DE 08/05/2019.///\"   \n\tEndIf\n\t\n\tcQuery := \"SELECT CAST(M2_DATA AS DATE) DATA, MAX(M2_MOEDA2) 'DOLAR' , MAX(M2_MOEDA3) 'EURO'\n\tcQuery += \"  FROM SM2010\n\tcQuery += \"  WHERE D_E_L_E_T_ = ''\n\tcQuery += \"    AND M2_DATA  = '\"+DToS(dDataBase)+\"'\n\tcQuery += \"  GROUP BY M2_DATA \n\t\n\tTcQuery cQuery Alias TMP_MOEDA New\n\tdbSelectArea(\"TMP_MOEDA\")\n\t\n\tcMsgNota += \"INVOICE:\" + AllTrim(M->C5_YINVOIC) + \"-\" + LEFT(DToS(dDataBase),4) +  \"  TAXA DO DOLAR R$:\" + AllTrim(STR(TMP_MOEDA->DOLAR)) + \" CNTR:\" + AllTrim(M->C5_XCONTAI) + \" LACRE:\" + AllTrim(M->C5_XSEAL)\n\t\t        \n\tdbSelectArea(\"TMP_MOEDA\")\n\tdbCloseArea()                       \n\t\n\tIf !Empty(m->C5_MENNOTA)\n\t\tIf MsgYesNo(\"O campo [C5_MENNOTA], já possui informção. Deseja subistituir a mensagem original?\" )\n\t\t\tm->C5_MENNOTA := memoline(AllTrim(cMsgNota),254,1,,.T.)\n\t\t\tm->C5_MSG2    := memoline(AllTrim(cMsgNota),254,2,,.T.)\n\t\tEndIf\t\t\n\tElse\n\t\tm->C5_MENNOTA := memoline(AllTrim(cMsgNota),254,1,,.T.)\n\t\tm->C5_MSG2    := memoline(AllTrim(cMsgNota),254,2,,.T.)\n\tEndIf\n\t\nElse\n\n\tSetKey(VK_F5,)\n\tSetKey(VK_F6,)\n\nEndIf\n\nReturn\n\nStatic Function MAltVlrAut(cNumItem,cNumChapa) \n****************************************************************************************************************\n*    \n*\n****\nLocal nEdit1\t := 0\nLocal oEdit1\n\nLocal nEdit2\t := 0\nLocal oEdit2\n\nLocal nEdit3\t := SA1->A1_INFDESC\nLocal oEdit3\n\n//Local nEdit4\t := 0\n//Local oEdit4\n\nLocal lNExec     := .F.\nLocal lNDele     := .F.\n\nLocal nX         := 0\n\n// Variaveis Private da Funcao\nPrivate _oDlgVlr\t\t\t\t// Dialog Principal\n\n// Variaveis que definem a Acao do Formulario                    \nDEFINE MSDIALOG _oDlgVlr TITLE \" ITEM \" + cNumItem   FROM u_MGETTELA(223),u_MGETTELA(173) TO u_MGETTELA(359),u_MGETTELA(520) PIXEL\n\n\t// Cria as Groups do Sistema\n\t@ u_MGETTELA(003),u_MGETTELA(005) TO u_MGETTELA(044),u_MGETTELA(168) LABEL \"\" PIXEL OF _oDlgVlr\n\n\t// Cria Componentes Padroes do Sistema\n\t@ u_MGETTELA(010),u_MGETTELA(008) Say \"Valor Negociado:\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t@ u_MGETTELA(010),u_MGETTELA(050) MsGet oEdit1 Var nEdit1            Size u_MGETTELA(35)  ,u_MGETTELA(009) picture(\"@E 9,999,999.99999\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t\n\t@ u_MGETTELA(010),u_MGETTELA(085) Say \"Desconto padrão: {%}\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t@ u_MGETTELA(010),u_MGETTELA(130) MsGet oEdit3 Var nEdit3            Size u_MGETTELA(35) ,u_MGETTELA(009) when(.f.) picture(\"@E 99.99\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t\n\t@ u_MGETTELA(028),u_MGETTELA(008) Say \"Novo desconto: {%}\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t@ u_MGETTELA(028),u_MGETTELA(050) MsGet oEdit2 Var nEdit2            Size u_MGETTELA(35) ,u_MGETTELA(009) picture(\"@E 99.99999\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t\n\t//@ u_MGETTELA(028),u_MGETTELA(085) Say \"Desconto: {Vlr}\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t//@ u_MGETTELA(028),u_MGETTELA(130) MsGet oEdit4 Var nEdit4            Size u_MGETTELA(35) ,u_MGETTELA(009) picture(\"@E 9999.99\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t\n\t@ u_MGETTELA(047),u_MGETTELA(131) Button \"Ok\" \t\tSize u_MGETTELA(037),u_MGETTELA(012)  ACTION( lNExec := .T. , Close(_oDlgVlr))  PIXEL OF _oDlgVlr\n\t//@ u_MGETTELA(047),u_MGETTELA(085) Button \"Deletar\" \tSize u_MGETTELA(037),u_MGETTELA(012)  ACTION( lNDele := .T. , Close(_oDlgVlr))  PIXEL OF _oDlgVlr\n\t//@ u_MGETTELA(050),u_MGETTELA(007) Say \"O valor irá subistituir todas as chapas do cavalete! \"  Size u_MGETTELA(113),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\nACTIVATE MSDIALOG _oDlgVlr CENTERED\n\n\nIf lNDele\n\tFor nX := 1 To Len(aCols)\n\t\tIf AllTrim(GdFieldGet(\"C6_YCAVALE\",nX)) == AllTrim(cNumCav)\t\t\t\n\t\t\t aCols[nX][Len(aHeader)+1] := .T.\n\t\tEndIf\n\tNext nX\nEndIf\n\nIf lNExec\n\t\n\tIf !Empty(nEdit1) .Or. !Empty(nEdit2)\n\t\tFor nX := 1 To Len(aCols)\n\t\t\n\t\t\tIf !Empty(nEdit1)\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_PRUNIT\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX) //C6_PRUNIT 23/09/2019\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\n\t\t\t\tEndIf\n\t\t\tElse\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\n\t\t\t\t\t\t//GdFieldPut(\"C6_PRUNIT\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX) //C6_PRUNIT 23/09/2019\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\n\t\t\t\tEndIf\n\t\t\tEndIf\n\t\tNext nX\n\tEndIf\n\t\n\t/*\n\tIf !Empty(nEdit1) .Or. !Empty(nEdit2) .Or. !Empty(nEdit4)\n\t\tFor nX := 1 To Len(aCols)\n\t\t\tIf Empty(nEdit4 )\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_PRUNIT\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX) //C6_PRUNIT 23/09/2019\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\n\t\t\t\tEndIf\n\t\t\tElse \n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t//nEdit4 := round(nEdit4 / cNumChapa,2)\n\t\t\t\t\t\t\n\t\t\t\t\t\tnEdit2 := (nEdit4*100)/GdFieldGet(\"C6_VALOR\",nX)  \n\t\t\t\t\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\n\t\t\t\tEndIf\n\t\t\tEndIf\n\t\tNext nX\n\tElse\n\t\tIf !Empty(nEdit3)\n\t\t\t\n\t\t\t//For nX := 1 To Len(aCols)\n\t\t\t//\tIf AllTrim(GdFieldGet(\"C6_YCAVALE\",nX)) == AllTrim(cNumCav)\t\t\t\n\t\t\t//\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit3,nX)\n\t\t\t//\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCREF\",nX) ,nEdit1) * nEdit3) /100,2),nX)\n\t\t\t//\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,GdFieldGet(\"C6_PRCREF\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCREF\",nX) ,nEdit1) * nEdit2) /100   ,nX)\n\t\t\t//\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\n\t\t\t//\tEndIf\n\t\t\t//Next nX\n\t\t\t\n\t\tEndIf\n\tEndIf\n\t*/\n\t \nEndIf\n\n\nReturn \n\n\nUser Function MCONSUTDET()\n****************************************************************************************************************\n*    \n*\n****\n// Variaveis Locais da Função\nLocal cEdit1\t := Space(100)\nLocal cEdit2\t := Space(100)\nLocal cEdit3\t := Space(100)\nLocal oEdit1\nLocal oEdit2\nLocal oEdit3\n\nLocal nX         := 0\n\n// Variaveis Private da Funcão\nPrivate _oDlg\t  // Dialog Principal\n\n// Variaveis que definem a Acao do Formulario\nPrivate VISUAL := .F.                        \nPrivate INCLUI := .F.                        \nPrivate ALTERA := .F.                        \nPrivate DELETA := .F.        \n\n// Privates das ListBoxes\nPrivate aListBox1 := {}\nPrivate oListBox1\nPrivate aFlist   := {}\n\n/*\nInicializando Variaveis \n*/\n\niF TYPE(\"aCols\") == \"A\"\n\n\tIF !(M-> C5_TIPO $ \"D,B\")   //Se for nota de devolucao\n\t\tcEdit1  := Posicione(\"SA1\",1,XFilial(\"SA1\")+M->C5_CLIENTE+M->C5_LOJACLI,\"A1_NOME\")                   // Retorna o nome do Cliente\n\tELSE\n\t\tcEdit1  := POSICIONE(\"SA2\",1,XFILIAL(\"SA2\")+M->C5_CLIENTE+M->C5_LOJACLI,\"A2_NOME\")\t\t\t\t\t // Retorna o nome do Fornecedor      \n\tENDIF\n\tcEdit2 := Posicione(\"SE4\",1,XFilial(\"SE4\")+M->C5_CONDPAG,\"E4_DESCRI\") \n\tcEdit3 := Posicione(\"SA3\",1,XFilial(\"SA3\")+M->C5_VEND1,\"A3_NOME\") \n\t\n\tDEFINE MSDIALOG _oDlg TITLE \"CONSULTA DETALHADA GRPLUS\" FROM u_MGETTELA(333),u_MGETTELA(275) TO u_MGETTELA(734),u_MGETTELA(795) PIXEL\n\t\n\t// Cria Componentes Padroes do Sistema\n\t@ u_MGETTELA(006),u_MGETTELA(005) Say \"NOME DO CLIENTE:\" Size u_MGETTELA(042),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlg\n\t@ u_MGETTELA(006),u_MGETTELA(052) MsGet oEdit1 Var cEdit1 when(.f.) Size u_MGETTELA(200),u_MGETTELA(009) COLOR CLR_BLACK PIXEL OF _oDlg\n\t@ u_MGETTELA(021),u_MGETTELA(006) Say \"COND. PAGAMENTO:\" Size u_MGETTELA(046),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlg\n\t@ u_MGETTELA(021),u_MGETTELA(052) MsGet oEdit2 Var cEdit2 when(.f.) Size u_MGETTELA(057),u_MGETTELA(009) COLOR CLR_BLACK PIXEL OF _oDlg\n\t@ u_MGETTELA(021),u_MGETTELA(114) Say \"NOME VENDEDOR:\" Size u_MGETTELA(055),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlg\n\t@ u_MGETTELA(021),u_MGETTELA(165) MsGet oEdit3 Var cEdit3 when(.f.) Size u_MGETTELA(087),u_MGETTELA(009) COLOR CLR_BLACK PIXEL OF _oDlg\n\t@ u_MGETTELA(180),u_MGETTELA(215) Button \"OK\"  Size u_MGETTELA(037),u_MGETTELA(012) ACTION(Close(_oDlg)) PIXEL OF _oDlg\n\t\n\t@ u_MGETTELA(035),u_MGETTELA(006) ListBox oListBox1 Fields ;\n\t\tHEADER \"ITEM\",\"CAVALETE\",\"P.LIQUIDO\",\"P.BRUTO\",\"QTD CHAPAS\",\"QTD RECORTE/AMOSTRAS\";\n\t\tSize u_MGETTELA(247),u_MGETTELA(140) Of _oDlg Pixel;\n\t\tColSizes 05,80,50,50,50,20\n\n\t\toListBox1:bLDblClick := {||  iif(fLibFunc(aFlist[oListBox1:nAT,01])==.t., MAltVlrAut(aFlist[oListBox1:nAT,01],aFlist[oListBox1:nAT,04]) , Alert(\"Produto oferta não pode ser alterado!\") )  }\n\n\t// Chamadas das ListBox do Sistema\n\tfListBox1()\n\t\n\tFor nX := 1 To Len(aFlist)\n\t\tIf AllTrim(aFlist[nX][1]) == AllTrim(GdFieldGet(\"C6_ITEM\",n))\n\t\t\t//oListBox1:Select(nX)\n\t\t\t//oListBox1:bLine := { || aFlist[ oListBox1:nX ] }\n\t\t\toListBox1:nAt := Nx\n\t\tEndIf\n\tNext Nx\n\t\n\tACTIVATE MSDIALOG _oDlg CENTERED \n\nElse\n\n\t//Alert(\"ok\")\n\tSetKey(VK_F5,)\n\tSetKey(VK_F6,)\nEndIf\n\nReturn(.T.)\n\nStatic Function fLibFunc(cNumItem)\n****************************************************************************************************************\n*    \n*\n****\nLocal nX   := 0\nLocal lRet := .T.\n\nFor nX := 1 To Len(aCols)\n\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\n\t\tIF GdFieldGet(\"C6_XOFERTA\",nX) == \"S\"\t\n\t\t\tlRet := .F.\n\t\tEndIf\n\tEndIf\nNext nX\n\nReturn(lRet)\n\nStatic Function fListBox1()\n****************************************************************************************************************\n*    \n*\n****\n//Local nPos   := 0\nLocal nTotBr   := 0\nLocal nTotLQ   := 0\nLocal nTotCh   := 0\n//Local nTotDF := 0\nLocal nTotAM   := 0\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\nLocal nx       := 0\n\noListBox1:SetArray(aFlist)\n\n/*\nPreenche o dados de peso bruto e peso liquido por cavaletes\n e quantidade de chapas\n*/\nFor nX := 1 To Len(aCols)\n\n\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t//\"0005/0006/0034/0035/0036\"\n\tdbSelectArea(\"SB1\")\n\tdbSetOrder(1)\n\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\n\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\n\t\tIf !GDDeleted(nX) \n\t\t\t/*\n\t\t\tIf !aScan(aFlist,{|x|alltrim(x[1]) == GdFieldGet(\"C6_YCAVALE\",nX)  })\t\t\n\t\t\t\tAadd(aFlist,{GdFieldGet(\"C6_YCAVALE\",nX) ,;\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOLQ\"))    ,;\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOBR\"))  ,;\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0, fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YQTDBD\") ),;\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_QTDVEN\",nX),0 )  })\n\t\t\tElse\n\t\t\t\tnPos := aScan(aFlist,{|x|alltrim(x[1])==GdFieldGet(\"C6_YCAVALE\",nX) })\n\t\t\t \taFlist[nPos][2] := aFlist[nPos][2] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOLQ\"))\n\t\t\t \taFlist[nPos][3] := aFlist[nPos][3] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX),fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOBR\"))\n\t\t\t \taFlist[nPos][4] := aFlist[nPos][4] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0, fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YQTDBD\") )\n\t\t\t \taFlist[nPos][5] := aFlist[nPos][5] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_QTDVEN\",nX), IIF(AllTrim(GdFieldGet(\"C6_YCLASSI\",nX))==\"A\" .AND. Empty(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))),1,0 )) //\n\t\t\tEndIf\n\t\t\t*/\n\t\t\t\n\t\t\tAadd(aFlist,{GdFieldGet(\"C6_ITEM\",nX) ,;\n\t\t\t\t\t\t GdFieldGet(\"C6_YCAVALE\",nX) ,; \n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),GdFieldGet(\"C6_PRODUTO\",nX),GdFieldGet(\"C6_LOCAL\",nX),\"B8_YPESOLQ\"))    ,;\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),GdFieldGet(\"C6_PRODUTO\",nX),GdFieldGet(\"C6_LOCAL\",nX),\"B8_YPESOBR\"))  ,;\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0, fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),GdFieldGet(\"C6_PRODUTO\",nX),GdFieldGet(\"C6_LOCAL\",nX),\"B8_YQTDBD\") ),;\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_QTDVEN\",nX),0 )  })\n\t\t\t\n\t\tEndIf\n\tElse \n\t\n\t//IIF(AllTrim(GdFieldGet(\"C6_YCLASSI\",nX))==\"A\" .AND. Empyt(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))),1,0)\n\t\n\tAadd(aFlist,{     \"-\",;\n\t\t\t\t\t  \"-\",;\n\t\t\t\t \t   0 ,;\n\t\t\t\t       0 ,;\n\t\t\t\t       0 ,;\n\t\t\t\t       0  })\n\t\n\tEndIf\nNext Nx\n\nIf Len(aFlist)>0\n\tFor nX := 1 To Len(aFlist)\n\t\tIf Alltrim(aFlist[nX][2]) = \"\"\n\t\t\taFlist[nX][2] := \"RECORTES\" \n\t\tEndIf\n\tNext Nx\n\t\n\tFor nX := 1 To Len(aFlist)\n\t\tnTotLQ := nTotLQ + aFlist[nX][3]\n\t\tnTotBr := nTotBr + aFlist[nX][4]\n\t\tnTotCh := nTotCh + aFlist[nX][5]\n\t\tnTotAM := nTotAM + aFlist[nX][6]\n\tNext Nx\n\t\n\tAadd(aFlist,{\"---------\",\"--------------------------------------------\",\"----------------------------------\",\"----------------------------------\",\"----------------------------------\",\"------------------------------------------\"})\n\tAadd(aFlist,{\"(=)\",\"  Total:\",nTotLQ,nTotBr,nTotCh,nTotAM})\n\tAadd(aFlist,{\"(=)\",\"  Weigth Limit: \"+ AllTrim(Str(M->C5_XWLIMIT)),M->C5_XWLIMIT - nTotLQ  ,M->C5_XWLIMIT - nTotBr,\"\",\"\"})\nEndIf\n\noListBox1:bLine := {|| {;\n\t\t\t\t\taFlist[oListBox1:nAT,01],;\n\t\t\t\t\taFlist[oListBox1:nAT,02],;\n\t\t\t\t\taFlist[oListBox1:nAT,03],;\n\t\t\t\t\taFlist[oListBox1:nAT,04],;\n\t\t\t\t\taFlist[oListBox1:nAT,05],;\n\t\t\t\t\taFlist[oListBox1:nAT,06]}}\n\t\nReturn        \n           \n\nStatic Function fPqLotSub(cLote,cSubLote,cCodProd,cCodLocal,cTipRet)\n****************************************************************************************************************\n*    //fPqCvlt(GdFieldGet(\"C6_YCAVALE\",nX)) -- quantiade de cavaletes amostras\n*    //\n****\nLocal nVlrRest := 0\n\ncQuery  := \" SELECT \"+ cTipRet +\" VLRET\"\ncQuery  += \"   FROM SB8010 \ncQuery  += \"  WHERE D_E_L_E_T_ = ''\ncQuery  += \"    AND B8_LOTECTL = '\"+ AllTrim(cLote)     +\"' \ncQuery  += \"    AND B8_NUMLOTE = '\"+ AllTrim(cSubLote)  +\"'\ncQuery  += \"    AND B8_PRODUTO = '\"+ AllTrim(cCodProd)  +\"'\ncQuery  += \"    AND B8_LOCAL   = '\"+ AllTrim(cCodLocal) +\"'\ncQuery  += \"    AND B8_SALDO <> 0\n\ntcQuery cQuery alias TRB new\ndbSelectArea(\"TRB\")\ndbgotop()\n\nnVlrRest := TRB->VLRET\n\ndbSelectArea(\"TRB\") \ndbCloseArea()\n\nReturn nVlrRest\n\n\nStatic Function fPqCvlt(cCavalete)\n****************************************************************************************************************\n*    //fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOBR\")\n*    \n****\nLocal nVlrRest := 0\n\ncQuery  := \" SELECT COUNT(*) AS VLR_CONT\ncQuery  += \"    FROM SB8010 \ncQuery  += \"   WHERE D_E_L_E_T_ = ''\ncQuery  += \"     AND B8_YCAVALE = '\"+AllTrim(cCavalete)+\"'\ncQuery  += \"     AND B8_YCLASSI = 'A'\ncQuery  += \"     AND B8_SALDO <> 0\n\ntcQuery cQuery alias TRB new\ndbSelectArea(\"TRB\")\ndbgotop()\n\nnVlrRest := TRB->VLR_CONT\n\ndbSelectArea(\"TRB\") \ndbCloseArea()\n\nReturn nVlrRest\n\n\nUser Function MINFORFIN(dSetDate,cSetCodPG)\n****************************************************************************************************************\n*    //Informações Financeiras \n*    \n****\nPrivate _oInforFin\t\t\t\t// Dialog Principal\n                       \nPrivate oPG    := LoadBitmap(GetResources(), \"BR_VERMELHO\")\nPrivate oNPG   := LoadBitmap(GetResources(), \"BR_VERDE\")\nPrivate oNADA  := LoadBitmap(GetResources(), \"BR_CINZA\")\n\n// Privates das ListBoxes\nPrivate aListBoxFin := {}\nPrivate oListBoxFin\n\nDEFINE MSDIALOG _oInforFin TITLE \"Informações Financeiras\" FROM u_MGETTELA(178),u_MGETTELA(181) TO u_MGETTELA(403),u_MGETTELA(967) PIXEL\n\n\t// Cria Componentes Padroes do Sistema\n\t@ u_MGETTELA(093),u_MGETTELA(308) Button \"Cancelar\" Size u_MGETTELA(037),u_MGETTELA(012) ACTION(Close(_oInforFin)) PIXEL OF _oInforFin\n\t@ u_MGETTELA(093),u_MGETTELA(351) Button \"Salvar\" Size u_MGETTELA(037),u_MGETTELA(012)   ACTION(fSaveDtBl(),Close(_oInforFin)) PIXEL OF _oInforFin\n\n\t\t@ u_MGETTELA(003),u_MGETTELA(005) ListBox oListBoxFin Fields ;\n\t\tHEADER \"\",\"RECNO\",\"PREFIXO\",\"NUMERO\",\"TIPO\",\"PARCELA\",\"VALOR\",\"EMISSAO NF\",\"VENCIMENTO\",\"DATA BAIXA\",\"VENCIMENTO B/L\",\"VENCIMENTO B/L REAL\" ;\n\t\tSize u_MGETTELA(383),u_MGETTELA(088) Of _oInforFin Pixel;\n\t\tColSizes 08,20,40,40,40,40,40,40,40,40,50,40\n\t\t\n\t\t//oListBoxFin:bLDblClick := {||  MAltVlrAut(aFlist[oListBoxFin:nAT,01]) } alterar a função\n\t\t\n\n\t// Chamadas das ListBox do Sistema\n\tfListFin1(dSetDate,cSetCodPG)\n\nACTIVATE MSDIALOG _oInforFin CENTERED \n\nReturn(.T.)\n\n\nStatic Function fSaveDtBl()\n****************************************************************************************************************\n* //\n* //\n* \n****\nLocal lGravou  := .F.\nLocal cCodTitu := \"\"\nLocal nX       := 0\n\nFor nX:=1 to Len(aListBoxFin)\n\tIf !Empty(aListBoxFin[nX][12])\n\t\t\n\t\tdbSelectArea(\"SE1\")\n\t\tdbGoto(aListBoxFin[nX][2]) \n\t\tSE1->(reclock(\"SE1\", .F.))\n\t\t\tSE1->E1_VENCTO  := aListBoxFin[nX][11] \n\t\t\tSE1->E1_VENCREA := aListBoxFin[nX][12]\n\t\tSE1->(msUnLock())\n\t\t\n\t\tlGravou:=.T.\n\t\tcCodTitu := cCodTitu + aListBoxFin[nX][04]+\"-\"+aListBoxFin[nX][06]+ \" | \" + chr(13)+chr(10) \n\t\t\n\tEndIf\nNext nX\n\nIf lGravou\n\tAVISO(\"Títulos gravados com sucesso:\", cCodTitu , { \"Fechar\" }, 3)\nEndIF\n\nReturn()\n\nStatic Function fListFin1(dSetDate,cSetCodPG)\n****************************************************************************************************************\n* //\n* //\n* \n****\nLocal cQuery  := \"\"\n//Local aTPAVA  := {}\nLocal aRetAva := \"\"\n\ndbSelectArea(\"SF2\")\ndbSetOrder(2)\nIF dbSeek(xFilial(\"SF2\") + M->C5_CLIENTE + M->C5_LOJACLI + M->C5_NOTA + M->C5_SERIE + \"N\")\n\n\taTPadv := Condicao(M->C5_XVLRFIN,cSetCodPG,,SF2->F2_EMISSAO,) //FSepCond(M->C5_XVLRFIN,cSetCodPG,SF2->F2_EMISSAO)\n\n\tdbSelectArea(\"SE4\")\n\tdbSetOrder(1)\n\tIf dbSeek(xFilial(\"SE4\")+ cSetCodPG )\n\t\taRetAva := strtokarr (AllTrim(SE4->E4_TPAVA), \",\")\n\tEndIf\n\n\tIf Len(aRetAva) <> 0\n\t\tIf Len(aRetAva) <> Len(aTPadv)\n\t\t\tAlert(\"Verifique a condição de pagamento: (\" + AllTrim(cSetCodPG) + \"). O campo tp. avançado está diferente das quantidade de parcelas.\" )\n\t\tEndIf\n\tEndIf\n\n\tcQuery := \" \tSELECT\tR_E_C_N_O_ RECNO, \n\tcQuery += \" \t\t\tE1_FILIAL,\n\tcQuery += \" \t\t\tE1_PREFIXO,\n\tcQuery += \" \t\t\tE1_TIPO,\n\tcQuery += \" \t\t\tE1_NUM,\n\tcQuery += \" \t\t\tE1_PARCELA,\n\tcQuery += \" \t\t\tE1_EMISSAO,\n\tcQuery += \" \t\t\tE1_VENCREA,\n\tcQuery += \" \t\t\tE1_BAIXA,\n\tcQuery += \" \t\t\tE1_VALOR\n\tcQuery += \" \t  FROM SE1010 \n\tcQuery += \" \t WHERE E1_NUM     = '\"+M->C5_NOTA+\"'\n\tcQuery += \" \t   AND D_E_L_E_T_ = ''\n\t//cQuery += \" \t   AND E1_BAIXA   = ''\n\tcQuery += \" \t   AND E1_EMISSAO = '\"+dtoS(SF2->F2_EMISSAO)+\"'\n\tcQuery += \" \t   AND E1_TIPO IN ('NF')\n\tcQuery += \" \t   AND E1_CLIENTE = '\"+M->C5_CLIENTE+\"'\n\tcQuery += \" \t   AND E1_LOJA    = '\"+M->C5_LOJACLI+\"'\n\tcQuery += \" \t   AND E1_SERIE   = '\"+M->C5_SERIE+\"' \n\n\tTcQuery cQuery Alias TMP_FIM New\n\tdbSelectArea(\"TMP_FIM\")\n\t\n\tnPosAt := 0\n\tcTipoAvan := \"\"\n\t\n\tDo While !EOF()\n\t\n\t\tnPosAt := nPosAt + 1\n\t\tIf Len(aRetAva)<>0\n\t\t\tcTipoAvan := aRetAva[nPosAt] \n\t\t\t\n\t\t\tIf AllTrim(cTipoAvan) <> \"A\"\n\t\t\t\taTPadv := Condicao(M->C5_XVLRFIN,cSetCodPG,,dSetDate+1,)\n\t\t\tEndIf\n\t\tEndIf\n\t\t\n\t\tAadd(aListBoxFin,{\tiif(!Empty(aRetAva),IIF(EMPTY(TMP_FIM->E1_BAIXA),oNPG,oPG),oNADA),;\n\t\t\t\t\t\t\tTMP_FIM->RECNO,;\n\t\t\t\t\t\t\tTMP_FIM->E1_PREFIXO,;\n\t\t\t\t\t\t\tTMP_FIM->E1_NUM,;\n\t\t\t\t\t\t\tTMP_FIM->E1_TIPO,;\n\t\t\t\t\t\t\tTMP_FIM->E1_PARCELA,;\n\t\t\t\t\t\t\tTMP_FIM->E1_VALOR,;\n\t\t\t\t\t\t\tStoD(TMP_FIM->E1_EMISSAO),;\n\t\t\t\t\t\t\tStoD(TMP_FIM->E1_VENCREA),;\n\t\t\t\t\t\t\tStoD(TMP_FIM->E1_BAIXA),;\n\t\t\t\t\t\t\tiif(!Empty(aRetAva),IIf(Empty(TMP_FIM->E1_BAIXA), aTPadv[nPosAt][1]             ,sToD(\"\") ),sToD(\"\")),;\n\t\t\t\t\t\t\tiif(!Empty(aRetAva),IIf(Empty(TMP_FIM->E1_BAIXA), DataValida(aTPadv[nPosAt][1]) ,sToD(\"\") ),sToD(\"\"));\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\n\t\tdbSelectArea(\"TMP_FIM\")\n\t\tdbSkip()\n\tEndDo\n\t\n\tdbSelectArea(\"TMP_FIM\")\n\tdbCloseArea()\n\n\tif Empty(aListBoxFin)\n\t\n\t\tAadd(aListBoxFin,{\t\toNADA,;\n\t\t\t\t\t\t\t\t\"\",;\n\t\t\t\t\t\t\t\t\"\",;\n\t\t\t\t\t\t\t\t\"\",;\n\t\t\t\t\t\t\t\t\"\",;\n\t\t\t\t\t\t\t\t\"\",;\n\t\t\t\t\t\t\t\t\"\",;\n\t\t\t\t\t\t\t\tStoD(\"\"),;\n\t\t\t\t\t\t\t\tStoD(\"\"),;\n\t\t\t\t\t\t\t\tStoD(\"\"),;\n\t\t\t\t\t\t\t\tStoD(\"\"),;\n\t\t\t\t\t\t\t\tsToD(\"\");\n\t\t\t\t\t\t\t\t})\n\t\n\tEndIf \n\n\toListBoxFin:SetArray(aListBoxFin)\n\t\n\toListBoxFin:bLine := {|| {;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,01],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,02],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,03],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,04],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,05],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,06],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,07],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,08],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,09],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,10],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,11],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,12]}}\n\t\n\nEndIf\n\nReturn()\n"}}}
Content-Length: 104885
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"git:/d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode/06_FATURAMENTO_NOVO_COMERCIAL/MT410TOK.prw?%7B%22path%22%3A%22d%3A%5C%5CTOTVS%2012%5C%5CMicrosiga%5C%5CProtheus%5C%5CProjetoVSCode%5C%5C06_FATURAMENTO_NOVO_COMERCIAL%5C%5CMT410TOK.prw%22%2C%22ref%22%3A%22~%22%7D","version":2},"contentChanges":[{"text":"#INCLUDE \"rwmake.ch\"\n#INCLUDE \"protheus.ch\"\n#INCLUDE \"topconn.ch\"\n\n/*\nPrograma ...: MT410TOK.Prw\nUso ........: Validação do pedido de vendas\nData .......: 26/04/2019\nFeito por ..: Bruno Lage Ferreira \n\nMV_NDESCTP - DESCONTO NO PREÇO DE LISTA E UNITARIO\nNOVO\n*/\n\nUser Function MT410TOK()\n****************************************************************************************************************\n*   /* Programa para validar o pedido de venda tabela de preço de chapas - Qualitá */\n*\n****\nLocal   lRet      := .T.\nLocal   oProcess\nLocal   nOpc      := PARAMIXB[1]\nLocal   cQuery    := \"\"\nDefault lEnd      := .F.\n\n\nIf SubString(CNUMEMP,1,2) == \"01\" .And. (INCLUI == .T. .Or. nOpc == 1 .OR. ALTERA == .T.) .AND. (FUNNAME() <> \"GROA001\")\n\n\ta410Recalc()\n\n\toProcess := MsNewProcess():New({|lEnd| lRet := MValidPedV(@oProcess, @lEnd,@lRet) },\"Validando dados..\",\"Lendo Registros do Pedido de Vendas\",.T.) \n\tIf !IsBlind()     \n\t\tIf nOpc == 1 \n\t\t\tIf !Empty(M->C5_XIDMOB)\n\t\t\t\t\n\t\t\t\tcQuery := \"SELECT MAX(ZSA_IDMOB) ID FROM ZSA010 WHERE D_E_L_E_T_ =\t'' AND  ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\"'\"\n\t\t\t\ttcQuery cQuery alias TRB_EMOB new\n\t\t\t\tdbSelectArea(\"TRB_EMOB\")\n\t\t\t\tdbgotop()\n\n\t\t\t\tIf !EMPTY(TRB_EMOB->ID)\n\t\t\t\t\tAlert(\"Este P.Venda deve ser excluído pelo MogGran!\")\n\t\t\t\t\tdbSelectArea(\"TRB_EMOB\") \n\t\t\t\t\tdbCloseArea()\n\t\t\t\t\tReturn(.f.)\n\t\t\t\tEndIf\n\n\t\t\t\tdbSelectArea(\"TRB_EMOB\") \n\t\t\t\tdbCloseArea()\n\n\t\t\tEndIF\n\t\tEndIf\n\t\toProcess:Activate()\n\telse\n\t\tlRet := MValidPedV(nil, @lEnd,@lRet)\n\tEndIf\nEndIf\n\nReturn(lRet)\n\nUser Function M410LIOK()\n****************************************************************************************************************\n*    Libera ou bloquea linha do pedido de venda \n*\n****\nLocal lRet   := .T.\nLocal cQuery := \"\"\n\n/*\nLinhaOk\n*/\nIf SubString(CNUMEMP,1,2) == \"01\" \n\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",n))) ,1,2) $ 'BL' .AND. u_MTSOEST(GdFieldGet(\"C6_TES\",n)) \n\t\tIf Empty(GdFieldGet(\"C6_LOTECTL\",n))\n\t\t\tAlert(\"ERRO! BLOCO SEM LOTE!\")\n\t\t\tlRet := .F.\n\t\tEndIf\n\tEndIf\n\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",n))) ,1,2) $ 'CH' .AND. (Empty(GdFieldGet(\"C6_LOTECTL\",n)) .OR. Empty(GdFieldGet(\"C6_NUMLOTE\",n)))  \n\t\tAlert(\"ERRO! CHAPA COM LOTE OU SUB-LOTE EM BRANCO!\")\n\t\tlRet := .F.\n\tEndIf\nEndIf\n\n\n/*\nValida mobGran\n*/\ncQuery  := \" SELECT ZSA_PRCDES FROM ZSA010\ncQuery  += \"  WHERE D_E_L_E_T_ = ''\ncQuery  += \"  AND ZSA_PRCDES <> 0\n//cQuery  += \"  AND ZSA_STATUS = 'ATIVA'\ncQuery  += \"  AND ZSA_IDMOBP = '\"+ AllTrim(M->C5_XIDMOB)                    +\"'\ncQuery  += \"  AND ZSA_NUMCAV = '\"+ AllTrim(GdFieldGet(\"C6_YCAVALE\",n))      +\"'\ncQuery  += \"  AND ZSA_PROD   = '\"+ AllTrim(GdFieldGet(\"C6_PRODUTO\",n))      +\"'\ncQuery  += \"  AND ZSA_CLASSI = '\"+ AllTrim(GdFieldGet(\"C6_YCLASSI\",n))      +\"'\ncQuery  += \"  AND ZSA_LOTE   = '\"+ AllTrim(GdFieldGet(\"C6_LOTECTL\",n))      +\"'\n\ntcQuery cQuery alias TRB new\ndbSelectArea(\"TRB\")\ndbgotop()\n\nIf !EMPTY(TRB->ZSA_PRCDES)\n\tGdFieldPut(\"C6_XOFERTA\",'S')\nEndIf\n\ndbSelectArea(\"TRB\") \ndbCloseArea()\n\n\nReturn(lRet)\n\nUser Function MTSOEST(cCodTes)\n****************************************************************************************************************\n*    Libera ou bloquea linha do pedido de venda \n*\n****\nLocal lRet := .F.\n\ndbSelectArea(\"SF4\")\ndbSetOrder(1)\ndbSeek(xFilial(\"SF4\") + cCodTes)\n\nIf SF4->F4_ESTOQUE == \"S\"\n\tlRet := .T.\n\tConOut(\"MTSOEST\" +\"|\"+ cCodTes +\"|\"+ \".T.\" )\nElse\n\tConOut(\"MTSOEST\" +\"|\"+ cCodTes +\"|\"+ \".F.\" )\n\tlRet := .F.\nEndIf\n\nReturn(lRet)\n\nUser Function GM410FIM()\n****************************************************************************************************************\n*    Libera ou bloquea pedido de venda M410STTS \n*\n****\nLocal lLibBlq  := .F.\nLocal lCalcPeso:= .F.\nLocal cQuery   := \"\"\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\nlOCAL nX       := 0\n\nIf SubString(CNUMEMP,1,2) == \"01\"  .AND. (FUNNAME() <> \"GROA001\")\n\tFor nX := 1 To Len(aCols)\n\t\tIf !Empty(GdFieldGet(\"C6_XMOTBLQ\",nX)) .OR. !Empty(M->C5_XMOTBLQ)\n\t\t\tlLibBlq   := .T.\n\t\tEndIf\n\t\t\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\t\t\n\t\t\tlCalcPeso := .T.\n\t\tEndIf\n\tNext nX\n\t\n\tIf lLibBlq   \n\t\tRecLock(\"SC5\",.F.)\n\t\t\tSC5->C5_BLQ  := '1'\n\t\tMsUnlock()\t\n\tEndif\n\n\tIf  M->C5_TIPO $ \"D/B\"\n\t\tRecLock(\"SC5\",.F.)\n\t\t\tSC5->C5_BLQ  := ''\n\t\tMsUnlock()\t\n\tEndIf \n\n\tIf lCalcPeso\n\t\n\t\t//Soma dos pesos brutos e liquido\n\t\tcQuery   := \" SELECT\tROUND(SUM(B8_YPESOLQ) + SUM(PESO_AMOSTRAS),3) PLQ, \n\t\tcQuery   += \" \t\t    ROUND(SUM(B8_YPESOBR) + SUM(PESO_AMOSTRAS),3) PBR \n\t\tcQuery   += \" FROM (\n\t\tcQuery   += \" SELECT\t\tISNULL(ZGO.ZGO_INVOIC,'') AS ZGO_INVOIC, \n\t\tcQuery   += \" \t\t\tTAB_PROFORMA.* FROM (\n\t\tcQuery   += \" \t\t\t SELECT\tRTRIM(LTRIM(C5_NUM)) AS C5_NUM,\n\t\tcQuery   += \" \t\t\t\t\tYEAR(CAST(C5_EMISSAO AS DATE) )ANO,\n\t\tcQuery   += \" \t\t\t\t\tCAST(C5_EMISSAO AS DATE) AS C5_EMISSAO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_NOME)) AS A1_NOME,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_END)) AS A1_END,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_BAIRRO)) AS A1_BAIRRO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDI)) AS A1_DDI,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDD)) AS A1_DDD,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_TEL)) AS A1_TEL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_CONTATO)) AS A1_CONTATO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A3_NOME)) AS A3_NOME,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(YA_PAIS_I)) AS YA_PAIS_I,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XSEAL)) AS C5_XSEAL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XBOOKIN)) AS C5_XBOOKIN,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVESSEL)) AS C5_XVESSEL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XCONTAI)) AS C5_XCONTAI,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTARE)) AS C5_XTARE,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPO)) AS C5_XPO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_LOTECTL)) AS C6_LOTECTL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_NUMLOTE)) AS C6_NUMLOTE,\n\t\tcQuery   += \" \t\t\t\t\tC6_CF,\n\t\tcQuery   += \" \t\t\t\t\tC6_XPESO AS PESO_AMOSTRAS,\n\t\tcQuery   += \" \t\t\t\t\tC6_YESPLIQ * 100 AS C6_YESPLIQ,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(B5_YCEMEIN)) AS C6_DESCRI, \n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_DESCRI))  AS C6_DESCRI_P, \n\t\tcQuery   += \" \t\t\t\t\tIIF(RTRIM(LTRIM(C6_YCAVALE))='','-',RTRIM(LTRIM(C6_YCAVALE)))  AS C6_YCAVALE,\n\t\tcQuery   += \" \t\t\t\t\tC6_PRCVEN,\n\t\tcQuery   += \" \t\t\t\t\tROUND(C6_PRCVEN / 10.764,2) AS PRCVEN_SQFT,\n\t\tcQuery   += \" \t\t\t\t\tC5_XVLRFIN AS VALOR_FINANCEIRO,\n\t\tcQuery   += \" \t\t\t\t\tC6_QTDVEN,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_NUMLOTE<>'',1,0) AS QTD_CHAPAS,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',0,C6_QTDVEN) AS QTD_TOTAL_FATURAR,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='M2',C6_QTDVEN,0) AS QTD_TOTAL_M2,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='PC',C6_QTDVEN,0) AS QTD_TOTAL_PC,\n\t\tcQuery   += \" \t\t\t\t\tC6_UM,\n\t\tcQuery   += \" \t\t\t\t\tC6_UNSVEN,\n\t\tcQuery   += \" \t\t\t\t\tC6_VALOR,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',C6_VALOR,0) AS SAMPLE_DESC,\n\t\tcQuery   += \" \t\t\t\t\tC6_VALDESC,\n\t\tcQuery   += \" \t\t\t\t\tC6_YCOMLIQ,\n\t\tcQuery   += \" \t\t\t\t\tC6_YALTLIQ,\n\t\tcQuery   += \" \t\t\t\t\tC6_YTOTLIQ,\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOLQ FROM SB8010 WHERE D_E_L_E_T_ = '' AND C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO AND B8_LOCAL = C6_LOCAL) ,0) AS  B8_YPESOLQ,\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOBR FROM SB8010 WHERE D_E_L_E_T_ = '' AND C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO AND B8_LOCAL = C6_LOCAL) ,0) AS  B8_YPESOBR,\n\t\tcQuery   += \" \t\t\t\t\tC5_XTESALE,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVALEXT)) AS C5_XVALEXT,\n\t\tcQuery   += \" \t\t\t\t\tUPPER(ISNULL(CONVERT(VARCHAR(MAX), CONVERT(VARBINARY(MAX), C5_YOBSEXT)),'')) AS C5_YOBSEXT,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESING))  AS E4_DESING,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESCRI))  AS E4_DESPOR,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPORTLO)) AS C5_XPORTLO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTPCONT)) AS C5_XTPCONT,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XINSURA)) AS C5_XINSURA,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFIMDES)) AS C5_XFIMDES,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFRFORW)) AS C5_XFRFORW,\n\t\tcQuery   += \" \t\t\t\t\tC5_XWLIMIT,\n\t\tcQuery   += \" \t\t\t\t\tCASE \n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'S' THEN 'STANDARD'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'C' THEN 'COMMERCIAL'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'P' THEN 'PREMIUM'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = '' AND C6_CF='7949' THEN 'SAMPLE'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = ''  THEN '' \n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'A' THEN 'SAMPLE'\n\t\tcQuery   += \" \t\t\t\t\tEND C6_YCLASSI,\n\t\tcQuery   += \" \t\t\t\t\tC5_XTOTAL,\n\t\tcQuery   += \" \t\t\t\t\tC5_XDESCON,\n\t\tcQuery   += \" \t\t\t\t\tC5_XPDESTI,\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT B8_LOTEFOR FROM SB8010 WHERE D_E_L_E_T_ = '' AND B8_LOTECTL = C6_LOTECTL AND B8_NUMLOTE = '' AND SUBSTRING(B8_PRODUTO,1,2) ='BL' ),'') AS LOTE_FORNECEDOR\n\t\tcQuery   += \" \t\t\t FROM SC6010 SC6 INNER JOIN SC5010 SC5\n\t\tcQuery   += \" \t\t\t\t   ON (C6_FILIAL = C5_FILIAL AND C6_NUM = C5_NUM )\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA1010 SA1\n\t\tcQuery   += \" \t\t\t\t   ON (A1_COD = C5_CLIENTE AND A1_LOJA = C5_LOJACLI )\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SYA010 SYA\n\t\tcQuery   += \" \t\t\t\t   ON (A1_PAIS = YA_CODGI)\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA3010\n\t\tcQuery   += \" \t\t\t\t   ON (A1_VEND=A3_COD)\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SB5010 SB5\n\t\tcQuery   += \" \t\t\t\t   ON (C6_PRODUTO = B5_COD)\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SE4010 SE4\n\t\tcQuery   += \" \t\t\t\t   ON (E4_CODIGO = C5_CONDPAG)\n\t\tcQuery   += \" \t\t\t WHERE SC6.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SC5.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SA1.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SYA.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SB5.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SE4.D_E_L_E_T_ = ''\n\t\t//cQuery   += \" \t\t\t   AND SC5.C5_BLQ <> '1'\n\t\tcQuery   += \" \t\t\t   AND C5_NUM = '\"+SC5->C5_NUM+\"'\n\t\tcQuery   += \" )TAB_PROFORMA\n\t\tcQuery   += \" \t FULL OUTER JOIN ZGO010 ZGO\n\t\tcQuery   += \" \t   ON (C5_NUM = ZGO_PEDIDO)\n\t\tcQuery   += \" WHERE C5_NUM <> ''\n\t\tcQuery   += \"   AND ISNULL(ZGO_INVOIC,'') LIKE '%%'\n\t\tcQuery   += \" )TB_PESO\n\t\t                                                          \n\t\ttcQuery cQuery alias TRB new\n\t\tdbSelectArea(\"TRB\")\n\t\tdbgotop()\n\t\t\n\t\tIF !M->C5_TIPO $ \"D/B\" .And. LEFT(AllTrim(GdFieldGet(\"C6_PRODUTO\",1)),2) <> 'BL'\n\t\t\tIF !EOF()\n\t\t\t\tdbSelectArea(\"SC5\")\t\t\n\t\t\t\tIf RecLock(\"SC5\",.f.)\n\t\t\t\t\tReplace SC5->C5_PESOL  With TRB->PLQ\n\t\t\t\t\tReplace SC5->C5_PBRUTO With TRB->PBR\n\t\t\t\t\t/*\n\t\t\t\t\tIF TRB->PLQ > SC5->C5_PBRUTO \n\t\t\t\t\t\tAlert(\"Peso bruto esta menor que peso líquido. Favor corrigir!\")\n\t\t\t\t\t\tReplace SC5->C5_PBRUTO With 0\n\t\t\t\t\tEndIf\n\t\t\t\t\t*/\n\t\t\t\t\tMsUnLock()\n\t\t\t\tEndIf\t\n\t\t\tEndIf\n\t\tEndIf\t\t\t\t\n\t\tdbSelectArea(\"TRB\") \n\t\tdbCloseArea()\n\t\t\n\t\t//Soma da quantidade de bandos\n\t\tcQuery   := \" SELECT COUNT(*) QTD FROM (\n\t\tcQuery   += \" SELECT DISTINCT C6_YCAVALE FROM (\n\t\tcQuery   += \" SELECT\t\tISNULL(ZGO.ZGO_INVOIC,'') AS ZGO_INVOIC, \n\t\tcQuery   += \" \t\t\tTAB_PROFORMA.* FROM (\n\t\tcQuery   += \" \t\t\t SELECT\tRTRIM(LTRIM(C5_NUM)) AS C5_NUM,\n\t\tcQuery   += \" \t\t\t\t\tYEAR(CAST(C5_EMISSAO AS DATE) )ANO,\n\t\tcQuery   += \" \t\t\t\t\tCAST(C5_EMISSAO AS DATE) AS C5_EMISSAO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_NOME)) AS A1_NOME,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_END)) AS A1_END,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_BAIRRO)) AS A1_BAIRRO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDI)) AS A1_DDI,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_DDD)) AS A1_DDD,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_TEL)) AS A1_TEL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A1_CONTATO)) AS A1_CONTATO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(A3_NOME)) AS A3_NOME,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(YA_PAIS_I)) AS YA_PAIS_I,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XSEAL)) AS C5_XSEAL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XBOOKIN)) AS C5_XBOOKIN,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVESSEL)) AS C5_XVESSEL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XCONTAI)) AS C5_XCONTAI,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTARE)) AS C5_XTARE,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPO)) AS C5_XPO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_LOTECTL)) AS C6_LOTECTL,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_NUMLOTE)) AS C6_NUMLOTE,\n\t\tcQuery   += \" \t\t\t\t\tC6_CF,\n\t\tcQuery   += \" \t\t\t\t\tC6_XPESO AS PESO_AMOSTRAS,\n\t\tcQuery   += \" \t\t\t\t\tC6_YESPLIQ * 100 AS C6_YESPLIQ,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(B5_YCEMEIN)) AS C6_DESCRI, \n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C6_DESCRI))  AS C6_DESCRI_P, \n\t\tcQuery   += \" \t\t\t\t\tIIF(RTRIM(LTRIM(C6_YCAVALE))='','-',RTRIM(LTRIM(C6_YCAVALE)))  AS C6_YCAVALE,\n\t\tcQuery   += \" \t\t\t\t\tC6_PRCVEN,\n\t\tcQuery   += \" \t\t\t\t\tROUND(C6_PRCVEN / 10.764,2) AS PRCVEN_SQFT,\n\t\tcQuery   += \" \t\t\t\t\tC5_XVLRFIN AS VALOR_FINANCEIRO,\n\t\tcQuery   += \" \t\t\t\t\tC6_QTDVEN,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_NUMLOTE<>'',1,0) AS QTD_CHAPAS,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',0,C6_QTDVEN) AS QTD_TOTAL_FATURAR,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='M2',C6_QTDVEN,0) AS QTD_TOTAL_M2,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_UM='PC',C6_QTDVEN,0) AS QTD_TOTAL_PC,\n\t\tcQuery   += \" \t\t\t\t\tC6_UM,\n\t\tcQuery   += \" \t\t\t\t\tC6_UNSVEN,\n\t\tcQuery   += \" \t\t\t\t\tC6_VALOR,\n\t\tcQuery   += \" \t\t\t\t\tIIF(C6_CF='7949',C6_VALOR,0) AS SAMPLE_DESC,\n\t\tcQuery   += \" \t\t\t\t\tC6_VALDESC,\n\t\tcQuery   += \" \t\t\t\t\tC6_YCOMLIQ,\n\t\tcQuery   += \" \t\t\t\t\tC6_YALTLIQ,\n\t\tcQuery   += \" \t\t\t\t\tC6_YTOTLIQ,\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOLQ FROM SB8010 WHERE D_E_L_E_T_ = '' AND  C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO) ,0) AS  B8_YPESOLQ,\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT TOP 1 B8_YPESOBR FROM SB8010 WHERE D_E_L_E_T_ = '' AND C6_LOTECTL = B8_LOTECTL AND C6_NUMLOTE = B8_NUMLOTE AND C6_YCAVALE = B8_YCAVALE AND B8_PRODUTO = C6_PRODUTO) ,0) AS  B8_YPESOBR,\n\t\tcQuery   += \" \t\t\t\t\tC5_XTESALE,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XVALEXT)) AS C5_XVALEXT,\n\t\tcQuery   += \" \t\t\t\t\tUPPER(ISNULL(CONVERT(VARCHAR(MAX), CONVERT(VARBINARY(MAX), C5_YOBSEXT)),'')) AS C5_YOBSEXT,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESING))  AS E4_DESING,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(E4_DESCRI))  AS E4_DESPOR,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XPORTLO)) AS C5_XPORTLO,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XTPCONT)) AS C5_XTPCONT,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XINSURA)) AS C5_XINSURA,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFIMDES)) AS C5_XFIMDES,\n\t\tcQuery   += \" \t\t\t\t\tRTRIM(LTRIM(C5_XFRFORW)) AS C5_XFRFORW,\n\t\tcQuery   += \" \t\t\t\t\tC5_XWLIMIT,\n\t\tcQuery   += \" \t\t\t\t\tCASE \n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'S' THEN 'STANDARD'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'C' THEN 'COMMERCIAL'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'P' THEN 'PREMIUM'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = '' AND C6_CF='7949' THEN 'SAMPLE'\n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = ''  THEN '' \n\t\tcQuery   += \" \t\t\t\t\t\tWHEN RTRIM(LTRIM(C6_YCLASSI)) = 'A' THEN 'SAMPLE'\n\t\tcQuery   += \" \t\t\t\t\tEND C6_YCLASSI,\n\t\tcQuery   += \" \t\t\t\t\tC5_XTOTAL,\n\t\tcQuery   += \" \t\t\t\t\tC5_XDESCON,\n\t\tcQuery   += \" \t\t\t\t\tC5_XPDESTI,\n\t\tcQuery   += \" \t\t\t\t\tISNULL((SELECT B8_LOTEFOR FROM SB8010 WHERE D_E_L_E_T_ = '' AND B8_LOTECTL = C6_LOTECTL AND B8_NUMLOTE = '' AND SUBSTRING(B8_PRODUTO,1,2) ='BL' ),'') AS LOTE_FORNECEDOR\n\t\tcQuery   += \" \t\t\t FROM SC6010 SC6 INNER JOIN SC5010 SC5\n\t\tcQuery   += \" \t\t\t\t   ON (C6_FILIAL = C5_FILIAL AND C6_NUM = C5_NUM )\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA1010 SA1\n\t\tcQuery   += \" \t\t\t\t   ON (A1_COD = C5_CLIENTE AND A1_LOJA = C5_LOJACLI )\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SYA010 SYA\n\t\tcQuery   += \" \t\t\t\t   ON (A1_PAIS = YA_CODGI)\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SA3010\n\t\tcQuery   += \" \t\t\t\t   ON (A1_VEND=A3_COD)\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SB5010 SB5\n\t\tcQuery   += \" \t\t\t\t   ON (C6_PRODUTO = B5_COD)\n\t\tcQuery   += \" \t\t\t\t   INNER JOIN SE4010 SE4\n\t\tcQuery   += \" \t\t\t\t   ON (E4_CODIGO = C5_CONDPAG)\n\t\tcQuery   += \" \t\t\t WHERE SC6.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SC5.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SA1.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SYA.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SB5.D_E_L_E_T_ = ''\n\t\tcQuery   += \" \t\t\t   AND SE4.D_E_L_E_T_ = ''\n\t  //cQuery   += \"              --AND SC5.C5_BLQ <> '1'\n\t\tcQuery   += \" \t\t\t   AND C5_NUM = '\"+SC5->C5_NUM+\"'\n\t\tcQuery   += \" \n\t\tcQuery   += \" )TAB_PROFORMA\n\t\tcQuery   += \" \t FULL OUTER JOIN ZGO010 ZGO\n\t\tcQuery   += \" \t   ON (C5_NUM = ZGO_PEDIDO)\n\t\tcQuery   += \" WHERE C5_NUM <> ''\n\t   //cQuery  += \"   --AND ISNULL(ZGO_INVOIC,'') LIKE '%'+@INVOICE+'%'\n\t\tcQuery   += \" )TB_TOTAL_CAV\n\t\tcQuery   += \" WHERE C6_YCAVALE <> '-'\n\t\tcQuery   += \" )TB_QTD_CAV\n\t\t\n\t\t\n\t\ttcQuery cQuery alias TRB new\n\t\tdbSelectArea(\"TRB\")\n\t\tdbgotop()\n\t\t\n\t\tIF !EOF()\n\t\t\tdbSelectArea(\"SC5\")\t\t\n\t\t\tIf RecLock(\"SC5\",.f.)\n\t\t\t\tReplace SC5->C5_VOLUME1  With TRB->QTD  \n\t\t\t\tMsUnLock()\n\t\t\tEndIf\t\n\t\tEndIf\n\t\t\t\t\t\t\n\t\tdbSelectArea(\"TRB\") \n\t\tdbCloseArea()\n\t\t\n\t\tIf RecLock(\"SC5\",.f.)\n\t\t\tIF SC5->C5_VOLUME1 == 0\n\t\t\t\tSC5->C5_VOLUME1 := 1\n\t\t\tEndIf\n\t\t\tMsUnLock()\n\t\tEndIf\t\n\t\t\n\tEndIf\n\nEndIf\n\nReturn()\n\n/*\nUser Function MDesTot()\n****************************************************************************************************************\n*    Programa dar o desconto  \n*\n****\nLocal nValorTemp := 0\n\nFor nX := 1 To Len(aCols)\n\t\tGdFieldPut(\"C6_DESCONT\",M->C5_DESC1,nX) \nNext nX\n\nReturn(.T.) \n*/\n\nStatic Function MValidPedV(oProcess, lEnd,lRet)\n****************************************************************************************************************\n*   /* Programa para validar o pedido de venda tabela de preço de chapas - Qualitá */\n*\n****\nLocal cQuery := \"\"\n\nLocal nPosCava := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_YCAVALE\"}) //Cavalete\nLocal nPosLOTE := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_LOTECTL\"}) //SubLote\nLocal nPosSUBL := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_NUMLOTE\"}) //Lote\nLocal nPosLOCA := aScan(aHeader, {|x| AllTrim(x[2]) == \"C6_LOCAL\"  }) //Lote\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\n\nLocal fTPBLQ   := .F.\n\nLocal aMsgPrc  := {}\nLoca  nX       := 0\n\nIf !IsBlind()     \n\toProcess:SetRegua1(8)\nEndIf\n\n/*\nSomente para Qualitá\n*/\nConOut(FUNNAME())\nIf SubString(CNUMEMP,1,2) == \"01\" .And. (INCLUI == .T. .Or. ALTERA == .T.) .AND. (FUNNAME() <> \"GROA001\")\n\n\n\tM->C5_XMOTBLQ := \"\"\n\n\t/*\n\tSomente para Mercado Externo\n\tValidação mercado interno campos FollowUp\n\t*/\n\tIf M->C5_YTIPO $ \"ME/MI\"\n\t\tIF M->C5_XSHOWFO == \"S\"\n\t\t\tIf Empty(M->C5_XFOLLST) .Or. Empty(M->C5_XPENDEN) .Or. Empty(M->C5_XDTLIBF)\n\t\t\t\tAlert(\"FollowUp='SIM'! O P.Venda não pode ser salvo sem as informações de Pendência/Situação/Data de Liberação. \")\t\n\t\t\t\tReturn(.F.)\n\t\t\tEndIf\n\t\tEndIf\n\tEndIf\n\n\tcDesMoed := \"\"\n\toFont := TFont():New('Arial Black',,-18,.T.)\n\t\n\tIf     M->C5_MOEDA == 1\n\t\tcDesMoed := \"1 - (R$)   R E A L\"\n\tElseIf M->C5_MOEDA == 2\n\t\tcDesMoed := \"2 - ($)    D O L A R\"\n\tElseIf M->C5_MOEDA == 3\n\t\tcDesMoed := \"3 - (€)    E U R O\"\n\tEndIf\n\t\n\tIf !IsBlind()     \n\t\tDEFINE MSDIALOG _oDlgMoeda TITLE \"Moeda\" FROM u_MGETTELA(178),u_MGETTELA(181) TO u_MGETTELA(342),u_MGETTELA(577) PIXEL\n\t\t\t// Cria as Groups do Sistema\n\t\t\t@ u_MGETTELA(001),u_MGETTELA(003) TO u_MGETTELA(062),u_MGETTELA(195) LABEL \"\" PIXEL OF _oDlgMoeda\n\t\t\n\t\t\t// Cria Componentes Padroes do Sistema\n\t\t\t@ u_MGETTELA(009),u_MGETTELA(010) Say \"Pedido sendo salvo na moeda:\" Size u_MGETTELA(075),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgMoeda\n\t\t\t@ u_MGETTELA(033),u_MGETTELA(078) Say cDesMoed \t\t\t\t\t\t Size u_MGETTELA(090),u_MGETTELA(080) COLOR CLR_HMAGENTA FONT oFont PIXEL OF _oDlgMoeda\n\t\t\t@ u_MGETTELA(064),u_MGETTELA(156) Button \"OK\" ACTION(Close(_oDlgMoeda)) Size u_MGETTELA(037),u_MGETTELA(012) PIXEL OF _oDlgMoeda\n\t\tACTIVATE MSDIALOG _oDlgMoeda CENTERED \n\tEndIf\n\n\tConOut(\"******************************************\" )\n\tConOut(\"Inicio P.E = MT410TOK Qualitá\" )\n\tConOut(\"******************************************\" )\t\n\t/*\n\t****************************************************************\n\tConferencia da tabela de preço com o desconto cadastrado por classificação comercial\n\t****************************************************************\n\t*/\n\tdbSelectArea(\"SA1\")\n\tdbSetOrder(1)\n\tdbSeek(xFilial(\"SA1\") + M->C5_CLIENTE + M->C5_LOJACLI )\n\t\n\tIf !Empty(SA1->A1_INFDESC)\n\t\tAlert(\"Aviso! Este cliente possui um desconto padrão! Verifique sempre pela tela [F5].\")\n\tEndIf\n\t\n\tIF M->C5_TIPO $ \"D\"\n\t\tReturn(.T.)\n\tEndIf\n\t\n\tIf !IsBlind()     \n\t\toProcess:IncRegua1(\"[1-8] - Conferência da tabela de preço com o desconto cadastrado!\")  \n\tEndIf\n\n\tFor nX := 1 To Len(aCols)\n\t\t/*\n\t\tRegra geral de tabela de preços \n\t\t*/\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t//\"0005/0006/0034/0035/0036\"\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\t\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\t\t\t\n\t\t\tIf Empty(SA1->A1_TABELA)\n\n\t\t\t\tIf Empty(GdFieldGet(\"C6_YCLASSI\",nX))\n\t\t\t\t\tcClassif := \"P\"\n\t\t\t\tElse\n\t\t\t\t\tcClassif := AllTrim(GdFieldGet(\"C6_YCLASSI\",nX))\n\t\t\t\tEndIf\n\n\t\t\t\tIf GdFieldGet(\"C6_XOFERTA\",nX) == 'N'\n\n\t\t\t\t\tcQuery  := \" SELECT DA1_CODTAB,DA0_DESCRI,DA0_DESGER ,DA1_PRCVEN , CASE WHEN DA1_PERDES=0  THEN 1 WHEN DA1_PERDES<>0 THEN DA1_PERDES END  DA1_PERDES \n\t\t\t\t\tcQuery  += \"   FROM DA0010 DA0 \n\t\t\t\t\tcQuery  += \"        INNER JOIN DA1010 DA1 \n\t\t\t\t\tcQuery  += \" ON (DA0_CODTAB = DA1_CODTAB)\n\t\t\t\t\t\n\t\t\t\t\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) <> 'AM'\n\t\t\t\t\t\tcQuery  += \"  WHERE DA0_YCLASS IN ('\"+ cClassif +\"')\n\t\t\t\t\t\tcQuery  += \"    AND DA1_CODPRO = '\" + AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\"\t\t\n\t\t\t\t\tElse\n\t\t\t\t\t\tcQuery  += \"  WHERE DA1_CODPRO = '\" + AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\"\t\n\t\t\t\t\tEndIf\n\t\t\t\t\t\t\t\n\t\t\t\t\tIF !EMPTY(SA1->A1_MULTTAB)\n\t\t\t\t\t\tcQuery  += \"    AND DA0_CODTAB IN (\"+AllTrim(SA1->A1_MULTTAB)+\")\"\n\t\t\t\t\tELSE\n\t\t\t\t\t\tcQuery  += \"    AND DA0_CODTAB IN ('000','001','002','003')\n\t\t\t\t\tEndIf\n\t\t\t\t\tcQuery  += \"    AND DA0.D_E_L_E_T_ = ''\n\t\t\t\t\tcQuery  += \"    AND DA1.D_E_L_E_T_ = ''\n\t\t\t\t\t\n\t\t\t\t\ttcQuery cQuery alias TRB new\n\t\t\t\t\tdbSelectArea(\"TRB\")\n\t\t\t\t\tdbgotop()\n\t\t\t\t\t\n\t\t\t\t\tIf Empty(TRB->DA1_PRCVEN) .and. !GDDeleted(nX) \n\t\t\t\t\t\tAlert(\"[C6_PRCVEN] - Tabela de preço não encontrada! Linha:(\" + Alltrim(str(nX)) +\") Confira a classif. do produto ou Mult.Tabelas preços no Cad. Cliente.\" )\n\t\t\t\t\t\tlRet := .F. \n\t\t\t\t\t\t//sleep(300)\t\n\t\t\t\t\t\tM->C5_BLQ  := '1'\n\t\t\t\t\tEndIf\n\t\t\t\t\t\n\t\t\t\t\t//If GdFieldGet(\"C6_PRCVEN\",nX) <  IIF(cClassif==\"P\",((TRB->DA1_PRCVEN - TRB->DA0_DESGER)),((TRB->DA1_PRCVEN * TRB->DA0_DESGER))) .and. !GDDeleted(nX)\n\t\t\t\t\tIf GdFieldGet(\"C6_PRCVEN\",nX) <  IIF(cClassif==\"P\",((TRB->DA1_PRCVEN - TRB->DA0_DESGER)),((TRB->DA1_PRCVEN))) .and. !GDDeleted(nX)\n\t\t\t\t\t\t//aAdd(aMsgPrc,\"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + Alltrim(str(nX))+\" Tabela de Preço:\" + AllTrim(TRB->DA1_CODTAB) + \"-\"+ AllTrim(TRB->DA0_DESCRI))  \n\t\t\t\t\t\taAdd(aMsgPrc,\"Cavalete:\"+GdFieldGet(\"C6_YCAVALE\",nX)+\" Tabela de Preço:\" + AllTrim(TRB->DA1_CODTAB) + \"-\"+ AllTrim(TRB->DA0_DESCRI) )\n\t\t\t\t\t\t//lRet := .F.\n\t\t\t\t\t\tConOut(\"******************************************\")\n\t\t\t\t\t\tConOut(\"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + Alltrim(str(nX)))\n\t\t\t\t\t\tConOut(\"******************************************\")\n\t\t\t\t\t\t//sleep(300)\n\t\t\t\t\t\tM->C5_BLQ  := '1'\t\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"PREÇO MENOR QUE A TABELA DE PREÇO:\"+ AllTrim(TRB->DA1_CODTAB),nX)\t\n\t\t\t\t\tELSE\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\n\t\t\t\t\tEndIf\n\n\t\t\t\t\tGdFieldPut(\"C6_PRCREF\",TRB->DA1_PRCVEN,nX)\n\t\t\t\t\t\n\t\t\t\t\tdbSelectArea(\"TRB\") \n\t\t\t\t\tdbCloseArea()\n\t\t\t\telse\n\t\t\t\t\tM->C5_BLQ  := ''\n\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\n\t\t\t\tEndIf\n\n\t\t\t\tIF lRet == .F. .And. !IsBlind()  \n\t\t\t\t\tReturn(lRet) \n\t\t\t\tEndIf\n\t\t\tElse\n\t\t\t\t/*\n\t\t\t\tUsado para definir uma tabela de preço especifica para o cliente\n\t\t\t\t*/\n\t\t\t\tIf GdFieldGet(\"C6_XOFERTA\",nX) == 'N'\n\t\t\t\t\n\t\t\t\t\tcQuery  := \" SELECT DA1_CODTAB,DA0_DESCRI,DA0_DESGER,DA1_PRCVEN , CASE WHEN DA1_PERDES=0  THEN 1 WHEN DA1_PERDES<>0 THEN DA1_PERDES END  DA1_PERDES\n\t\t\t\t\tcQuery  += \"   FROM DA0010 DA0 \n\t\t\t\t\tcQuery  += \"        INNER JOIN DA1010 DA1 \n\t\t\t\t\tcQuery  += \" ON (DA0_CODTAB = DA1_CODTAB)\n\t\t\t\t\t\n\t\t\t\t\tIf SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) <> 'AM'\n\t\t\t\t\t\tcQuery  += \"  WHERE DA1_CODTAB IN ('\"+ M->C5_TABELA +\"')\n\t\t\t\t\t\tcQuery  += \"    AND DA1_CODPRO = '\"+AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\n\t\t\t\t\tElse\n\t\t\t\t\t\t//TABELA PADRÃO DE AMOSTRAS\n\t\t\t\t\t\tcQuery  += \"  WHERE DA1_CODPRO = '\"+AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+\"'\n\t\t\t\t\t\tcQuery  += \"    AND DA0_CODTAB IN ('000')\n\t\t\t\t\tEndIf-\n\t\t\t\n\t\t\t\t\tcQuery  += \"    AND DA0.D_E_L_E_T_ = ''\n\t\t\t\t\tcQuery  += \"    AND DA1.D_E_L_E_T_ = ''\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\ttcQuery cQuery alias TRB new\n\t\t\t\t\tdbSelectArea(\"TRB\")\n\t\t\t\t\tdbgotop()\n\t\t\t\t\t\n\t\t\t\t\tIf Empty(TRB->DA1_PRCVEN) .and. !GDDeleted(nX)\n\t\t\t\t\t\tAlert(\"[C6_PRCVEN] - Tabela de preço não encontrada! Linha:(\" + Alltrim(str(nX)) +\") Confira a classif. do produto ou Mult.Tabelas preços no Cad. Cliente.\" )\n\t\t\t\t\t\tlRet := .F.\n\t\t\t\t\t\t//sleep(300)\n\t\t\t\t\t\tM->C5_BLQ  := '1'\n\t\t\t\t\tEndIf\n\t\t\t\t\t\n\t\t\t\t\tIf GdFieldGet(\"C6_PRCVEN\",nX) <  TRB->DA1_PRCVEN .and. !GDDeleted(nX)\n\t\t\t\t\t\taAdd(aMsgPrc,\"Cavalete:\"+GdFieldGet(\"C6_YCAVALE\",nX)+\" Tabela de Preço:\" + AllTrim(TRB->DA1_CODTAB) + \"-\"+ AllTrim(TRB->DA0_DESCRI) ) \n\t\t\t\t\t\t//lRet := .F.\n\t\t\t\t\t\tConOut(\"******************************************\" )\n\t\t\t\t\t\tConOut(\"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + Alltrim(str(nX)))\n\t\t\t\t\t\tConOut(\"******************************************\" )\n\t\t\t\t\t\t//sleep(300)\t\n\t\t\t\t\t\tM->C5_BLQ  := '1'\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"Preço menor que a tabela:\"+ AllTrim(TRB->DA1_CODTAB),nX)\t\n\t\t\t\t\tELSE\n\t\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\n\t\t\t\t\tEndIf\n\n\t\t\t\t\tGdFieldPut(\"C6_PRCREF\",TRB->DA1_PRCVEN,nX)\n\t\t\t\t\t\n\t\t\t\t\tdbSelectArea(\"TRB\") \n\t\t\t\t\tdbCloseArea()\n\t\t\t\tElse\n\t\t\t\t\tM->C5_BLQ  := ''\n\t\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"\",nX)\n\t\t\t\tEndIf\n\n\t\t\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\t\t\tReturn(lRet) \n\t\t\t\tEndIf\n\t\t\t\n\t\t\tEndIf\n\t\t\t\t\n\t\tEndIf\n\tNext nX\n\t\n\tcMSG := \"\"\n\t\n\tFor nX:=1 to Len(aMsgPrc)\n\t\t\tIf Empty(cMSG)\n\t\t\t\tcMSG := \"[C6_PRCVEN] - Preço menor que o permitido para esse produto. Linha:\" + chr(13)+chr(10) \n\t\t\tEndIf\n\t\t\tcMSG += aMsgPrc[nX] + chr(13)+chr(10)   \n\tNext nX\n\t\n\t\n\tIf !Empty(cMSG)\n\t\tAlert(cMSG)  \n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\tEndIf\n\t\n\t\n\t/*\n\t***************************************************************************************\n\tVerifica o erro do saldo no cavalete e no pedido \n\t***************************************************************************************\n\t\n\tnQtdPedVend := 0\n\t\n\tFor nX := 1 To Len(aCols)\n\t\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\n\t\tnQtdPedVend := GdFieldGet(\"C6_QTDVEN\",nX))\n\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec \n\t\t\tIf !GDDeleted(nX)\n\t\t\t\t\n\t\t\tEndIf\n\t\tEndIf\n\t\t\n\tNext nX\n\t*/\n\t\n\tConOut(\"******************************************\" )\n\tConOut(\"P.E = MT410TOK Qualitá Validação de cavaletes\" )\n\tConOut(\"******************************************\" )\n\n\t/*\n\t****************************************************************\n\tConferencia do cavaletes duplicados no proprio pedido \n\t****************************************************************\n\t*/\n\taNumCav \t:= {}\t\t\n\taTodCav \t:= {}\n    aGriCav \t:= {}\n    aGriCavDup \t:= {}\n    aGriLSPv    := {}\n    aLSPvLoca   := {}\t\n    aCavZero    := {}\n    aNumCavPro  := {}\n\taCavBenef   := {}\n    \n\tFor nX := 1 To Len(aCols)\n\t\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t//\"0005/0006/0034/0035/0036\"\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\t\n\t\t//ALERT(SB1->B1_COD +\"||\"+ SB1->B1_GRUPO)\n\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec \n\t\n\t\t\tIf !Empty(GdFieldGet(\"C6_YCAVALE\",nX)) .and. !GDDeleted(nX) \n\t\t\t\tIf Empty( aScan(aNumCav,GdFieldGet(\"C6_YCAVALE\",nX)) )\n\t\t\t\t \taAdd(aNumCav   ,GdFieldGet(\"C6_YCAVALE\",nX))\n\t\t\t\t \taAdd(aNumCavPro,{GdFieldGet(\"C6_YCAVALE\",nX),GdFieldGet(\"C6_PRODUTO\",nX)})\n\t\t\t\tEndIf\n\t\t\tEndIf\n\t\t\tIf !GDDeleted(nX)\n\t\t\t\tIf Empty(aScan(aGriCav,AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) + GdFieldGet(\"C6_YCAVALE\",nX) + GdFieldGet(\"C6_LOTECTL\",nX) + GdFieldGet(\"C6_NUMLOTE\",nX)) )\n\t\t\t\t\taAdd(aGriCav , AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) + GdFieldGet(\"C6_YCAVALE\",nX) + GdFieldGet(\"C6_LOTECTL\",nX) + GdFieldGet(\"C6_NUMLOTE\",nX)  )\n\t\t\t\t\taAdd(aGriLSPv, {GdFieldGet(\"C6_LOTECTL\",nX) , GdFieldGet(\"C6_NUMLOTE\",nX) , AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))} )\n\t\t\t\tElse\n\t\t\t\t\tIF LEFT(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)),2)<>'AM'\n\t\t\t\t\t\taAdd(aGriCavDup, AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))+GdFieldGet(\"C6_YCAVALE\",nX) + GdFieldGet(\"C6_LOTECTL\",nX) + GdFieldGet(\"C6_NUMLOTE\",nX)  )\n\t\t\t\t\tEndIf\n\t\t\t\tEndIf\n\t\t\tEndIf\n\t\t\t\n\t\tEndIf\n\t\t\n\tNext nX\n\t\n\tcMSG := \"\"\n\tFor nX:=1 to Len(aGriCavDup)\n\t\t\tIf Empty(cMSG)\n\t\t\t\tcMSG := \"Duplicados no pedido atual:\" + chr(13)+chr(10) \n\t\t\tEndIf\n\t\t\tcMSG += \"O item: \" + aGriCavDup[nX] + chr(13)+chr(10)   \n\tNext nX\n\t\n\tIf !Empty(cMSG)\n\t\tAlert(cMSG)\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\tlRet := .F.\n\t\t\n\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\tReturn(lRet) \n\t\tEndIf\n\tEndIf\n\t\n\t/*\n\t****************************************************************\n\tConferencia se todos os itens do cavales estao completos (Se estiverem em cavaletes)\n\tCavalete apagado por completo\n\tA mesma rotina confere se existe produtos sem saldo.\n\t****************************************************************\n\t*/\n\tIf !IsBlind()     \n\t\toProcess:IncRegua1(\"[2-8] - Teste de cavales completos,apagados e sem saldo!\")\n\tEndIf\n\n\t/*\n\tSOMENTE SE O PEDIDO NAO ESTIVER FATURADO \n\t*/\n\tIF LEN(AllTrim(M->C5_NOTA)) <> 9\n\t\n\t\t/*\n\t\tVALIDAÇÃO DO CAMPO DA ULTIMA ATUALIZAÇÃO DO FOLLOWUP\n\t\t*/\n\t\tM->C5_XULDTAU := DDATABASE\n\n\t\tFor nX := 1 To Len(aNumCavPro)\n\t\t\n\t\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t\t//\"0005/0006/0034/0035/0036\"\n\t\t\tdbSelectArea(\"SB1\")\n\t\t\tdbSetOrder(1)\n\t\t\tdbSeek(xFilial(\"SB1\")+ aNumCavPro[nX][2] )\n\t\t\t\n\t\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\n\t\t\n\t\t\t \tcQuery  := \"  SELECT B8_PRODUTO,B1_DESC,B8_YCAVALE,B8_LOTECTL,B8_NUMLOTE,B8_YCAVALE+B8_LOTECTL+B8_NUMLOTE+B8_LOCAL CHAVE,B8_LOCAL,B8_SALDO \n\t\t\t \tcQuery  += \"    FROM SB8010 SB8 INNER JOIN SB1010 SB1 ON (B8_PRODUTO = B1_COD)\n\t\t\t \tcQuery  += \"   WHERE SB8.D_E_L_E_T_ = ''\n\t\t\t \tcQuery  += \"     AND SB1.D_E_L_E_T_ = ''\n\t\t\t \tcQuery  += \"     AND B8_YCAVALE = '\"+aNumCavPro[nX][1]+\"'\n\t\t\t \tcQuery  += \"     AND B8_PRODUTO = '\"+aNumCavPro[nX][2]+\"'\n\t\t\t \tcQuery  += \"     AND B8_ORIGLAN = 'BD'\n\t\t\t \tcQuery  += \"     AND B8_SALDO   <> 0\n\t\t\t \t\n\t\t\t \ttcQuery cQuery alias TRB new\n\t\t\t\tdbSelectArea(\"TRB\")\n\t\t\t\tdbgotop()\n\t\t\t\tDo While !EOF()\n\t\t\t\t\n\t\t\t\t\t/*\n\t\t\t\t\tcavaletes incompletos\n\t\t\t\t\t*/\n\t\t\t\t\tIF !aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE })  \n\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE , TRB->B8_LOCAL} )\n\t\t\t\t\tElse\n\t\t\t\t\t\tif GDDeleted(aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE }))\n\t\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE,TRB->B8_LOCAL} )\n\t\t\t\t\t\tEndIf \n\t\t\t\t\tEndIf\n\t\t\t\t\t\n\t\t\t\t\t/*\n\t\t\t\t\tSem Saldo\n\t\t\t\t\t*/\n\t\t\t\t\tIf TRB->B8_SALDO == 0  \n\t\t\t\t\t\taAdd(aCavZero,{ TRB->CHAVE ,AllTrim(TRB->B8_PRODUTO)+\"-\"+ AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE, TRB->B8_LOCAL} )\n\t\t\t\t\tEndIf\n\t\t\t\t\t\n\t\t\t\t\tdbSelectArea(\"TRB\") \n\t\t\t\t\tdbSkip()\n\t\t\t\tEndDo\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\tCavalete apagado\n\t\t\t\t*/\n\t\t\t\tdbSelectArea(\"TRB\")\n\t\t\t\tdbgotop()\n\t\t\t\tIf EOF() .And.  !Empty(aNumCav[nX])\n\t\t\t\t\n\t\t\t\t\tIF !aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE })  \n\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE, TRB->B8_LOCAL} )\n\t\t\t\t\tElse\n\t\t\t\t\t\tif GDDeleted(aScan(aCols,{|x|x[nPosCava]+x[nPosLOTE]+x[nPosSUBL]+x[nPosLOCA] == TRB->CHAVE }))\n\t\t\t\t\t\t\taAdd(aTodCav,{ TRB->CHAVE , AllTrim(TRB->B1_DESC) , aNumCav[nX] , TRB->B8_LOTECTL , TRB->B8_NUMLOTE , TRB->B8_LOCAL} )\n\t\t\t\t\t\tEndIf \n\t\t\t\t\tEndIf\n\t\t\t\t\t\n\t\t\t\tEndIf\n\n\t\t\t\tdbSelectArea(\"TRB\") \n\t\t\t\tdbCloseArea()\n\t\t\tEndIf\n\n\n\t\t\t/*\n\t\t\tCavalete em beneficiamento não pode \n\t\t\tProibe\n\t\t\t*/\n\t\t\tIf aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] }) <> 0 .AND. M->C5_TIPO = 'B'\n\t\t\t\taAdd(aCavBenef,{ aNumCavPro[nX][1] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][3] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][5] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][10] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][36] , aCols[aScan(aCols,{|x|x[nPosCava] == aNumCavPro[nX][1] })][24]} )\n\t\t\tEndIf\n\t\t\t\n\t\tNext nX\n\n\n\t\tcMSG := \"\"\n\n\t\t/*\n\t\tBeneficiamento\n\t\t*/\t\t\n\t\tFor nX:=1 to Len(aCavBenef)\n\t\t\tIf Empty(cMSG)\n\t\t\t\tcMSG := \"Pedido de Beneficiamento com cavaletes:\" + chr(13)+chr(10) \n\t\t\tEndIf\t\t\t\n\t\t\tcMSG +=     \"  ->\" + AllTrim(aCavBenef[nX][2]) + \" Cav.[\" + Alltrim(aCavBenef[nX][3]) + \"] Lote[\" + Alltrim(aCavBenef[nX][4]) + \"] SubLote[\" + Alltrim(aCavBenef[nX][5]) + \"] Local [\"+ Alltrim(aCavBenef[nX][6]) +\"].\"+ chr(13)+chr(10)   \n\t\tNext nX\n\n\t\t/*\n\t\tIncompletos/Apagado\n\t\t\n\t\tFor nX:=1 to Len(aTodCav)\n\t\t\tIf Empty(cMSG)\n\t\t\t\tcMSG := \"Cavaletes incompletos/Apagado:\" + chr(13)+chr(10) \n\t\t\tEndIf\t\t\t\n\t\t\tcMSG +=     \"  ->\" + AllTrim(aTodCav[nX][2]) + \" Cav.[\" + Alltrim(aTodCav[nX][3]) + \"] Lote[\" + Alltrim(aTodCav[nX][4]) + \"] SubLote[\" + Alltrim(aTodCav[nX][5]) + \"] Local [\"+ Alltrim(aTodCav[nX][6]) +\"].\"+ chr(13)+chr(10)   \n\t\tNext nX\n\t\t*/\n\t\tIf !Empty(cMSG)\n\t\t\tAlert(cMSG)\n\t\t\t//AVISO(\"Cavaletes incompletos:\", cMSG , { \"Fechar\" }, 3)\n\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\t\tlRet := .F.\n\n\t\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\t\tReturn(lRet)\n\t\t\tEndIf \n\t\tEndIf\n\t\n\t\t/*\n\t\tSem Saldo\n\t\t*/\n\t\tcMSG := \"\"\n\t\tFor nX:=1 to Len(aCavZero)\n\t\t\tIf Empty(cMSG)\n\t\t\t\tcMSG := \"Produtos sem saldo:\" + chr(13)+chr(10) \n\t\t\tEndIf\t\t\t\n\t\t\tcMSG +=     \"  ->\" + AllTrim(aCavZero[nX][2]) + \" Cav.[\" + Alltrim(aCavZero[nX][3]) + \"] Lote[\" + Alltrim(aCavZero[nX][4]) + \"] SubLote.[\" + Alltrim(aCavZero[nX][5]) + \"]\"+ chr(13)+chr(10)   \n\t\tNext nX\n\t\t\n\t\tIf !Empty(cMSG)\n\t\t\tIF (!Empty(C5_NOTA).Or.C5_LIBEROK=='E' .And. Empty(C5_BLQ))\n\t\t\t\tAlert(cMSG)\n\t\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\t\tELse \n\t\t\t\tAlert(cMSG)\n\t\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\t\t\t\n\t\t\t\tlRet := .F.\n\n\t\t\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\t\t\tReturn(lRet)\n\t\t\t\tEndIf \n\t\t\tEndIf\n\t\tEndIf\n\t\t\n\tEndIf\n\t\n\t/*\n\t****************************************************************\n\tConferencia se existe estes Lote/SubLotes em um PVenda salvo\n\t****************************************************************\n\t*/\n\tIf !IsBlind()     \n\t\toProcess:IncRegua1(\"[3-8] - Conferência se existe  Lote/SubLotes em um P.Venda salvo!\")\n\tENDIF\n\n\tFor nX := 1 To Len(aGriLSPv)\n\t\t \t\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t//\"0005/0006/0034/0035/0036\"\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(aGriLSPv[nX][3]) )\n\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec .AND. !Empty(aGriLSPv[nX][1])\n\t\t \tcQuery  := \" SELECT C6_NUM,C6_ITEM,C6_LOTECTL,C6_NUMLOTE ,C6_DESCRI \n\t\t \tcQuery  += \"   FROM SC6010 SC6 INNER JOIN SC5010 SC5 ON (C5_FILIAL = C6_FILIAL AND C5_NUM = C6_NUM)\n\t\t \tcQuery  += \"  WHERE SC6.D_E_L_E_T_ = ''\n\t\t \tcQuery  += \"    AND SC5.D_E_L_E_T_ = ''\n\t\t \tcQuery  += \"    AND C5_TIPO = 'N'\n\t\t \tcQuery  += \"    AND C6_NOTA = ''\n\t\t \tcQuery  += \" \tAND C6_LOTECTL = '\"+aGriLSPv[nX][1]+\"'\n\t\t \tcQuery  += \" \tAND C6_NUMLOTE = '\"+aGriLSPv[nX][2]+\"'\n\t\t \tcQuery  += \"    AND C6_NUM <> '\"+AllTrim(M->C5_NUM)+\"'\n\t\t \t\n\t\t \ttcQuery cQuery alias TRB new\n\t\t\tdbSelectArea(\"TRB\")\n\t\t\tdbgotop()\n\t\t\tDo While !EOF()\n\t\t\t\n\t\t\t\tIf !aScan(aLSPvLoca,{|x|alltrim(x[1]) == AllTrim(TRB->C6_NUM) })\n\t\t\t\t\taAdd(aLSPvLoca,{ AllTrim(TRB->C6_NUM) , TRB->C6_ITEM,TRB->C6_LOTECTL , TRB->C6_NUMLOTE , AllTrim(TRB->C6_DESCRI) } )\n\t\t\t\tElse\n\t\t\t\t\taLSPvLoca[aScan(aLSPvLoca,{|x|alltrim(x[1]) == AllTrim(TRB->C6_NUM) })][2] := aLSPvLoca[aScan(aLSPvLoca,{|x|alltrim(x[1]) == AllTrim(TRB->C6_NUM) })][2] + \",\" + TRB->C6_ITEM\n\t\t\t\tEndIf\n\t\t\t\t\n\t\t\t\tdbSelectArea(\"TRB\") \n\t\t\t\tdbSkip()\n\t\t\tEndDo\n\t\t\t\n\t\t\tdbSelectArea(\"TRB\") \n\t\t\tdbCloseArea()\n\t\t\n\t\tEndIf\n\t\t\n\tNext nX\n\t\n\tcMSG := \"\"\n\tFor nX:=1 to Len(aLSPvLoca)\n\t\t\tIf Empty(cMSG)\n\t\t\t\tcMSG := \"Itens encontrados em outro P.Venda:\" + chr(13)+chr(10) \n\t\t\tEndIf\n\t\t\tcMSG += \"  -> P.Venda:\" + aLSPvLoca[nX][1] +\" Item:\"+ aLSPvLoca[nX][2] +\" Prod.:\" + aLSPvLoca[nX][5] + chr(13)+chr(10)   \n\tNext nX\n\t\n\tIf !Empty(cMSG)\n\t\tAlert(cMSG)\n\t\t//AVISO(\"Itens encontrados em outro P.Venda:\", cMSG , { \"Fechar\" }, 3)\n\t\t//sleep(300)\t\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\t\n\t\tlRet := .F.\n\n\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\tReturn(lRet)\n\t\tEndIf \n\tEndIf\n\t\n\t/*\n\t*******************************************\n\tValidação Valores fiscais e descontos e totais\n\t*******************************************\n\t*/\n\tIf !IsBlind()     \n\t\toProcess:IncRegua1(\"[4-8] - Conferência fiscal, descontos e valores!\")\n\tENDIF\n\n\taDadosGrv := FCalImp(@oProcess)\n\t\n\tIf LEN(aDadosGrv)>0\n\t\tM->C5_XVALEXT := AllTrim(Extenso((aDadosGrv[4] + aDadosGrv[3]) ,.f.,M->C5_MOEDA,,\"3\",.t.,.f.))\n\t\tM->C5_XTOTAL  := (aDadosGrv[4] + aDadosGrv[3]) -  M->C5_DESCONT \n\t\tM->C5_XDESCON := aDadosGrv[2]  + M->C5_DESCONT \n\t\tM->C5_XVLRFIN := (aDadosGrv[4] + aDadosGrv[3]) -  M->C5_DESCONT \n\t\tM->C5_XDESPES := aDadosGrv[4]\n\t\t//M->C5_XSEGURO := aDadosGrv[5]\n\tEndIf \n\t\n\t\t\n\t/*\n\t*******************************************\n\tValidação do peso para Amostras \n\t*******************************************\n\t*/\n\tIf !IsBlind()  \n\t\toProcess:IncRegua1(\"[5-8] - Validação do peso para Amostras!\")\n\tEndIf\n\n\tcMSG := \"\"\n\t\n\tFor nX := 1 To Len(aCols)\n\t\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t//\"0005/0006/0034/0035/0036\"\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\n\t\n\t\t\tIf Empty(GdFieldGet(\"C6_XPESO\",nX)) .and. !GDDeleted(nX) .and. SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) == 'AM'\n\t\t\t\n\t\t\t\tIf Empty(cMSG)\n\t\t\t\t\tcMSG := \"Amostras sem Peso:\" + chr(13)+chr(10) \n\t\t\t\tEndIf\n\t\t\t\tcMSG += \"  -> Item do PV:\" + GdFieldGet(\"C6_ITEM\",nX) + \" Prod.:\" + AllTrim(GdFieldGet(\"C6_DESCRI\",nX)) + chr(13)+chr(10)  \n\t\t\t\t\t\t\t\t\n\t\t\tEndIf\n\t\t\t\n\t\t\tIf !GDDeleted(nX) .and. (SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) == 'AM' .Or. AllTrim(GdFieldGet(\"C6_YCLASSI\",nX)) == \"A\")\n\t\t\t\tM->C5_BLQ  := '1'\n\t\t\t\tGdFieldPut(\"C6_XMOTBLQ\",\"Produto Amostra! Requer aprovação.\" ,nX)\n\t\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(\"Produto Amostra! Requer aprovação.\") + chr(13)+chr(10)\n\t\t\t\tcMSG := AllTrim(cMSG) + AllTrim(\"Produto Amostra! Requer aprovação.\") + chr(13)+chr(10)\n\t\t\tEndIf\n\t\t\t\n\t\tEndIf\n\tNext nX\n\t\n\tIf M->C5_DESCONT  <> 0\n\t\tM->C5_BLQ  := '1'\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(\"O Campo de desconto de indenização foi preenchido. Ped. Venda requer aprovação.\" + chr(13)+chr(10))\n\t\tcMSG := AllTrim(cMSG) + \"O Campo de desconto de indenização foi preenchido. Ped. Venda requer aprovação.\" + chr(13)+chr(10)\n\tEndIf\n\t\n\tIF !EMPTY(cMSG)\n\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\t\n\t\tIf !IsBlind()  \n\t\t\tIf MsgYesNo(cMSG + chr(13)+chr(10)+ \"Deseja continuar?\" )\n\t\t\t\tlRet := .t.\n\t\t\tElse\n\t\t\t\tlRet := .F.\n\t\t\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\t\t\tReturn(lRet)\n\t\t\t\tEndIf \n\t\t\tEndIf\n\t\tEndIf\n\n\tEndIf\n\t\n\t/*\n\t*******************************************\n\tValidação para não permitir salvar o pedido com chapas sem cavaletes \n\t*******************************************\n\t*/\n\tIf !IsBlind()\n\t\toProcess:IncRegua1(\"[6-8] - Chapas sem cavaletes!\")\n\tEndIf\n\n\tcMSG := \"\"\n\t\n\t/*\n\tNão validar para filial de SP \n\tnão validar para Pedidos de Transferencia\n\t*/\n\tIF M->C5_YTIPO <> \"TF\" .AND. SubString(CNUMEMP,1,8) == \"01010101\" .and. M->C5_TIPO <> 'B'\n\n\t\tFor nX := 1 To Len(aCols)\n\t\t\n\t\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t\t//\"0005/0006/0034/0035/0036\"\n\t\t\tdbSelectArea(\"SB1\")\n\t\t\tdbSetOrder(1)\n\t\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )  \n\t\t\t\n\t\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\n\t\t\n\t\t\t\tIf Empty(GdFieldGet(\"C6_YCAVALE\",nX)) .and. !GDDeleted(nX) .and. SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) == 'CH'\n\t\t\t\t\n\t\t\t\t\tIf Empty(cMSG)\n\t\t\t\t\t\tcMSG := \"Chapas sem cavaletes:\" + chr(13)+chr(10) \n\t\t\t\t\tEndIf\n\t\t\t\t\tcMSG += \"  -> Item do PV:\" + GdFieldGet(\"C6_ITEM\",nX) + \" Prod.:\" + AllTrim(GdFieldGet(\"C6_DESCRI\",nX)) + chr(13)+chr(10)  \n\t\t\t\t\t\n\t\t\t\tEndIf\n\t\t\tEndIf\n\t\tNext nX\n\t\t\n\t\tIf !Empty(cMSG)\n\t\t\tAlert(cMSG)\n\t\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)  \n\t\t\t\n\t\t\tlRet := .F.\n\n\t\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\t\tReturn(lRet)\n\t\t\tEndIf \n\t\tEndIf\n\n\tEndIf\n\n\t/*\n\t*******************************************\n\tValidação para não permitir salvar o pedido fora dos almoxarificados ou locais determinados \n\t*******************************************\n\t*/\n\tIf !IsBlind()\n\t\toProcess:IncRegua1(\"[7-8] - Almoxarifado não permitido !\")\n\tENDIF\n\n\tcMSG := \"\"\n\n\tFor nX := 1 To Len(aCols)\n\t\n\t\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t\t//\"0005/0006/0034/0035/0036\"\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\t\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\n\t\n\t\t\tIf !GdFieldGet(\"C6_LOCAL\",nX) $ \"03/05\"  .and. !GDDeleted(nX) .and. SubStr(AllTrim(AllTrim(GdFieldGet(\"C6_PRODUTO\",nX))) ,1,2) $ 'CH/AM'\n\t\t\t\n\t\t\t\tIf Empty(cMSG)\n\t\t\t\t\tcMSG := \"Almoxarifado não permitido ! \" + chr(13)+chr(10) \n\t\t\t\tEndIf\n\t\t\t\tcMSG += \"  -> Item do PV:\" + GdFieldGet(\"C6_ITEM\",nX) + \" Prod.:\" + AllTrim(GdFieldGet(\"C6_DESCRI\",nX)) + chr(13)+chr(10)  \n\t\t\t\t\n\t\t\tEndIf\n\t\tEndIf\n\tNext nX\n\t\n\tIf !Empty(cMSG)\n\t\tAlert(cMSG)\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\t\n\t\tlRet := .F.\n\n\t\tIF lRet == .F. .and. !IsBlind()  \n\t\t\tReturn(lRet)\n\t\tEndIf \n\tEndIf\n\n\n    /*\n\t*******************************************\n\tValidação dos dados de condição de pagamento\n\t*******************************************\n\t*/\n\tIf !IsBlind()\n\t\toProcess:IncRegua1(\"[8-8] - Validação dos dados de condição de pagamento!\")\n\tEndIf\n\n\tM->C5_CONDPAG := u_ClintToMob(\"PG\")\n\n\tIf ! M->C5_TIPO $ \"D/B\"\n\t\tdbSelectArea(\"SA1\")\n\t\tdbSetOrder(1)\n\t\tIf dbSeek(xFilial(\"SA1\")+M->C5_CLIENTE+M->C5_LOJACLI)\n\t\t\tIf ! AllTrim(M->C5_CONDPAG) $ AllTrim(SA1->A1_XCONDPG)\n\n\t\t\t\tIf Empty(cMSG)\n\t\t\t\t\tcMSG := \"Pedido bloqueado! Condição de pagamento não permitida. Cond. Pag:[\"+ M->C5_CONDPAG +\"].\" + chr(13)+chr(10) \n\t\t\t\tEndIf\n\n\t\t\tEndIf\n\t\tEndIf \n\n\tEndIf\n\n\tIf !Empty(cMSG)\n\t\tAlert(cMSG)\n\t\tM->C5_XMOTBLQ := AllTrim(M->C5_XMOTBLQ) + AllTrim(cMSG) + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\tM->C5_BLQ     := \"1\"\n\tEndIf\n\t\n\t/*\n\tVALIDAÇÃO DO MOBGRAN\n\t*/\n\tIf  FunName() $ \"GROA014\" .And. INCLUI == .T.\n\t\t\n\t\tIf !Empty(M->C5_XIDMOB)\n\n\t\t\t/*\n\t\t\tVerifica se existe a chave no mobgran.\n\t\t\t*/\n\t\t\tcQuery  := \" SELECT * FROM ZSA010 WHERE D_E_L_E_T_ = '' AND ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\"' AND ZSA_STATUS ='ATIVA'\n\t\t\t\n\t\t\ttcQuery cQuery alias TRB new\n\t\t\tdbSelectArea(\"TRB\")\n\t\t\tdbgotop()\n\t\t\t\n\t\t\tIf EOF() \n\t\t\t\tlRet := .F.\n\t\t\tEndIf\n\n\t\t\tIf TRB->ZSA_STATUS <> 'ATIVA'\n\t\t\t\tlRet := .F.\n\t\t\tEndIf\n\t\t\t\n\t\t\tIf lRet == .F.\n\t\t\t\tAlert(\"Chave não encontrada ou Status:(>>\"+ TRB->ZSA_STATUS +\"<<) no MobGran!\")\n\t\t\t\tReturn(lRet)\t\n\t\t\tEndIf\n\n\t\t\tdbSelectArea(\"TRB\") \n\t\t\tdbCloseArea()\t\n\n\t\tElse\n\t\t\t\n\t\t\tlRet := .F.\n\t\t\tAlert(\"Chave do MobGran em branco! Favor informar um código.\")\n\t\t\tReturn(lRet)\n\n\t\tEndIf\n\n\tElseIf FunName() $ \"GROA013\" \n\t\tIf AllTrim(M->C5_XIDMOB) == '-'\n\t\t\tlRet := .T.\n\t\telse\n\t\t\tcQuery  := \" SELECT * FROM ZSA010 WHERE D_E_L_E_T_ = '' AND ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\"' AND ZSA_STATUS ='ATIVA'\n\t\t\t\n\t\t\ttcQuery cQuery alias TRB new\n\t\t\tdbSelectArea(\"TRB\")\n\t\t\tdbgotop()\n\t\t\t\n\t\t\tIf EOF() \n\t\t\t\tlRet := .F.\n\t\t\tEndIf\n\n\t\t\tIf TRB->ZSA_STATUS <> 'ATIVA'\n\t\t\t\tlRet := .F.\n\t\t\tEndIf\n\n\t\t\tIf lRet == .F.\n\t\t\t\tAlert(\"Chave não encontrada ou Status:(>>\"+ TRB->ZSA_STATUS +\"<<) no MobGran!\")\n\t\t\t\tReturn(lRet)\t\n\t\t\tEndIf\t\t\t\n\t\t\t\n\t\t\tdbSelectArea(\"TRB\") \n\t\t\tdbCloseArea()\t\n\t\tEndIf\n\tEndIf\n\n\t/*\n\tEnvio de aviso de alteração de pedidos \n\t*/\n\tIF        AllTrim(C5_XSHOWFO) = 'S';\n\t\t.AND. AllTrim(C5_XPENDEN) $ 'COM/LOG';\n\t\t.AND. AllTrim(C5_XFOLLST) = 'BOOKING SOLICITADO'\n\n\t\t/*\n\t\tEMAIL\n\t\t*/\n\t\tIf SC5->C5_YTIPO == \"ME\"\n\t\t\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\n\t\tElse\n\t\t\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003_P&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\n\t\tEndIf\n\t\t\n\t\tConOut(\"Gerando relatório! Ped. Venda:\" + AllTrim(SC5->C5_NUM) )\n\t\tsleep(300)\n\t\tConOut(\"Gerando e-mail! Ped. Venda:\" + AllTrim(SC5->C5_NUM) )\n\t\t\n\t\tTCSPExec(\"SP_SENDMAIL\",'ITINGA',\"backoffice.es@qualitagroup.com;bruno.lage@grupoqualita.com.br;arlindo.pelissari@grupoqualita.com.br\",'Pedido BOOKING SOLICITADO ! Código:' + SC5->C5_NUM ,'PEDIDO BOOKING SOLICITADO!'+ \"<br>\" +'CÓDIGO:' + SC5->C5_NUM + \"<br>\" ,'D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF')\n\t\t//TCSPExec(\"SP_SENDMAIL\",'ITINGA',\"bruno.lage@grupoqualita.com.br\",'Pedido BOOKING SOLICITADO ! Código:' + SC5->C5_NUM ,'PEDIDO BOOKING SOLICITADO!'+ \"<br>\" +'CÓDIGO:' + SC5->C5_NUM + \"<br>\" ,'D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003a.PDF')\n\n\t\t//sleep(500)\n\n\t\t/*\n\t\tWHATSAPP\n\t\t*/\n\t\t/*\n\t\tU_SWENARWAP(\"5527981188913\", \"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM),\"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM)   ,\"RQ0003a\"           ,\"PDF\",\"\\RELINWEB\\RQ0003a.PDF\")\n\t\tsleep(500)\n\t\tU_SWENARWAP(\"5533984022125\", \"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM),\"PEDIDO BOOKING SOLICITADO:\" +AllTrim(SC5->C5_NUM)   ,\"RQ0003a\"           ,\"PDF\",\"\\RELINWEB\\RQ0003a.PDF\")\n\t\t*/\n\tEnd\n\n\t/*\n\tIntegração liberação Pedido de venda Com o Mobgran por tabela\n\tTABELA - ZSC\n\t*/\n\tIf Empty(M->C5_XMOTBLQ) \n\t\t//M->C5_XMOTBLQ := \"06 = Aguardando liberação do vendedor!\" + chr(13)+chr(10) + \"***************************************\" + chr(13)+chr(10)\n\t\tM->C5_BLQ     := \"\"\n\t\tfTPBLQ        := .T.\n\tEndIf\n\n\tif (Empty(M->C5_NOTA) .OR. M->C5_NOTA == 'XXXXXXXXX' )\n\t\tIF (!Empty(M->C5_XIDMOB) .Or. M->C5_XIDMOB <> '-') \n\t\t\tu_MIntMGLib(M->C5_NUM , M->C5_XIDMOB , \"SC5\" , M->C5_XMOTBLQ , M->C5_FILIAL , M->C5_XTOTAL , fTPBLQ )\n\t\tEndIf\n\tEndIf\n\n\tConOut(\"******************************************\" )\n\tConOut(\"Final P.E = MT410TOK Qualitá\" )\n\tConOut(\"******************************************\" )\n\t\n\tSetKey(VK_F5,)\n\tSetKey(VK_F6,)\nEndIf\n\nIF (lRet == .F. .and. IsBlind()) \n\tlRet := .T.\nEndIf \n\nReturn(lRet)\n\n\nUser Function MIntMGLib(cPedido,XIdMobP,_cTabela, xMotBlq, cMobFilial , nXtotal , fTPBLQ)\n********************************************************************************************************************\n* /* User Integração com MobGran Liberação de pedidos por tabela ZSA ZSC */\n* /**/\n* //\n***\n\nLocal oJson     := JsonObject():New()\nLocal cCliente  := \"\"\nLocal cLoja     := \"\"\nLocal nValor    := 0\nLocal cCondPg   := \"\"\nLocal lSemFin   := .F.\n\n\t\tcQuery := \" SELECT  CAST(ZSC_RJSON AS VARCHAR(8000)) RJSON from \"+ RetSqlName(\"ZSC\")+ \" WHERE ZSC_IDMOBP = '\"+XIdMobP+\"' AND ZSC_TIPO <> 'B' AND ZSC_TIPO = '2' AND ZSC_RJSON IS NOT NULL\"\n\t\n\t\ttcQuery cQuery alias TRB_JSON new\n\t\tdbSelectArea(\"TRB_JSON\")\n\t\tdbgotop()\n\n\t\toJSon:fromJson(TRB_JSON->RJSON)\n\t\n\t\tcCliente  := iif(empty(oJson:GetJSonObject('cliente')),\"\",oJson:GetJSonObject('cliente'))\n\t\tcLoja     := iif(empty(oJson:GetJSonObject('loja'))   ,\"\",oJson:GetJSonObject('loja'))\n\n\t\tif !Empty(oJson:GetJSonObject('cliente'))\n\t\t\tnValor    := round(val(oJson:GetJSonObject('valorTotal')),2) \n\t\tElse\n\t\t\tnValor    := 0\n\t\tEndIf\n\n\t\tcCondPg   := iif(empty(oJson:GetJSonObject('condicaoPagamento')),\"\",oJson:GetJSonObject('condicaoPagamento'))\n\n\t\tdbSelectArea(\"TRB_JSON\") \n\t\tdbCloseArea()\t\n\t\tIf !Empty(oJson:GetJSonObject('cliente'))\n\t\t\tIf \tcCliente+cLoja       == m->C5_CLIENTE+m->C5_LOJACLI .And.;\n\t\t\t\tAllTrim(Str(nValor)) >= AllTrim(Str(nXTotal))    \t.And.;\n\t\t\t\tcCondPg              == m->C5_CONDPAG\n\n\t\t\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSC\")\n\t\t\t\tcQuery += \"    SET ZSC_TIPO = 'B'\n\t\t\t\tcQuery += \"  WHERE ZSC_IDMOBP  ='\"+ AllTrim(XIdMobP) +\"'\n\t\t\t\tcQuery += \"    AND ZSC_TIPO < '2'\n\t\t\t\t\n\t\t\t\tlSemFin:= .F.\n\t\t\tElse\n\t\t\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSC\")\n\t\t\t\tcQuery += \"    SET ZSC_TIPO = 'B'\n\t\t\t\tcQuery += \"  WHERE ZSC_IDMOBP  ='\"+ AllTrim(XIdMobP) +\"'\n\n\t\t\t\tlSemFin:= .T.\n\t\t\tEndIf \n\t\tElse\n\t\t\t\tcQuery := \" UPDATE \"+RetSqlName(\"ZSC\")\n\t\t\t\tcQuery += \"    SET ZSC_TIPO = 'B'\n\t\t\t\tcQuery += \"  WHERE ZSC_IDMOBP  ='\"+ AllTrim(XIdMobP) +\"'\n\n\t\t\t\tlSemFin:= .T.\t\n\t\tEndIf\t\n\t\t/*\n\t\tExecucao background do codigo sql\n\t\t*/\n\t\tTcSqlExec(cQuery)\n\n\t\t//regras\n\t\tIf fTPBLQ == .F.\n\t\t\tIf  RecLock(\"ZSC\",.T.)\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\n\t\t\t\t\tReplace ZSC_TIPO   With \"1\"\n\t\t\t\t\tReplace ZSC_MSGRET With IIF(fTPBLQ == .F. ,xMotBlq,\"\" )\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\n\t\t\t\t\tReplace ZSC_SITUAC With IIF(fTPBLQ == .F. ,\"\"    ,\"X\" )\n\t\t\t\t\tReplace ZSC_FLUXOM With IIF(fTPBLQ == .F. ,\"S\"    ,\"\" )\n\t\t\t\tMsUnLock()\n\t\t\tEndIf \n\t\tEndIf\n\t\t//financeiro\n\t\tIf lSemFin \n\t\t\tIf  RecLock(\"ZSC\",.T.)\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\n\t\t\t\t\tReplace ZSC_TIPO   With \"2\"\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\n\t\t\t\tMsUnLock()\n\t\t\tEndIf \n\t\t\t/*\n\t\t\tIf  RecLock(\"ZSC\",.T.)\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\n\t\t\t\t\tReplace ZSC_TIPO   With \"3\"\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\n\t\t\t\tMsUnLock()\n\t\t\tEndIf \n\n\t\t\tIf  RecLock(\"ZSC\",.T.)\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\n\t\t\t\t\tReplace ZSC_TIPO   With \"4\"\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\n\t\t\t\tMsUnLock()\n\t\t\tEndIf \n\n\t\t\tIf  RecLock(\"ZSC\",.T.)\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\n\t\t\t\t\tReplace ZSC_TIPO   With \"5\"\n\t\t\t\t\tReplace ZSC_MSGRET With \"\"\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\n\t\t\t\tMsUnLock()\n\t\t\tEndIf \n\t\t\t*/\n\t\t\t/*\n\t\t\tPendencia Vendedor\n\t\t\t*/ \n\t\t\tIf  RecLock(\"ZSC\",.T.)\n\t\t\t\t\tReplace ZSC_FILIAL With xFilial(_cTabela)\n\t\t\t\t\tReplace ZSC_CODIGO With AllTrim(cPedido)\n\t\t\t\t\tReplace ZSC_TIPO   With \"6\"\n\t\t\t\t\tReplace ZSC_MSGRET With IIF(fTPBLQ == .t. ,xMotBlq,\"\")\n\t\t\t\t\tReplace ZSC_IDMOBP With AllTrim(XIdMobP)\n\t\t\t\t\tReplace ZSC_SITUAC With \"\"\n\t\t\t\t\tReplace ZSC_FLUXOM With IIF(fTPBLQ == .t. ,\"S\"    ,\"\")\n\t\t\t\tMsUnLock()\n\t\t\tEndIf \n\t\tEndIf\n\nReturn()\n\n\nUser Function ClintToMob(cTipo)\n****************************************************************************************************************\n* /*Gatilho C5_XIDMOB*/    \n*\n****\nLocal aArea     := GetArea() \nLocal cQuery    := \" SELECT * FROM ZSA010 WHERE D_E_L_E_T_ = '' AND ZSA_IDMOBP = '\"+AllTrim(M->C5_XIDMOB)+\" ' AND ZSA_STATUS ='ATIVA'\nLocal cDadosRet := \"\" \n\ntcQuery cQuery alias TRBidMob new\ndbSelectArea(\"TRBidMob\")\ndbgotop()\n\nConOut(\"****PRINCIPAL**ClintToMob*************\")\n\nIf !EOF()\n\tIf cTipo == \"PG\"\n\t\tcDadosRet  := AllTrim(TRBidMob->ZSA_CPAG)\n\tElse\n\t\tcDadosRet  := AllTrim(TRBidMob->ZSA_CLIENT)\n\tEndIf\nElse\n\tcDadosRet := M->C5_CONDPAG\nEndIf\n\ndbSelectArea(\"TRBidMob\") \ndbCloseArea()\t\n\nRestArea(aArea)\n\nReturn(cDadosRet)\n\n                                                                       \nStatic Function FCalImp(oProcess) \n****************************************************************************************************************\n*    \n*\n****\n************************************** \n* Calculo totais e Impostos\n************************************** \nLocal aArea     := GetArea() \nLocal nX        := 0 \n//Local nPrcTot   := 0\nLocal _aTotalNF := {} \nLocal nValDesc  := 0\nLocal nItem:= 0                             \n\n//IF FunName() == Alltrim(\"GROA014\")\n\n\tConOut(\"************************************\")\n\tConOut(\"MaFisIni\")                 \n\tConOut(\"************************************\")\n\t\n\t// Inicia rotina de calculo dos impostos \n\tMaFisIni(Iif(Empty(M->C5_CLIENT),M->C5_CLIENTE,M->C5_CLIENT),;\t// 1-Codigo Cliente/Fornecedor \n\t     \tM->C5_LOJAENT,;          \t\t\t\t\t\t\t\t// 2-Loja do Cliente/Fornecedor \n\t     \tIIf(M->C5_TIPO$\"DB\",\"F\",\"C\"),;                    \t\t// 3-C:Cliente , F:Fornecedor \n\t     \tM->C5_TIPO,;                    \t\t\t\t\t\t// 4-Tipo da NF \n\t     \tM->C5_TIPOCLI,;          \t\t\t\t\t\t\t\t// 5-Tipo do Cliente/Fornecedor \n\t     \tNil,; \n\t     \tNil,; \n\t     \tNil,; \n\t     \tNil,; \n\t     \t\"GROA014\") \n\t\n     If (Inclui .Or. Altera) \n               nItem:= 0\n\t   \n\t\t\t   ConOut(\"************************************\")\n\t\t\t   ConOut(\"MaFisAdd\")                                  \n\t\t\t   ConOut(\"************************************\") \n\t\t\t   \n\t\t\t   If !IsBlind()\n\t\t\t\t\toProcess:SetRegua2(len(aCols))\n\t\t\t   ENDIF\n\t\t\t   \n               For nX := 1 to len(aCols) \n                    If !GDDeleted(nX)\t\t\t\t\t\t\t//Validar se o registro nao esta deletado \n                         \n                         nItem:= nItem + 1 \t\t\t\t\t\t// Quantidade para recalcular \n                         \n                         // Adiciona dados dos produtos na rotina de calculo de impostos       \n                         MaFisAdd( GdFieldGet(\"C6_PRODUTO\",nX),; \n                                   GdFieldGet(\"C6_TES\"    ,nX),; \n                                   GdFieldGet(\"C6_QTDVEN\" ,nX),; \n                                   GdFieldGet(\"C6_PRCVEN\" ,nX),; \n                                   0,; //GdFieldGet(\"C6_VALDESC\",nX)\n                                   \"\",; \n                                   \"\",; \n                                   0,; \n                                   0,; \n                                   0,; \n                                   0,; \n                                   0,; \n                                   GdFieldGet(\"C6_VALOR\",nX),; \n                                   0,; \n                                   0,; \n                                   0)\n                               \n                         nValDesc := nValDesc + Round(GdFieldGet(\"C6_VALDESC\",nX),2)\n\t\t\t\t\t\t \n\t\t\t\t\t\t If !IsBlind()  \n                         \toProcess:IncRegua2(\"Cavalete [\"+GdFieldGet(\"C6_YCAVALE\",nX)+\"] Lote-Chapa: \"+AllTrim(GdFieldGet(\"C6_LOTECTL\",nX))+\"-\"+GdFieldGet(\"C6_NUMLOTE\",nX)  )\n                         ENDIF\n\n                         //ConOut(nValDesc)\n                         //ConOut(nItem)\n                    EndIf \n                \n               Next nX                \n     EndIf \n     \n     /*\n     _nIcmsRet := 0 \n     For nLo:=1 To nItem           \n          _nIcmsRet += MaFisRet(nLo,\"LF_ICMSRET\") // Retorna valor da ST  \n     Next nLo       \n     */\n\t   \n\t aAdd(_aTotalNF,MaFisRet(,\"NF_TOTAL\"))\n\t aAdd(_aTotalNF,nValDesc)\n\t aAdd(_aTotalNF,MaFisRet(,\"NF_BASEDUP\"))\n \t aAdd(_aTotalNF,M->C5_DESPESA)\n\t //aAdd(_aTotalNF,MaFisRet(,\"NF_SEGURO\"))  \n\t\n\t MaFisEnd() \t// Encerra rotina de calculo de impostos \n\n//EndIf\n\nRestArea(aArea) \n\nReturn(_aTotalNF)\n\n\nUser Function GMA410MNU() \n****************************************************************************************************************\n*    \n*\n****\nLocal aButtons := {}\n\nIF FunName() == Alltrim(\"GROA014\")\t\n\t//Gerando invoice\n\taRotina[16][1] := \"Gerar Invoice\"\n\taRotina[16][2] := 'Processa({|| u_MNumInv()},,\"Gravando....\")'\n\t\n\t//\"Imprime Packing List\"\n\t//aRotina[20][2] := \"u_RelInWeb('RQ0002','Imprime Packing List [RQ0002]','u_fParAut(2)')\"\n\taRotina[17][2][5][2] := \"u_RelInWeb('RQ0002','Imprime Packing List [RQ0002]','u_fParAut(2)')\"\n\t\n\t//\"Imprime Commercial Invoice\" \n\t//aRotina[19][2] := \"u_RelInWeb('RQ0004','Imprime Invoice (CH/AM)[RQ0004]','u_fParAut(4)')\"\n\taRotina[17][2][4][2] := \"u_RelInWeb('RQ0004','Imprime Invoice (CH/AM)[RQ0004]','u_fParAut(4)')\"\n\t\n\t//\"Imprime Proforma Invoice\"\n\t//aRotina[18][2] := \"u_RelInWeb('RQ0003','Imprime Proforma Invoice [RQ0003]','u_fParAut(2)')\"\t \n\taRotina[17][2][3][2] := \"u_RelInWeb('RQ0003','Imprime Proforma Invoice [RQ0003]','u_fParAut(2)')\"\n\t\n\t//aRotina[17][2] := \"U_proformaInvoice()\"//#Brittes Alterada chamada da Funcao\n\t//\"Imprime Pedido de Venda\"\n\taRotina[17][2][1][1] := \"Pre-Nota\" \n\taRotina[17][2][1][2] := \"u_MATR730Q()\"\n\t\n\t//\"Imprime Romaneio\"\n\taRotina[17][2][2][1] := \"Imprime Invoice (BLOCOS)\"\n\taRotina[17][2][2][2] := \"u_RelInWeb('RQ0004_BLOCK','Imprime Invoice (BLOCOS) [RQ0004_BLOCK]'    ,'u_fParAut(4)')\"\n\t//aadd(aRotina,{'Imprime Invoice (BLOCOS)',\"u_RelInWeb('RQ0004_BLOCK','Imprime Invoice (BLOCOS) [RQ0004_BLOCK]'    ,'u_fParAut(4)')\" , 0 , 3,0,NIL})\n\t\nElseIf FunName() == Alltrim(\"GROA013\")\n\n\taadd(aRotina,{'Imp. Packing List',\"u_RelInWeb('RQ0002_P','Imprime Packing List [RQ0002_P]'    ,'u_fParAut(2)')\" , 0 , 3,0,NIL})\n\taadd(aRotina,{'Imp. Proforma'    ,\"u_RelInWeb('RQ0003_P','Imprime Proforma Invoice [RQ0003_P]','u_fParAut(2)')\" , 0 , 3,0,NIL})\t\n\taadd(aRotina,{'Pre-Nota'    \t ,\"u_MATR730Q()\" \t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t, 0 , 3,0,NIL})\t\n\t\nEndIf\n\naadd(aRotina,{'Ajustes Gerais {P.Venda}',\"u_AjuGerais()\" , 0 , 3,0,NIL})\n\naadd(aRotina,{'Aprovação WhatsApp ',\"u_WAppAprov()\" , 0 , 3,0,NIL})\n\naadd(aRotina,{'Limpar FollowUp' ,\"u_ClearFol()\"  , 0 , 3,0,NIL})\t\n\nReturn aButtons\n\nUser Function ClearFol()\n****************************************************************************************************************\n*    // LIMPA FOLLOWUP PELO PERIODO SOMENTE OVADOS\n*\n****\nLocal cQuery:=\"\"\n\nPrivate aPerg := {}\nPrivate cPerg := \"MLIMPAFOLL\"\n\nAadd(aPerg,{cPerg,\"Data Incial  ?\"\t\t,\"D\",08,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\nAadd(aPerg,{cPerg,\"Data Final   ?\"\t\t,\"D\",08,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\n\nU_Testasx1(cPerg,aPerg,.T.)\n\nIf ! Pergunte(cPerg,.T.)\n\tReturn()\nEndIf\n\nIf Empty(mv_par01)\n\tAlert(\"Data inicial não pode ficar em branco!\")\n\tReturn()\nEndIf\n\nIf Empty(mv_par02)\n\tAlert(\"Data final não pode ficar em branco!\")\n\tReturn()\nEndIf\n\ncQuery :=  \"  UPDATE SC5010\ncQuery +=  \"    SET C5_XSHOWFO =\t'N'\ncQuery +=  \"  WHERE R_E_C_N_O_ IN(\ncQuery +=  \"  \t\t\t\t\t\tSELECT REC FROM (\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\tSELECT\t  R_E_C_N_O_ REC,\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  C5_FILIAL,\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  C5_NUM ,\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  C5_NOTA+'/'+C5_SERIE AS NF,\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t\t\t  (SELECT F2_EMISSAO FROM SF2010 WHERE D_E_L_E_T_ = '' AND F2_FILIAL = C5_FILIAL AND F2_DOC = C5_NOTA AND F2_SERIE = C5_SERIE AND F2_CLIENTE = C5_CLIENTE AND F2_LOJA = C5_LOJACLI) DATA\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t  FROM SC5010 \ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t WHERE D_E_L_E_T_ = ''\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND C5_XSHOWFO IN('S')\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND C5_TIPO IN ('N')\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND C5_XVLRFIN <> 0\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t\t   AND RTRIM(LTRIM(C5_XFOLLST)) IN ('OVADO','CARREGADO','FATURADO')\ncQuery +=  \"  \t\t\t\t\t\t\t\t\t)TB_TEMP\ncQuery +=  \"  \t\t\t\t\t\t WHERE DATA BETWEEN '\"+dToS(mv_par01)+\"' AND '\"+dToS(mv_par02)+\"'\ncQuery +=  \"  \t\t\t\t\t\t)\n\nTcSQLExec(cQuery)\n\nAlert(\"FollowUp removidos com sucesso!\")\n\nReturn()\n\nUser Function WAppAprov()\n****************************************************************************************************************\n*    \n*\n****\nLocal cProt   := \"\"\n//Local cProt2  := \"\"\nLocal cMotiv  := \"\"\nLocal cQuery  := \"SELECT DISTINCT UPPER(RTRIM(LTRIM(C6_XMOTBLQ))) C6_XMOTBLQ FROM SC6010 WHERE D_E_L_E_T_ ='' AND C6_FILIAL+C6_NUM = '\" + SC5->C5_FILIAL + SC5->C5_NUM + \"' AND UPPER(RTRIM(LTRIM(C6_XMOTBLQ))) <> ''\n\n\ntcQuery cQuery alias TRBE new\ndbSelectArea(\"TRBE\")\ndbgotop()\n\nDo While !EOF()\n\t\n\tcMotiv := cMotiv + TRBE->C6_XMOTBLQ + chr(13)+chr(10)\n\n\tdbSelectArea(\"TRBE\") \n\tdbSkip()\nEndDo\n\ndbSelectArea(\"TRBE\") \ndbCloseArea()\n\nIF FunName() == Alltrim(\"GROA014\")\n\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\nElseIf FunName() == Alltrim(\"GROA013\")\n\tWaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0003_P&FILIAL='+AllTrim(SC5->C5_FILIAL)+'&NUMPED='+AllTrim(SC5->C5_NUM)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0003.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\nEndIf\n\nsleep(4000)\n\n/*\nLimite de Credito\n*/\n//WaitRunSrv( '\"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\wget.exe\" -t 1 \"http://192.168.1.101:10530/ReportServer/Pages/ReportViewer.aspx?%2fItinga_reports%2fRQ0057&CLIENTES='+AllTrim(SC5->C5_CLIENTE)+AllTrim(SC5->C5_LOJACLI)+'&rs:Format=pdf\" -O \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\RQ0057.PDF\"' , .t. , \"D:\\TOTVS 12\\Microsiga\\protheus_data\\RELINWEB\\wget\\\" )\n\n//Grupo de Faturamento Whatsapp\n\n/*\nTeste\n*/\n//cProt  := U_SWENARWAP(\"5551997331669\",\"Aprovação da Proforma:\" +AllTrim(SC5->C5_NUM) + chr(13)+chr(10) + \" Motivo:\" + cMotiv + chr(13)+chr(10) + \" Usuário:\" + SUBSTR(CUSUARIO,7,15), \"PROFORMA\"+AllTrim(SC5->C5_NUM),\"RQ0003\",\"PDF\",\"\\RELINWEB\\RQ0003.pdf\")\n\n/*\nOficial\n*/\ncProt  := U_SWENARWAP(\"5527995295180-1587589430@g.us\",\"Aprovação da Proforma:\" +AllTrim(SC5->C5_NUM) + chr(13)+chr(10) + \" Motivo:\" + cMotiv + chr(13)+chr(10) + \" Usuário:\" + SUBSTR(CUSUARIO,7,15), \"PROFORMA\"+AllTrim(SC5->C5_NUM),\"RQ0003\",\"PDF\",\"\\RELINWEB\\RQ0003.pdf\")\n\nIF cProt = \"\" .or. cProt = nil \n\tAlert(\"ERRO!!! O WhatsApp pode estar passando por alguma instabilidade no momento. Aguarde alguns instantes de tente novamente mais tarde!\")\n\tReturn()\nEndIf\n\nIf  RecLock(\"WAM\",.T.) \n\n\tReplace WAM_FILIAL  With \"\" \n\tReplace WAM_DATA    With Date()\n\tReplace WAM_HORA    With Time()\n\tReplace WAM_ID      With cProt\n\tReplace WAM_MSG     With \"Aprovação da Proforma:\" +AllTrim(SC5->C5_NUM) + \"Motivo:\" + cMotiv +  \"Usuário:\" + SUBSTR(CUSUARIO,7,15) + \" Cliente: \" + AllTrim(SC5->C5_XFRFORW) \n\t//Replace WAM_TELL    With \"5551997331669\"\n\t//Replace WAM_TELL    With \"5533984022125\"\n\tReplace WAM_INDEX   With SC5->C5_FILIAL + SC5->C5_NUM\n\tReplace WAM_PERG    With \"S\"\n\t//Replace WAM_DATAR   With \"\"\n\t//Replace WAM_HORAR   With \"\"\n\t//Replace WAM_RESPOSV With \"\"\n\t\n\tIF SubString(CNUMEMP,1,2) == \"05\"\n\t\tReplace WAM_EXEC    With 'ITINGA-PV'\n\tElse\n\t\tReplace WAM_EXEC    With 'QUALITA-PV'\n\tEndIf\n\t\n\n   MsUnLock()\nEndIf\n\t\t\nAlert(\"WhatsApp enviado com sucesso! \" + cProt)\n\nReturn()\n\n\nUser Function WAppResp()\n****************************************************************************************************************\n*NÃO USADO     \n*\n**** \nLocal cQuery  := \"SELECT TOP 1 * FROM WAM010 WHERE D_E_L_E_T_ = '' AND WAM_INDEX = '\"+SC5->C5_FILIAL + SC5->C5_NUM+\"' ORDER BY R_E_C_N_O_ DESC\"\n\t\t\t\t  \nLocal aRetMsg := \"\"\n\ntcQuery cQuery alias TRB new\ndbSelectArea(\"TRB\")\ndbgotop()\n\nIf !Empty(TRB->WAM_ID)\n\taRetMsg :=\tstrTokArr(U_SWREMGWAP(TRB->WAM_ID), ',' )\nEndIf\n\ndbSelectArea(\"TRB\") \ndbCloseArea()\n\nIf !\"false\" $ aRetMsg[7]\n\tIf (\"SIM\" $ Upper(aRetMsg[8])) .OR. ( \"APROVADO\" $ Upper(aRetMsg[8]) )\n\t\n\t \n\t\tRecLock(\"SC5\",.F.)\n\t\t\tSC5->C5_BLQ  := ''\n\t\tMsUnlock()\t\n\t\t/*\n\t\tdbSelectArea(\"SC6\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(SC5->C5_FILIAL + SC5->C5_NUM)\n\t\tWhile SC6->(!EOF()) .And. SC6->C6_FILIAL + SC6->C6_NUM == SC5->C5_FILIAL + SC5->C5_NUM\n\t\t                                      \n\t\t      MaLibDoFat(SC6->(RecNo()),SC6->C6_QTDVEN,,,.T.,.T.,.F.,.F.)\n\t\t\n\t\t   SC6->(dBSkip())\n\t\tEndDo\n\t\t*/\n\tEndIf\nElse \n\tAlert(\"Pedido ainda não liberado!\")\nEndIf\n\nReturn() \n\nUser Function AjuGerais()\n****************************************************************************************************************\n*    \n*\n****\nPrivate aPerg := {}\nPrivate cPerg := \"AJUSGERAIS\"\nPrivate nOpc  := 0\n\nnOpc := Aviso(\"Atenção\",\"Estes ajustes devem ser usados somente em casos especiais! Pedido: [\"+SC5->C5_NUM+\"] .\" ,{\"Confirma\",\"Abandona\"})\t\n\nIf nOpc == 2\n\tReturn()\nEndIf\n                  \nAadd(aPerg,{cPerg,\"Alterar o peso líquido:\",\"N\",12,04,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\nAadd(aPerg,{cPerg,\"Alterar o peso bruto :\" ,\"N\",12,04,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\n\nAadd(aPerg,{cPerg,\"Alterar qtd volume 1:\"  ,\"N\",03,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})     \nAadd(aPerg,{cPerg,\"Alterar qtd Box:\"       ,\"N\",03,00,\"G\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"})\n\nU_Testasx1(cPerg,aPerg,.t.) \n\nIf ! Pergunte(cPerg,.T.)\n\tReturn()\nEndIf\n\nRecLock(\"SC5\",.F.)\n\tSC5->C5_PESOL    := mv_par01\n\tSC5->C5_PBRUTO   := mv_par02\n\tSC5->C5_VOLUME1  := mv_par03\n\tSC5->C5_VOLUME2  := mv_par04\nMsUnlock()\t\n\nAviso(\"Atualização:\",\"Pedido: [\"+SC5->C5_NUM+\"] atualizado com sucesso!\" ,{\"Ok\"})\n\nReturn()\n\n\nUser Function MNumInv()\n****************************************************************************************************************\n*    \n*\n****\nLocal cNumInvo := GetMv(\"MV_XNUMINV\")\nLocal cQuery   := \"\"\n\nIF EMPTY(SC5->C5_YINVOIC)\n\t\n\tProcRegua(3) \n\t\n\tPutMv(\"MV_XNUMINV\",Soma1(cNumInvo))\n\t\n\tIncProc(\"Criando Invoice:\" + cNumInvo) \n\tSleep( 1000 ) \n\t\n\tIncProc(\"Salvando...\" + cNumInvo)\n\tSleep( 1000 ) \n\t\n\tIncProc(\"Liberando....\" + cNumInvo)\n\tSC5->(reclock(\"SC5\", .F.))\n\tSC5->C5_YINVOIC := cNumInvo\t\t\t\t\t\t\t\t\t\n\tSC5->(msUnLock())\n\tSleep( 1000 )\n\t\n\tAVISO(\"Invoice\", \"Invoice gerada com sucesso! Número=\" + cNumInvo  , { \"Fechar\" }, 1)\n\t\n\t//U_GROA014A()\n\t//AxInclui(\"SZO\")\n\t\n\tdbSelectArea(\"ZGO\")\n\tdbSetOrder(1)\n\tIf dbSeek(xFilial(\"ZGO\") + SC5->C5_NUM + SC5->C5_CLIENTE + SC5->C5_LOJACLI)\n\t\tZGO->(reclock(\"ZGO\", .F.))\n\t\tZGO->ZGO_INVOIC := cNumInvo\t\t\t\t\t\t\t\t\t\n\t\tZGO->(msUnLock())\n\t\t//U_GROA014A()\n\tElse\n\t\tZGO->(reclock(\"ZGO\", .T.))\n\t\tZGO->ZGO_FILIAL := xFilial(\"ZGO\")\n\t\tZGO->ZGO_INVOIC := cNumInvo\t\n\t\tZGO->ZGO_PEDIDO := SC5->C5_NUM\n\t\tZGO->ZGO_CLIENT := SC5->C5_CLIENTE\n\t\tZGO->ZGO_LOJA\t:= SC5->C5_LOJACLI\t\t\t\t\t\t\n\t\tZGO->(msUnLock())\n\tEndIf\n\t\n\tcQuery := \"SELECT CAST(M2_DATA AS DATE) DATA, MAX(M2_MOEDA2) 'DOLAR' , MAX(M2_MOEDA3) 'EURO'\n\tcQuery += \"  FROM SM2010\n\tcQuery += \"  WHERE D_E_L_E_T_ = ''\n\tcQuery += \"    AND M2_DATA  = '\"+DToS(dDataBase)+\"'\n\tcQuery += \"   GROUP BY M2_DATA\n\t\n\tTcQuery cQuery Alias TMP_MOEDA New\n\tdbSelectArea(\"TMP_MOEDA\")\n\t\n\tSC5->(reclock(\"SC5\", .F.))\n\tSC5->C5_MENNOTA := AllTrim(SC5->C5_MENNOTA) + \" //INVOICE:\" + SC5->C5_YINVOIC + \"-\" + LEFT(DToS(dDataBase),4) +  \"  TAXA DO DOLAR R$:\" + AllTrim(STR(TMP_MOEDA->DOLAR)) + \" CNTR:\" + AllTrim(SC5->C5_XCONTAI) \n\tSC5->(msUnLock())\n\t\n\tdbSelectArea(\"TMP_MOEDA\")\n\tdbCloseArea()            \nElse \n\n\tAVISO(\"Invoice\", \"Já existe invoice para esse pedido! Número=\" + SC5->C5_YINVOIC  , { \"Fechar\" }, 1)\n\nEndIf\t\n\nReturn()\n\n\nUser Function fParAut(nTipo)\n****************************************************************************************************************\n*    \n*\n****\nLocal cRet := \"\"\n\nIf nTipo = 2\n\tcRet :=  \"&FILIAL=\" + AllTrim(SC5->C5_FILIAL) +\"&NUMPED=\" + AllTrim(SC5->C5_NUM) \nElse\n\tdbSelectArea(\"ZGO\")\n\tdbSetorder(1)\n\tIf dbSeek(xFilial(\"ZGO\")+AllTrim(SC5->C5_NUM))\n\t\tcRet := \"&FILIAL=\" + AllTrim(ZGO->ZGO_FILIAL) +\"&INVOICE=\" + AllTrim(ZGO->ZGO_INVOIC)\n\tElse\n\t\tAlert(\"Pedido de venda sem Invoice!\")\n\tEndIf\nEndIf\n\nReturn(cRet)\n\n\nUser Function GA410CONS() \n****************************************************************************************************************\n*    \n*\n****\nLocal aButtons := {}\n\nSetKey(VK_F5,{||u_MCONSUTDET()})\nSetKey(VK_F6,{||u_GERAMSGPAD()})\n\naAdd(aButtons, {\"\", {|| u_MCONSUTDET()}, \"[F5] Consulta GrPlus\", \"[F5] Consulta GrPlus\"})\naAdd(aButtons, {\"\", {|| u_GERAMSGPAD()}, \"[F6] Gera Msg Padrão\", \"[F6] Gera Msg Padrão\"})\n\nReturn aButtons\n\nUser Function GERAMSGPAD()\n****************************************************************************************************************\n*    \n*\n****\nLocal cQuery   := \"\"         \n//Local aPeso    := {}\n//Local nResult  := 0     \n//Local cBoleto  := \"\"\nLocal cMsgNota := \"\"    \n//Local cMsgNota2:= \"\"                         \nLocal cNotas   := \"\"\nLocal aGriCavDW:= {}\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\nLocal cInCavDw := \"\"\nLocal nX       := 0\n\n/*\nMensagem foi retirada de uso conforme chamado numero 1109\nControle de drawback em tempo Real.\n*/\nIF TYPE(\"aCols\") == \"A\"\n\tFor nX := 1 To Len(aCols)\n\t\tdbSelectArea(\"SB1\")\n\t\tdbSetOrder(1)\n\t\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec \n\t\t\tIf !GDDeleted(nX) .and. LEFT(GdFieldGet(\"C6_LOTECTL\",nX),2)=='DW'\n\t\t\t\tIf Empty(aScan(aGriCavDW,GdFieldGet(\"C6_LOTECTL\",nX)) )\n\t\t\t\t\taAdd(aGriCavDW , GdFieldGet(\"C6_LOTECTL\",nX)  )\n\t\t\t\tEndIf\n\t\t\tEndIf\n\t\tEndIf\n\tNext nX\n\tIf !Empty(aGriCavDW)\n\t\tFor nX := 1 To Len(aGriCavDW)\t\t\n\t\t\taGriCavDW[nX] := LEFT(AllTrim(aGriCavDW[nX]),8)\n\t\t\tcInCavDw := cInCavDw +  \"'\"+AllTrim(aGriCavDW[nX])+\"',\"\n\t\tNext nX\n\t\tcInCavDw := Left(cInCavDw,Len(cInCavDw)-1)\n\tEndIf\n\t\n\n\tIf !Empty(cInCavDw)\n\t\t\n\t\tcQuery := \" SELECT DISTINCT DOC ,\n\t\tcQuery += \" \t\t\t\tEMISSAO\n\t\tcQuery += \"   FROM(\n \t\tcQuery += \" \t SELECT\n \t\tcQuery += \" \t\t\tLOTE,\n\t\tcQuery += \" \t\t\tIIF(EMISSAO<>'',EMISSAO,ISNULL((SELECT TOP 1 D1_EMISSAO FROM SD1010 WHERE D_E_L_E_T_ = '' AND D1_LOTECTL = LEFT(LOTE, LEN(RTRIM(LTRIM(LOTE)))-1) AND LEFT(D1_COD,2) = 'BL'),'')) EMISSAO,\n \t\tcQuery += \" \t\t\tIIF(DOC<>'',DOC,ISNULL((SELECT TOP 1 D1_DOC FROM SD1010 WHERE D_E_L_E_T_ = '' AND D1_LOTECTL = LEFT(LOTE, LEN(RTRIM(LTRIM(LOTE)))-1) AND LEFT(D1_COD,2) = 'BL'),'')) DOC\n \t\tcQuery += \" \t   FROM (\n \t\tcQuery += \" \t\t\tSELECT\tLOTE,\n \t\tcQuery += \" \t\t\t\t\tIIF(FORNECE<>'000011','', DOC) DOC,\n \t\tcQuery += \" \t\t\t\t\tEMISSAO,\n\t\tcQuery += \" \t\t\t\t\tD1_SERIE,\n \t\tcQuery += \" \t\t\t\t\tFORNECE\n \t\tcQuery += \" \t\t\t\t\tFROM (\t\n \t\tcQuery += \" \t\t\t\t\t\t\tSELECT DISTINCT D1_LOTECTL LOTE, \t\t\t\t\n \t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_DOC DOC,\n\t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_EMISSAO EMISSAO, \n \t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_SERIE,\n \t\tcQuery += \" \t\t\t\t\t\t\t\t\t\t\tD1_FORNECE  FORNECE\n \t\tcQuery += \" \t\t\t\t\t\t\tFROM SD1010 \n \t\tcQuery += \" \t\t\t\t\t\t\tWHERE D_E_L_E_T_ = '' \n \t\tcQuery += \" \t\t\t\t\t\t\tAND D1_LOTECTL IN (\"+cInCavDw+\")\n \t\tcQuery += \" \t\t\t\t\t\t )TB_TEMP\n \t\tcQuery += \" \t\t  )TAB_TEMP\n \t\tcQuery += \" \t)TAB_TEMP_FIM\n \t\tcQuery += \" WHERE DOC <> ''\n\t\t\n\t\tTcQuery cQuery Alias TMP_NOTA New\n\t\tdbSelectArea(\"TMP_NOTA\")\n\t\t\n\t\tDo While !EOF()\n\t\t\n\t\t\tcNotas := cNotas + AllTrim(TMP_NOTA->DOC) + \"-\" + dtoc(STOd(TMP_NOTA->EMISSAO))+ \" ,\"  \n\t\t\n\t\t\tdbSelectArea(\"TMP_NOTA\")\n\t\t\tdbSkip()\n\t\tEndDo\n\t\t\n\t\tdbSelectArea(\"TMP_NOTA\")\n\t\tdbCloseArea()\n\t\n\t\t//cMsgNota += \"ESTA NOTA FISCAL CONTEM INSUMOS IMPORTADOS ADQUIRIDOS DE ITINGA MINERACAO LTDA. PELA NF:\"+cNOtas+\" AMPARADO PELO REGIME DRAWBACK INTEGRADO - MODALIDADE SUSPENSAO, TIPO INTERMEDIARIO ATO CONCESSÓRIO Nº 20190019344 DE 08/05/2019.///\"   \n\tEndIf\n\t\n\tcQuery := \"SELECT CAST(M2_DATA AS DATE) DATA, MAX(M2_MOEDA2) 'DOLAR' , MAX(M2_MOEDA3) 'EURO'\n\tcQuery += \"  FROM SM2010\n\tcQuery += \"  WHERE D_E_L_E_T_ = ''\n\tcQuery += \"    AND M2_DATA  = '\"+DToS(dDataBase)+\"'\n\tcQuery += \"  GROUP BY M2_DATA \n\t\n\tTcQuery cQuery Alias TMP_MOEDA New\n\tdbSelectArea(\"TMP_MOEDA\")\n\t\n\tcMsgNota += \"INVOICE:\" + AllTrim(M->C5_YINVOIC) + \"-\" + LEFT(DToS(dDataBase),4) +  \"  TAXA DO DOLAR R$:\" + AllTrim(STR(TMP_MOEDA->DOLAR)) + \" CNTR:\" + AllTrim(M->C5_XCONTAI) + \" LACRE:\" + AllTrim(M->C5_XSEAL)\n\t\t        \n\tdbSelectArea(\"TMP_MOEDA\")\n\tdbCloseArea()                       \n\t\n\tIf !Empty(m->C5_MENNOTA)\n\t\tIf MsgYesNo(\"O campo [C5_MENNOTA], já possui informção. Deseja subistituir a mensagem original?\" )\n\t\t\tm->C5_MENNOTA := memoline(AllTrim(cMsgNota),254,1,,.T.)\n\t\t\tm->C5_MSG2    := memoline(AllTrim(cMsgNota),254,2,,.T.)\n\t\tEndIf\t\t\n\tElse\n\t\tm->C5_MENNOTA := memoline(AllTrim(cMsgNota),254,1,,.T.)\n\t\tm->C5_MSG2    := memoline(AllTrim(cMsgNota),254,2,,.T.)\n\tEndIf\n\t\nElse\n\n\tSetKey(VK_F5,)\n\tSetKey(VK_F6,)\n\nEndIf\n\nReturn\n\nStatic Function MAltVlrAut(cNumItem,cNumChapa) \n****************************************************************************************************************\n*    \n*\n****\nLocal nEdit1\t := 0\nLocal oEdit1\n\nLocal nEdit2\t := 0\nLocal oEdit2\n\nLocal nEdit3\t := SA1->A1_INFDESC\nLocal oEdit3\n\n//Local nEdit4\t := 0\n//Local oEdit4\n\nLocal lNExec     := .F.\nLocal lNDele     := .F.\n\nLocal nX         := 0\n\n// Variaveis Private da Funcao\nPrivate _oDlgVlr\t\t\t\t// Dialog Principal\n\n// Variaveis que definem a Acao do Formulario                    \nDEFINE MSDIALOG _oDlgVlr TITLE \" ITEM \" + cNumItem   FROM u_MGETTELA(223),u_MGETTELA(173) TO u_MGETTELA(359),u_MGETTELA(520) PIXEL\n\n\t// Cria as Groups do Sistema\n\t@ u_MGETTELA(003),u_MGETTELA(005) TO u_MGETTELA(044),u_MGETTELA(168) LABEL \"\" PIXEL OF _oDlgVlr\n\n\t// Cria Componentes Padroes do Sistema\n\t@ u_MGETTELA(010),u_MGETTELA(008) Say \"Valor Negociado:\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t@ u_MGETTELA(010),u_MGETTELA(050) MsGet oEdit1 Var nEdit1            Size u_MGETTELA(35)  ,u_MGETTELA(009) picture(\"@E 9,999,999.99999\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t\n\t@ u_MGETTELA(010),u_MGETTELA(085) Say \"Desconto padrão: {%}\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t@ u_MGETTELA(010),u_MGETTELA(130) MsGet oEdit3 Var nEdit3            Size u_MGETTELA(35) ,u_MGETTELA(009) when(.f.) picture(\"@E 99.99\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t\n\t@ u_MGETTELA(028),u_MGETTELA(008) Say \"Novo desconto: {%}\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t@ u_MGETTELA(028),u_MGETTELA(050) MsGet oEdit2 Var nEdit2            Size u_MGETTELA(35) ,u_MGETTELA(009) picture(\"@E 99.99999\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t\n\t//@ u_MGETTELA(028),u_MGETTELA(085) Say \"Desconto: {Vlr}\" Size u_MGETTELA(066),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t//@ u_MGETTELA(028),u_MGETTELA(130) MsGet oEdit4 Var nEdit4            Size u_MGETTELA(35) ,u_MGETTELA(009) picture(\"@E 9999.99\") COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\t\n\t@ u_MGETTELA(047),u_MGETTELA(131) Button \"Ok\" \t\tSize u_MGETTELA(037),u_MGETTELA(012)  ACTION( lNExec := .T. , Close(_oDlgVlr))  PIXEL OF _oDlgVlr\n\t//@ u_MGETTELA(047),u_MGETTELA(085) Button \"Deletar\" \tSize u_MGETTELA(037),u_MGETTELA(012)  ACTION( lNDele := .T. , Close(_oDlgVlr))  PIXEL OF _oDlgVlr\n\t//@ u_MGETTELA(050),u_MGETTELA(007) Say \"O valor irá subistituir todas as chapas do cavalete! \"  Size u_MGETTELA(113),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlgVlr\n\nACTIVATE MSDIALOG _oDlgVlr CENTERED\n\n\nIf lNDele\n\tFor nX := 1 To Len(aCols)\n\t\tIf AllTrim(GdFieldGet(\"C6_YCAVALE\",nX)) == AllTrim(cNumCav)\t\t\t\n\t\t\t aCols[nX][Len(aHeader)+1] := .T.\n\t\tEndIf\n\tNext nX\nEndIf\n\nIf lNExec\n\t\n\tIf !Empty(nEdit1) .Or. !Empty(nEdit2)\n\t\tFor nX := 1 To Len(aCols)\n\t\t\n\t\t\tIf !Empty(nEdit1)\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_PRUNIT\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX) //C6_PRUNIT 23/09/2019\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\n\t\t\t\tEndIf\n\t\t\tElse\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\n\t\t\t\t\t\t//GdFieldPut(\"C6_PRUNIT\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX) //C6_PRUNIT 23/09/2019\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\n\t\t\t\tEndIf\n\t\t\tEndIf\n\t\tNext nX\n\tEndIf\n\t\n\t/*\n\tIf !Empty(nEdit1) .Or. !Empty(nEdit2) .Or. !Empty(nEdit4)\n\t\tFor nX := 1 To Len(aCols)\n\t\t\tIf Empty(nEdit4 )\n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_PRUNIT\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX) //C6_PRUNIT 23/09/2019\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\n\t\t\t\tEndIf\n\t\t\tElse \n\t\t\t\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t//nEdit4 := round(nEdit4 / cNumChapa,2)\n\t\t\t\t\t\t\n\t\t\t\t\t\tnEdit2 := (nEdit4*100)/GdFieldGet(\"C6_VALOR\",nX)  \n\t\t\t\t\n\t\t\t\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit2,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100,2),nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,IIF(nEdit2==0,nEdit1,GdFieldGet(\"C6_PRCVEN\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCVEN\",nX) ,nEdit1) * nEdit2) /100 )  ,nX)\n\t\t\t\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\n\t\t\t\tEndIf\n\t\t\tEndIf\n\t\tNext nX\n\tElse\n\t\tIf !Empty(nEdit3)\n\t\t\t\n\t\t\t//For nX := 1 To Len(aCols)\n\t\t\t//\tIf AllTrim(GdFieldGet(\"C6_YCAVALE\",nX)) == AllTrim(cNumCav)\t\t\t\n\t\t\t//\t\t\tGdFieldPut(\"C6_DESCONT\" ,nEdit3,nX)\n\t\t\t//\t\t\tGdFieldPut(\"C6_VALDESC\" ,Round(GdFieldGet(\"C6_QTDVEN\",nX) * (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCREF\",nX) ,nEdit1) * nEdit3) /100,2),nX)\n\t\t\t//\t\t\tGdFieldPut(\"C6_PRCVEN\"  ,GdFieldGet(\"C6_PRCREF\",nX) - (iif(Empty(nEdit1),GdFieldGet(\"C6_PRCREF\",nX) ,nEdit1) * nEdit2) /100   ,nX)\n\t\t\t//\t\t\tGdFieldPut(\"C6_VALOR\"   ,Round(GdFieldGet(\"C6_PRCVEN\",nX) * GdFieldGet(\"C6_QTDVEN\",nX),2),nX)\n\t\t\t//\tEndIf\n\t\t\t//Next nX\n\t\t\t\n\t\tEndIf\n\tEndIf\n\t*/\n\t \nEndIf\n\n\nReturn \n\n\nUser Function MCONSUTDET()\n****************************************************************************************************************\n*    \n*\n****\n// Variaveis Locais da Função\nLocal cEdit1\t := Space(100)\nLocal cEdit2\t := Space(100)\nLocal cEdit3\t := Space(100)\nLocal oEdit1\nLocal oEdit2\nLocal oEdit3\n\nLocal nX         := 0\n\n// Variaveis Private da Funcão\nPrivate _oDlg\t  // Dialog Principal\n\n// Variaveis que definem a Acao do Formulario\nPrivate VISUAL := .F.                        \nPrivate INCLUI := .F.                        \nPrivate ALTERA := .F.                        \nPrivate DELETA := .F.        \n\n// Privates das ListBoxes\nPrivate aListBox1 := {}\nPrivate oListBox1\nPrivate aFlist   := {}\n\n/*\nInicializando Variaveis \n*/\n\niF TYPE(\"aCols\") == \"A\"\n\n\tIF !(M-> C5_TIPO $ \"D,B\")   //Se for nota de devolucao\n\t\tcEdit1  := Posicione(\"SA1\",1,XFilial(\"SA1\")+M->C5_CLIENTE+M->C5_LOJACLI,\"A1_NOME\")                   // Retorna o nome do Cliente\n\tELSE\n\t\tcEdit1  := POSICIONE(\"SA2\",1,XFILIAL(\"SA2\")+M->C5_CLIENTE+M->C5_LOJACLI,\"A2_NOME\")\t\t\t\t\t // Retorna o nome do Fornecedor      \n\tENDIF\n\tcEdit2 := Posicione(\"SE4\",1,XFilial(\"SE4\")+M->C5_CONDPAG,\"E4_DESCRI\") \n\tcEdit3 := Posicione(\"SA3\",1,XFilial(\"SA3\")+M->C5_VEND1,\"A3_NOME\") \n\t\n\tDEFINE MSDIALOG _oDlg TITLE \"CONSULTA DETALHADA GRPLUS\" FROM u_MGETTELA(333),u_MGETTELA(275) TO u_MGETTELA(734),u_MGETTELA(795) PIXEL\n\t\n\t// Cria Componentes Padroes do Sistema\n\t@ u_MGETTELA(006),u_MGETTELA(005) Say \"NOME DO CLIENTE:\" Size u_MGETTELA(042),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlg\n\t@ u_MGETTELA(006),u_MGETTELA(052) MsGet oEdit1 Var cEdit1 when(.f.) Size u_MGETTELA(200),u_MGETTELA(009) COLOR CLR_BLACK PIXEL OF _oDlg\n\t@ u_MGETTELA(021),u_MGETTELA(006) Say \"COND. PAGAMENTO:\" Size u_MGETTELA(046),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlg\n\t@ u_MGETTELA(021),u_MGETTELA(052) MsGet oEdit2 Var cEdit2 when(.f.) Size u_MGETTELA(057),u_MGETTELA(009) COLOR CLR_BLACK PIXEL OF _oDlg\n\t@ u_MGETTELA(021),u_MGETTELA(114) Say \"NOME VENDEDOR:\" Size u_MGETTELA(055),u_MGETTELA(008) COLOR CLR_BLACK PIXEL OF _oDlg\n\t@ u_MGETTELA(021),u_MGETTELA(165) MsGet oEdit3 Var cEdit3 when(.f.) Size u_MGETTELA(087),u_MGETTELA(009) COLOR CLR_BLACK PIXEL OF _oDlg\n\t@ u_MGETTELA(180),u_MGETTELA(215) Button \"OK\"  Size u_MGETTELA(037),u_MGETTELA(012) ACTION(Close(_oDlg)) PIXEL OF _oDlg\n\t\n\t@ u_MGETTELA(035),u_MGETTELA(006) ListBox oListBox1 Fields ;\n\t\tHEADER \"ITEM\",\"CAVALETE\",\"P.LIQUIDO\",\"P.BRUTO\",\"QTD CHAPAS\",\"QTD RECORTE/AMOSTRAS\";\n\t\tSize u_MGETTELA(247),u_MGETTELA(140) Of _oDlg Pixel;\n\t\tColSizes 05,80,50,50,50,20\n\n\t\toListBox1:bLDblClick := {||  iif(fLibFunc(aFlist[oListBox1:nAT,01])==.t., MAltVlrAut(aFlist[oListBox1:nAT,01],aFlist[oListBox1:nAT,04]) , Alert(\"Produto oferta não pode ser alterado!\") )  }\n\n\t// Chamadas das ListBox do Sistema\n\tfListBox1()\n\t\n\tFor nX := 1 To Len(aFlist)\n\t\tIf AllTrim(aFlist[nX][1]) == AllTrim(GdFieldGet(\"C6_ITEM\",n))\n\t\t\t//oListBox1:Select(nX)\n\t\t\t//oListBox1:bLine := { || aFlist[ oListBox1:nX ] }\n\t\t\toListBox1:nAt := Nx\n\t\tEndIf\n\tNext Nx\n\t\n\tACTIVATE MSDIALOG _oDlg CENTERED \n\nElse\n\n\t//Alert(\"ok\")\n\tSetKey(VK_F5,)\n\tSetKey(VK_F6,)\nEndIf\n\nReturn(.T.)\n\nStatic Function fLibFunc(cNumItem)\n****************************************************************************************************************\n*    \n*\n****\nLocal nX   := 0\nLocal lRet := .T.\n\nFor nX := 1 To Len(aCols)\n\tIf AllTrim(GdFieldGet(\"C6_ITEM\",nX)) == AllTrim(cNumItem)\t\n\t\tIF GdFieldGet(\"C6_XOFERTA\",nX) == \"S\"\t\n\t\t\tlRet := .F.\n\t\tEndIf\n\tEndIf\nNext nX\n\nReturn(lRet)\n\nStatic Function fListBox1()\n****************************************************************************************************************\n*    \n*\n****\n//Local nPos   := 0\nLocal nTotBr   := 0\nLocal nTotLQ   := 0\nLocal nTotCh   := 0\n//Local nTotDF := 0\nLocal nTotAM   := 0\nLocal cGPExec  := GetMv(\"MV_XGPEXE\")\nLocal nx       := 0\n\noListBox1:SetArray(aFlist)\n\n/*\nPreenche o dados de peso bruto e peso liquido por cavaletes\n e quantidade de chapas\n*/\nFor nX := 1 To Len(aCols)\n\n\t//EXECUTAR SOMENTE PARA ESTES GRUPOS \n\t//\"0005/0006/0034/0035/0036\"\n\tdbSelectArea(\"SB1\")\n\tdbSetOrder(1)\n\tdbSeek(xFilial(\"SB1\")+ AllTrim(GdFieldGet(\"C6_PRODUTO\",nX)) )\n\t\n\tIF AllTrim(SB1->B1_GRUPO) $ cGPExec\n\t\tIf !GDDeleted(nX) \n\t\t\t/*\n\t\t\tIf !aScan(aFlist,{|x|alltrim(x[1]) == GdFieldGet(\"C6_YCAVALE\",nX)  })\t\t\n\t\t\t\tAadd(aFlist,{GdFieldGet(\"C6_YCAVALE\",nX) ,;\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOLQ\"))    ,;\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOBR\"))  ,;\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0, fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YQTDBD\") ),;\n\t\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_QTDVEN\",nX),0 )  })\n\t\t\tElse\n\t\t\t\tnPos := aScan(aFlist,{|x|alltrim(x[1])==GdFieldGet(\"C6_YCAVALE\",nX) })\n\t\t\t \taFlist[nPos][2] := aFlist[nPos][2] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOLQ\"))\n\t\t\t \taFlist[nPos][3] := aFlist[nPos][3] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX),fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOBR\"))\n\t\t\t \taFlist[nPos][4] := aFlist[nPos][4] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0, fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YQTDBD\") )\n\t\t\t \taFlist[nPos][5] := aFlist[nPos][5] + IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_QTDVEN\",nX), IIF(AllTrim(GdFieldGet(\"C6_YCLASSI\",nX))==\"A\" .AND. Empty(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))),1,0 )) //\n\t\t\tEndIf\n\t\t\t*/\n\t\t\t\n\t\t\tAadd(aFlist,{GdFieldGet(\"C6_ITEM\",nX) ,;\n\t\t\t\t\t\t GdFieldGet(\"C6_YCAVALE\",nX) ,; \n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),GdFieldGet(\"C6_PRODUTO\",nX),GdFieldGet(\"C6_LOCAL\",nX),\"B8_YPESOLQ\"))    ,;\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_XPESO\",nX) ,fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),GdFieldGet(\"C6_PRODUTO\",nX),GdFieldGet(\"C6_LOCAL\",nX),\"B8_YPESOBR\"))  ,;\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",0, fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),GdFieldGet(\"C6_PRODUTO\",nX),GdFieldGet(\"C6_LOCAL\",nX),\"B8_YQTDBD\") ),;\n\t\t\t\t\t\t IIF(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))==\"\",GdFieldGet(\"C6_QTDVEN\",nX),0 )  })\n\t\t\t\n\t\tEndIf\n\tElse \n\t\n\t//IIF(AllTrim(GdFieldGet(\"C6_YCLASSI\",nX))==\"A\" .AND. Empyt(AllTrim(GdFieldGet(\"C6_YCAVALE\",nX))),1,0)\n\t\n\tAadd(aFlist,{     \"-\",;\n\t\t\t\t\t  \"-\",;\n\t\t\t\t \t   0 ,;\n\t\t\t\t       0 ,;\n\t\t\t\t       0 ,;\n\t\t\t\t       0  })\n\t\n\tEndIf\nNext Nx\n\nIf Len(aFlist)>0\n\tFor nX := 1 To Len(aFlist)\n\t\tIf Alltrim(aFlist[nX][2]) = \"\"\n\t\t\taFlist[nX][2] := \"RECORTES\" \n\t\tEndIf\n\tNext Nx\n\t\n\tFor nX := 1 To Len(aFlist)\n\t\tnTotLQ := nTotLQ + aFlist[nX][3]\n\t\tnTotBr := nTotBr + aFlist[nX][4]\n\t\tnTotCh := nTotCh + aFlist[nX][5]\n\t\tnTotAM := nTotAM + aFlist[nX][6]\n\tNext Nx\n\t\n\tAadd(aFlist,{\"---------\",\"--------------------------------------------\",\"----------------------------------\",\"----------------------------------\",\"----------------------------------\",\"------------------------------------------\"})\n\tAadd(aFlist,{\"(=)\",\"  Total:\",nTotLQ,nTotBr,nTotCh,nTotAM})\n\tAadd(aFlist,{\"(=)\",\"  Weigth Limit: \"+ AllTrim(Str(M->C5_XWLIMIT)),M->C5_XWLIMIT - nTotLQ  ,M->C5_XWLIMIT - nTotBr,\"\",\"\"})\nEndIf\n\noListBox1:bLine := {|| {;\n\t\t\t\t\taFlist[oListBox1:nAT,01],;\n\t\t\t\t\taFlist[oListBox1:nAT,02],;\n\t\t\t\t\taFlist[oListBox1:nAT,03],;\n\t\t\t\t\taFlist[oListBox1:nAT,04],;\n\t\t\t\t\taFlist[oListBox1:nAT,05],;\n\t\t\t\t\taFlist[oListBox1:nAT,06]}}\n\t\nReturn        \n           \n\nStatic Function fPqLotSub(cLote,cSubLote,cCodProd,cCodLocal,cTipRet)\n****************************************************************************************************************\n*    //fPqCvlt(GdFieldGet(\"C6_YCAVALE\",nX)) -- quantiade de cavaletes amostras\n*    //\n****\nLocal nVlrRest := 0\n\ncQuery  := \" SELECT \"+ cTipRet +\" VLRET\"\ncQuery  += \"   FROM SB8010 \ncQuery  += \"  WHERE D_E_L_E_T_ = ''\ncQuery  += \"    AND B8_LOTECTL = '\"+ AllTrim(cLote)     +\"' \ncQuery  += \"    AND B8_NUMLOTE = '\"+ AllTrim(cSubLote)  +\"'\ncQuery  += \"    AND B8_PRODUTO = '\"+ AllTrim(cCodProd)  +\"'\ncQuery  += \"    AND B8_LOCAL   = '\"+ AllTrim(cCodLocal) +\"'\ncQuery  += \"    AND B8_SALDO <> 0\n\ntcQuery cQuery alias TRB new\ndbSelectArea(\"TRB\")\ndbgotop()\n\nnVlrRest := TRB->VLRET\n\ndbSelectArea(\"TRB\") \ndbCloseArea()\n\nReturn nVlrRest\n\n\nStatic Function fPqCvlt(cCavalete)\n****************************************************************************************************************\n*    //fPqLotSub(GdFieldGet(\"C6_LOTECTL\",nX),GdFieldGet(\"C6_NUMLOTE\",nX),\"B8_YPESOBR\")\n*    \n****\nLocal nVlrRest := 0\n\ncQuery  := \" SELECT COUNT(*) AS VLR_CONT\ncQuery  += \"    FROM SB8010 \ncQuery  += \"   WHERE D_E_L_E_T_ = ''\ncQuery  += \"     AND B8_YCAVALE = '\"+AllTrim(cCavalete)+\"'\ncQuery  += \"     AND B8_YCLASSI = 'A'\ncQuery  += \"     AND B8_SALDO <> 0\n\ntcQuery cQuery alias TRB new\ndbSelectArea(\"TRB\")\ndbgotop()\n\nnVlrRest := TRB->VLR_CONT\n\ndbSelectArea(\"TRB\") \ndbCloseArea()\n\nReturn nVlrRest\n\n\nUser Function MINFORFIN(dSetDate,cSetCodPG)\n****************************************************************************************************************\n*    //Informações Financeiras \n*    \n****\nPrivate _oInforFin\t\t\t\t// Dialog Principal\n                       \nPrivate oPG    := LoadBitmap(GetResources(), \"BR_VERMELHO\")\nPrivate oNPG   := LoadBitmap(GetResources(), \"BR_VERDE\")\nPrivate oNADA  := LoadBitmap(GetResources(), \"BR_CINZA\")\n\n// Privates das ListBoxes\nPrivate aListBoxFin := {}\nPrivate oListBoxFin\n\nDEFINE MSDIALOG _oInforFin TITLE \"Informações Financeiras\" FROM u_MGETTELA(178),u_MGETTELA(181) TO u_MGETTELA(403),u_MGETTELA(967) PIXEL\n\n\t// Cria Componentes Padroes do Sistema\n\t@ u_MGETTELA(093),u_MGETTELA(308) Button \"Cancelar\" Size u_MGETTELA(037),u_MGETTELA(012) ACTION(Close(_oInforFin)) PIXEL OF _oInforFin\n\t@ u_MGETTELA(093),u_MGETTELA(351) Button \"Salvar\" Size u_MGETTELA(037),u_MGETTELA(012)   ACTION(fSaveDtBl(),Close(_oInforFin)) PIXEL OF _oInforFin\n\n\t\t@ u_MGETTELA(003),u_MGETTELA(005) ListBox oListBoxFin Fields ;\n\t\tHEADER \"\",\"RECNO\",\"PREFIXO\",\"NUMERO\",\"TIPO\",\"PARCELA\",\"VALOR\",\"EMISSAO NF\",\"VENCIMENTO\",\"DATA BAIXA\",\"VENCIMENTO B/L\",\"VENCIMENTO B/L REAL\" ;\n\t\tSize u_MGETTELA(383),u_MGETTELA(088) Of _oInforFin Pixel;\n\t\tColSizes 08,20,40,40,40,40,40,40,40,40,50,40\n\t\t\n\t\t//oListBoxFin:bLDblClick := {||  MAltVlrAut(aFlist[oListBoxFin:nAT,01]) } alterar a função\n\t\t\n\n\t// Chamadas das ListBox do Sistema\n\tfListFin1(dSetDate,cSetCodPG)\n\nACTIVATE MSDIALOG _oInforFin CENTERED \n\nReturn(.T.)\n\n\nStatic Function fSaveDtBl()\n****************************************************************************************************************\n* //\n* //\n* \n****\nLocal lGravou  := .F.\nLocal cCodTitu := \"\"\nLocal nX       := 0\n\nFor nX:=1 to Len(aListBoxFin)\n\tIf !Empty(aListBoxFin[nX][12])\n\t\t\n\t\tdbSelectArea(\"SE1\")\n\t\tdbGoto(aListBoxFin[nX][2]) \n\t\tSE1->(reclock(\"SE1\", .F.))\n\t\t\tSE1->E1_VENCTO  := aListBoxFin[nX][11] \n\t\t\tSE1->E1_VENCREA := aListBoxFin[nX][12]\n\t\tSE1->(msUnLock())\n\t\t\n\t\tlGravou:=.T.\n\t\tcCodTitu := cCodTitu + aListBoxFin[nX][04]+\"-\"+aListBoxFin[nX][06]+ \" | \" + chr(13)+chr(10) \n\t\t\n\tEndIf\nNext nX\n\nIf lGravou\n\tAVISO(\"Títulos gravados com sucesso:\", cCodTitu , { \"Fechar\" }, 3)\nEndIF\n\nReturn()\n\nStatic Function fListFin1(dSetDate,cSetCodPG)\n****************************************************************************************************************\n* //\n* //\n* \n****\nLocal cQuery  := \"\"\n//Local aTPAVA  := {}\nLocal aRetAva := \"\"\n\ndbSelectArea(\"SF2\")\ndbSetOrder(2)\nIF dbSeek(xFilial(\"SF2\") + M->C5_CLIENTE + M->C5_LOJACLI + M->C5_NOTA + M->C5_SERIE + \"N\")\n\n\taTPadv := Condicao(M->C5_XVLRFIN,cSetCodPG,,SF2->F2_EMISSAO,) //FSepCond(M->C5_XVLRFIN,cSetCodPG,SF2->F2_EMISSAO)\n\n\tdbSelectArea(\"SE4\")\n\tdbSetOrder(1)\n\tIf dbSeek(xFilial(\"SE4\")+ cSetCodPG )\n\t\taRetAva := strtokarr (AllTrim(SE4->E4_TPAVA), \",\")\n\tEndIf\n\n\tIf Len(aRetAva) <> 0\n\t\tIf Len(aRetAva) <> Len(aTPadv)\n\t\t\tAlert(\"Verifique a condição de pagamento: (\" + AllTrim(cSetCodPG) + \"). O campo tp. avançado está diferente das quantidade de parcelas.\" )\n\t\tEndIf\n\tEndIf\n\n\tcQuery := \" \tSELECT\tR_E_C_N_O_ RECNO, \n\tcQuery += \" \t\t\tE1_FILIAL,\n\tcQuery += \" \t\t\tE1_PREFIXO,\n\tcQuery += \" \t\t\tE1_TIPO,\n\tcQuery += \" \t\t\tE1_NUM,\n\tcQuery += \" \t\t\tE1_PARCELA,\n\tcQuery += \" \t\t\tE1_EMISSAO,\n\tcQuery += \" \t\t\tE1_VENCREA,\n\tcQuery += \" \t\t\tE1_BAIXA,\n\tcQuery += \" \t\t\tE1_VALOR\n\tcQuery += \" \t  FROM SE1010 \n\tcQuery += \" \t WHERE E1_NUM     = '\"+M->C5_NOTA+\"'\n\tcQuery += \" \t   AND D_E_L_E_T_ = ''\n\t//cQuery += \" \t   AND E1_BAIXA   = ''\n\tcQuery += \" \t   AND E1_EMISSAO = '\"+dtoS(SF2->F2_EMISSAO)+\"'\n\tcQuery += \" \t   AND E1_TIPO IN ('NF')\n\tcQuery += \" \t   AND E1_CLIENTE = '\"+M->C5_CLIENTE+\"'\n\tcQuery += \" \t   AND E1_LOJA    = '\"+M->C5_LOJACLI+\"'\n\tcQuery += \" \t   AND E1_SERIE   = '\"+M->C5_SERIE+\"' \n\n\tTcQuery cQuery Alias TMP_FIM New\n\tdbSelectArea(\"TMP_FIM\")\n\t\n\tnPosAt := 0\n\tcTipoAvan := \"\"\n\t\n\tDo While !EOF()\n\t\n\t\tnPosAt := nPosAt + 1\n\t\tIf Len(aRetAva)<>0\n\t\t\tcTipoAvan := aRetAva[nPosAt] \n\t\t\t\n\t\t\tIf AllTrim(cTipoAvan) <> \"A\"\n\t\t\t\taTPadv := Condicao(M->C5_XVLRFIN,cSetCodPG,,dSetDate+1,)\n\t\t\tEndIf\n\t\tEndIf\n\t\t\n\t\tAadd(aListBoxFin,{\tiif(!Empty(aRetAva),IIF(EMPTY(TMP_FIM->E1_BAIXA),oNPG,oPG),oNADA),;\n\t\t\t\t\t\t\tTMP_FIM->RECNO,;\n\t\t\t\t\t\t\tTMP_FIM->E1_PREFIXO,;\n\t\t\t\t\t\t\tTMP_FIM->E1_NUM,;\n\t\t\t\t\t\t\tTMP_FIM->E1_TIPO,;\n\t\t\t\t\t\t\tTMP_FIM->E1_PARCELA,;\n\t\t\t\t\t\t\tTMP_FIM->E1_VALOR,;\n\t\t\t\t\t\t\tStoD(TMP_FIM->E1_EMISSAO),;\n\t\t\t\t\t\t\tStoD(TMP_FIM->E1_VENCREA),;\n\t\t\t\t\t\t\tStoD(TMP_FIM->E1_BAIXA),;\n\t\t\t\t\t\t\tiif(!Empty(aRetAva),IIf(Empty(TMP_FIM->E1_BAIXA), aTPadv[nPosAt][1]             ,sToD(\"\") ),sToD(\"\")),;\n\t\t\t\t\t\t\tiif(!Empty(aRetAva),IIf(Empty(TMP_FIM->E1_BAIXA), DataValida(aTPadv[nPosAt][1]) ,sToD(\"\") ),sToD(\"\"));\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\n\t\tdbSelectArea(\"TMP_FIM\")\n\t\tdbSkip()\n\tEndDo\n\t\n\tdbSelectArea(\"TMP_FIM\")\n\tdbCloseArea()\n\n\tif Empty(aListBoxFin)\n\t\n\t\tAadd(aListBoxFin,{\t\toNADA,;\n\t\t\t\t\t\t\t\t\"\",;\n\t\t\t\t\t\t\t\t\"\",;\n\t\t\t\t\t\t\t\t\"\",;\n\t\t\t\t\t\t\t\t\"\",;\n\t\t\t\t\t\t\t\t\"\",;\n\t\t\t\t\t\t\t\t\"\",;\n\t\t\t\t\t\t\t\tStoD(\"\"),;\n\t\t\t\t\t\t\t\tStoD(\"\"),;\n\t\t\t\t\t\t\t\tStoD(\"\"),;\n\t\t\t\t\t\t\t\tStoD(\"\"),;\n\t\t\t\t\t\t\t\tsToD(\"\");\n\t\t\t\t\t\t\t\t})\n\t\n\tEndIf \n\n\toListBoxFin:SetArray(aListBoxFin)\n\t\n\toListBoxFin:bLine := {|| {;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,01],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,02],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,03],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,04],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,05],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,06],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,07],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,08],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,09],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,10],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,11],;\n\t\t\t\t\taListBoxFin[oListBoxFin:nAT,12]}}\n\t\n\nEndIf\n\nReturn()\n"}]}}
