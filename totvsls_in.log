Content-Length: 3122
{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":10212,"clientInfo":{"name":"vscode","version":"1.70.0"},"rootPath":"d:\\TOTVS 12\\Microsiga\\Protheus\\ProjetoVSCode","rootUri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{"launchArgs":["--log-file=totvsls.log","--record=totvsls"]},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode","name":"ProjetoVSCode"}]}}
Content-Length: 52
{"jsonrpc":"2.0","method":"initialized","params":{}}
Content-Length: 9045
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/TOTVS%2012/Microsiga/Protheus/ProjetoVSCode/10_LIB/WSCadCli.prw","languageId":"advpl","version":1,"text":"#INCLUDE \"PROTHEUS.CH\"\r\n#INCLUDE \"RESTFUL.CH\"\r\n#include \"rwmake.ch\"\r\n#include \"tbiconn.ch\"\r\n#INCLUDE \"TOPCONN.CH\"\r\n\r\n//-------------------------------------------------------------------\r\n/*\r\n*/\r\n//-------------------------------------------------------------------\r\nWSRESTFUL WSCadCli DESCRIPTION \"Api REST para Cadastro de Cliente\"\r\n*****************************************************************************************************************\r\n*\r\n*\r\n****\r\n    WSDATA page        AS INTEGER OPTIONAL\r\n    WSDATA pageSize    AS INTEGER OPTIONAL\r\n    \r\n    WSDATA cStatusC    AS STRING  OPTIONAL\r\n    WSDATA cUsuario    AS STRING  OPTIONAL\r\n    WSDATA cKeyPrd     AS STRING  OPTIONAL\r\n\r\n    WSDATA cCodiCli     AS STRING OPTIONAL\r\n    WSDATA cLojaCli     AS STRING OPTIONAL\r\n\r\n        //inclusão e alteração\r\n    WSMETHOD POST IncCli   DESCRIPTION 'IncCli'   WSSYNTAX '/IncCli'   PATH 'IncCli'    PRODUCES APPLICATION_JSON\r\n   \r\n\r\nEND WSRESTFUL\r\n\r\nWSMETHOD POST IncCli WSRECEIVE WSRESTFUL WSCadCli\r\n*****************************************************************************************************************\r\n* /*Inclusão ou abertura de um novo produto*/\r\n*\r\n****\r\nLocal cNumCli := \"\"\r\nLocal lRet  := .T.\r\n\r\nLocal aArea := GetArea()\r\nLocal cQuery := \"\"\r\n\r\nLocal oJson\r\n\r\nLocal aCli  := {}\r\n\r\n//Local nOpcAuto  := MODEL_OPERATION_INSERT\r\nLocal lRet      := .T.\r\n\r\nLocal cNumCli   := \"\"\r\nLocal cCodMun   := \"\"\r\n\r\nLocal aAI0Auto := {}\r\nLocal nOpcAuto := 3//MODEL_OPERATION_INSERT\r\n\r\nLocal   cDescErro   := \"\"\r\nLocal   cDescricao,cCientifico,cTipo,cGrupo,cNCM,cUNIDADE,cOrigem,cOBS\r\n\r\nLocal cJson     := Self:GetContent()\r\nLocal cError    \r\n\r\nPrivate lMsErroAuto := .F.\r\n\r\nConOut(\"[Importaçao de Clientes] INICIO!\")\r\n\r\n    //Definindo o conteúdo como JSON, e pegando o content e dando um parse para ver se a estrutura está ok\r\n    Self:SetContentType(\"application/json\")\r\n    oJson   := JsonObject():New()\r\n    cError  := oJson:FromJson(cJson)\r\n \r\n    //Se tiver algum erro no Parse, encerra a execução\r\n    IF !Empty(cError)\r\n        SetRestFault(500,'Parser Json Error. (Erro no Json)\"')\r\n        lRet    := .F.\r\n    Else\r\n            ///////////////////////////////////////////////////////\r\n            cNumCli  := U_MCONTNUM(\"SA1\",\"01\")\r\n\r\n            aCli := {}\r\n\r\n            cQuery := \"select CC2_MUN FROM CC2010 WHERE D_E_L_E_T_ = '' AND CC2_CODMUN = '\"+EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:CODMUN)))+\"' AND CC2_EST = '\"+EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:EST)))+\"'\"\r\n            TCQUERY cQuery ALIAS \"TRB_MUN\" NEW\r\n\r\n            dbSelectArea(\"TRB_MUN\")\r\n            dbGoTop()\r\n            cCodMun := TRB_MUN->CC2_MUN\r\n            dbSelectArea(\"TRB_MUN\")\r\n            dbCloseArea()\r\n\r\n            /*\r\n            // EXEMPLO \r\n\r\n            {\r\n                \"CLIENTE\": {\r\n                    \"COD\"   : \"010101\",\r\n                    \"LOJA\"  : \"01\",\r\n                    \"PESSOA\": \"J\",\r\n                    \"CNPJ\"  : \"00000000000000\",\r\n                    \"NOME\"  : \"TESTE\",\r\n                    \"ENDER\" : \"TESTE\",\r\n                    \"TIPO\"  : \"X\",\r\n                    \"EST\"   : \"ES\",\r\n                    \"CODMUN\": \"121212\",\r\n                    \"MUNIC\" : \"VILA VELHA\",\r\n                    \"BAIRRO\": \"ITAPUA\",\r\n                    \"PAIS\"  : \"BRASIL\",\r\n                    \"INSCRI\": \"ISENTO\",\r\n                    \"VEND1\" : \"000001\",\r\n                    \"CDPAIS\": \"001\",\r\n                    \"LAT\"   : \"-20.3196644\",\r\n                    \"LONG\"  : \"-40.3384748\",\r\n                    \"IDMOB\" : \"TESTE\",\r\n                    \"DTINTE\": \"20221208\",\r\n                    \"DDD\"   : \"33\",\r\n                    \"DDI\"   : \"55\",\r\n                    \"TELL\"  : \"984022125\",\r\n                    \"EMAIL\" : \"bruno.lage@grupoqualita.com.br\",\r\n                    \"CEP\"   : \"29101565\"\r\n                    }\r\n            }   \r\n            */\r\n\r\n            aAdd(aCli, {\"A1_FILIAL\"  , xFilial(\"SA1\")          \t                              , Nil})\r\n            aAdd(aCli, {\"A1_COD\"     , cNumCli                 \t                              , Nil})\r\n            aAdd(aCli, {\"A1_LOJA\"    , \"01\"   \t                                              , Nil})\r\n            aAdd(aCli, {\"A1_PESSOA\"  , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:PESSOA)))\t      , Nil})\r\n            aAdd(aCli, {\"A1_NOME\"    , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:NOME)))         , Nil})\r\n            aAdd(aCli, {\"A1_NREDUZ\"  , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:NOME)))         , Nil})\r\n            aAdd(aCli, {\"A1_END\"     , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:ENDER)))        , Nil})\r\n            aAdd(aCli, {\"A1_TIPO\"    , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:TIPO)))         , NIL})\r\n            aAdd(aCli, {\"A1_EST\"     , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:EST)))          , Nil})\r\n            aAdd(aCli, {\"A1_COD_MUN\" , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:CODMUN)))       , Nil})\r\n\r\n            aAdd(aCli, {\"A1_BAIRRO\"  , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:BAIRRO)))       , Nil})\r\n            aAdd(aCli, {\"A1_CGC\"     , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:CNPJ)))         , Nil})\r\n\r\n            If \"00000000000000\" == EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:CNPJ)))\r\n                aAdd(aCli, {\"A1_INSCR\"   , \"ISENTO\"                                           , Nil})\r\n            else\r\n                aAdd(aCli, {\"A1_INSCR\"   , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:INSCRI)))   , Nil})\r\n            EndIf \r\n\r\n            aAdd(aCli, {\"A1_CODPAIS\" , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:CDPAIS)))       , Nil})\r\n          //aAdd(aCli, {\"A1_PAIS\"    , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:CODMUN)))       , Nil})\r\n            \r\n            aAdd(aCli, {\"A1_VEND\"    , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:VEND1)))        , Nil})\r\n            \r\n\r\n            aAdd(aCli, {\"A1_XLAT\"    , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:LAT)))          , Nil})\r\n            aAdd(aCli, {\"A1_XLONG\"   , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:LONG)))         , Nil})\r\n\r\n            If \"00000000000000\" == EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:CNPJ)))\r\n                aAdd(aCli, {\"A1_YMOEDA\"  , 2                                                  , Nil})\r\n            else\r\n                aAdd(aCli, {\"A1_YMOEDA\"  , 1                                                  , Nil})\r\n            EndIf\r\n\r\n            If \"00000000000000\" == EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:CNPJ)))\r\n                aAdd(aCli, {\"A1_NATUREZ\"  , \"1.1.02.01 \"                                      , Nil})\r\n            else\r\n                aAdd(aCli, {\"A1_NATUREZ\"  , \"1.1.01.01\"                                       , Nil})\r\n            EndIf\r\n            \r\n            aAdd(aCli, {\"A1_DDD\"    , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:DDD)))           , Nil})\r\n            aAdd(aCli, {\"A1_DDI\"    , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:DDI)))           , Nil})\r\n            aAdd(aCli, {\"A1_TEL\"    , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:TELL)))          , Nil})\r\n            aAdd(aCli, {\"A1_EMAIL\"  , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:EMAIL)))         , Nil})\r\n            aAdd(aCli, {\"A1_CEP\"    , EncodeUTF8(AllTrim(Upper(oJson:CLIENTE:CEP)))           , Nil})\r\n\r\n            aAdd(aAI0Auto,{\"AI0_SALDO\" ,0 ,Nil})\r\n\r\n            lMsErroAuto := .F.\r\n\r\n            MSExecAuto({|a,b,c| CRMA980(a,b,c)}, aCli, nOpcAuto, aAI0Auto)\r\n\r\n\r\n            //////////////////////////////////////////////////////\r\n            FreeObj(oJson)\r\n            Self:SetContentType(\"application/json\")\r\n            oJson   := JsonObject():New()\r\n\r\n            IF lMsErroAuto\r\n                aLog        := GetAutoGRLog()\r\n                //Aqui só me interessa a primeira linha do erro\r\n                cErro += RTRIM(aLog[1])\r\n                //Montando JSON de retorno\r\n                cJson := '{\"RETURN\":\"FALSE\"';\r\n                        + ',\"MESSAGE\":\"'  + EncodeUTF8(substring(cErro,1,200)) +'\"}'\r\n            else\r\n                oJson['RETURN:'] := \"Produto cadastrado com sucesso!\"\r\n            EndIf\r\n            \r\n            cJson:= FwJsonSerialize( oJson )\r\n            Self:SetResponse( cJson ) //-- Seta resposta\r\n\r\n            lRet    := .T.\r\n    EndIf\r\n \r\n    RestArea(aArea)\r\n    FreeObj(oJson)\r\nReturn(lRet)\r\n"}}}
Content-Length: 703
{"jsonrpc":"2.0","id":1,"method":"$totvsserver/reconnect","params":{"reconnectInfo":{"connectionToken":"djM6NjFxOWMxbzU3ZGFsNG1uYTZramNldjRqdHE3ZGdwOjE6MTkyLjE2OC4xLjEwMzoxMjM2OjA6Ny4wMC4yMTAzMjRQOjM=:djE6QkFTRVRFU1RFOkFkbWluOkVrZkdadHZZZ21od3ovK0lvZGVtcTNJbXVEVlhyejd6Mk10Z0JGa09YbE09|djI6MTY4NzI4NjY5NjowOjE6MQ==.DbWdMCddpzLMgevmLL7UC5xhY7B/lzp6oUhgWKwkLcX+zIZC/30b4nPnQ+T1iBgE3AfhJ6yrW0iGTY9GL11VkfMEWBLTg+MqZ7hbeRCZfCpgUR+vnvfOFJ5i8pEA22cG5QmLR3shn1NEBJpcFjgqUKKjfQOOAPDPpduXSRKGTYUVmE/QnzwhmvW8YuSoYoLo8W0PqzzcjvDpkJYqAcZ3U9FLNgrLbg8j+nGC0Ud9awJoKNK1I/93ByOaqMzHJ2OHMy8lUS8OqzA6RwSGNSb3gglS1FFjC4PFwoolMLbVpgPPx5xX5agSktkexBuCpZ7mwI8VMWPXW9zaxsp08E44yg==","serverName":"DEV_COMPILA","connType":3}}}
Content-Length: 148
{"jsonrpc":"2.0","id":2,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"fsencoding","value":"cp1252"}}}
Content-Length: 146
{"jsonrpc":"2.0","id":3,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"autocomplete","value":"LS"}}}
Content-Length: 153
{"jsonrpc":"2.0","id":4,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"notificationlevel","value":"none"}}}
Content-Length: 145
{"jsonrpc":"2.0","id":5,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"linter","value":"enabled"}}}
Content-Length: 148
{"jsonrpc":"2.0","id":6,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"fsencoding","value":"cp1252"}}}
Content-Length: 146
{"jsonrpc":"2.0","id":7,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"autocomplete","value":"LS"}}}
Content-Length: 153
{"jsonrpc":"2.0","id":8,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"notificationlevel","value":"none"}}}
Content-Length: 145
{"jsonrpc":"2.0","id":9,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"linter","value":"enabled"}}}
Content-Length: 76
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Content-Length: 682
{"jsonrpc":"2.0","id":10,"method":"$totvsserver/serverInformations","params":{"serverInformationsInfo":{"connectionToken":"djM6NjFxOWMxbzU3ZGFsNG1uYTZramNldjRqdHE3ZGdwOjE6MTkyLjE2OC4xLjEwMzoxMjM2OjA6Ny4wMC4yMTAzMjRQOjM=:djE6QkFTRVRFU1RFOkFkbWluOkVrZkdadHZZZ21od3ovK0lvZGVtcTNJbXVEVlhyejd6Mk10Z0JGa09YbE09|djI6MTY4NzM2NDk3OTowOjE6MQ==.mJx75+61qgSz8KdrZZVb66ZVCTjKjnqpQ27c1vPkE7VxFEx2cwVZgabnaWc//w1WgmXsSf3cr3NqnajowrDnDAyuztiRforE3xFCSevMJi84irQyq+3yz6ITDxX29vgaapcXK62NPhFEoxXa8/FUX//iAdEVt9BdLT7vscdpG1BMG+xVdKXJOsf7Jdz7GDrjZJ14iZQOQdIQ28NxHuEP6xWxk1RwgSJHfl0B2p6mJPey9+3H/vPy3NZWlL4JF4JPvx0ua0w2ladkSl/dW2iNR9EWPk8r8WUmNZ0sScDiroNqrhjwuOJyxZN1wD6EsNFrkNS/0QttfljGeEsoYsvDGA=="}}}
Content-Length: 184
{"jsonrpc":"2.0","id":11,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"includes","value":"D:\\TOTVS 12\\Microsiga\\Protheus\\include;"}}}
Content-Length: 149
{"jsonrpc":"2.0","id":12,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"fsencoding","value":"cp1252"}}}
Content-Length: 147
{"jsonrpc":"2.0","id":13,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"autocomplete","value":"LS"}}}
Content-Length: 154
{"jsonrpc":"2.0","id":14,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"notificationlevel","value":"none"}}}
Content-Length: 146
{"jsonrpc":"2.0","id":15,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"linter","value":"enabled"}}}
Content-Length: 149
{"jsonrpc":"2.0","id":16,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"fsencoding","value":"cp1252"}}}
Content-Length: 147
{"jsonrpc":"2.0","id":17,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"autocomplete","value":"LS"}}}
Content-Length: 154
{"jsonrpc":"2.0","id":18,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"notificationlevel","value":"none"}}}
Content-Length: 146
{"jsonrpc":"2.0","id":19,"method":"$totvsserver/changeSetting","params":{"changeSettingInfo":{"scope":"advpls","key":"linter","value":"enabled"}}}
Content-Length: 76
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
